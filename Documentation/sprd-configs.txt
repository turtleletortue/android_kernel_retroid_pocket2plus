CONFIG_64BIT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Support 64 bit system.
CONFIG_AARCH32_SHOW_AARCH64_CPUINFO
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] user
	[function] This option show cpuinfo ARMV8.
CONFIG_ADVISE_SYSCALLS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable madvise/fadvise syscalls
CONFIG_AEABI
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Use the ARM EABI to compile the kernel.
CONFIG_AIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] This option enables POSIX asynchronous I/O which may by used
		by some high performance threaded applications. Disabling this
		option saves about 7k.
CONFIG_ALIGNMENT_TRAP
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] ARM processors cannot fetch/store information which is not
			naturally aligned on the bus. This is necessary for correct
			operation of some network protocols.
CONFIG_ALLOW_DEV_COREDUMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Allow device coredump.
CONFIG_ANDROID
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Enable for Android driver.
CONFIG_ANDROID_BINDER_DEVICES
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] vts require. Set with "binder,hwbinder,vndbinder" if the
		version of android later than 8.0.
CONFIG_ANDROID_BINDER_IPC
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] vts require. Binder is used in Android for both communication
		between processes, and remote method invocation.
CONFIG_ANDROID_LOW_MEMORY_KILLER
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] mm
	[must] unknown
	[function] Registers processes to be killed when low memory conditions,
	    this is useful in android-go.
CONFIG_ANDROID_LOW_MEMORY_KILLER_AUTODETECT_OOM_ADJ_VALUES
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] unknown
	[function] Threshold table in lowmemorykiller.
CONFIG_ANDROID_LOW_MEMORY_KILLER_MEMINFO
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] debug
	[function] Show memory information when lmk kills process
CONFIG_ANDROID_PARANOID_NETWORK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] specified config for android
CONFIG_ANON_INODES
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support anonymous inodes.
CONFIG_ARCH_CLOCKSOURCE_DATA
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_DMA_ADDR_T_64BIT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enable the DMA address used 64bit.
CONFIG_ARCH_HAS_CACHE_LINE_SIZE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Support the cache line size function.
CONFIG_ARCH_HAS_DEBUG_VIRTUAL
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_DEVMEM_IS_ALLOWED
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_ELF_RANDOMIZE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] An architecture supports choosing randomized locations for
		stack, mmap, brk, and ET_DYN.
CONFIG_ARCH_HAS_FORTIFY_SOURCE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_GCOV_PROFILE_ALL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support GCOV_PROFILE_ALL.
CONFIG_ARCH_HAS_HOLES_MEMORYMODEL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] The non-contiguous memory block can be handled correctly.
CONFIG_ARCH_HAS_KCOV
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_SET_MEMORY
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_SG_CHAIN
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support kernel sg chain.
CONFIG_ARCH_HAS_STRICT_KERNEL_RWX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_STRICT_MODULE_RWX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAS_TICK_BROADCAST
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Architecture can handle broadcast in a driver-agnostic way.
CONFIG_ARCH_HAS_UBSAN_SANITIZE_ALL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_HAVE_CUSTOM_GPIO_H
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] gpio
	[must] user
	[function] Generic gpio support
CONFIG_ARCH_HIBERNATION_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] power
	[must] user
	[function] PM_SLEEP_SMP depends on it.
CONFIG_ARCH_MIGHT_HAVE_PC_PARPORT
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Support the architecture might have PC parallel port hardware.
CONFIG_ARCH_MMAP_RND_BITS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Use for ASLR of mmap base address.
CONFIG_ARCH_MMAP_RND_BITS_MAX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Use for ASLR of mmap base address.
CONFIG_ARCH_MMAP_RND_BITS_MIN
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Use for ASLR of mmap base address.
CONFIG_ARCH_MMAP_RND_COMPAT_BITS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Number of bits to use for ASLR of mmap base address for compatible applications.
CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MAX
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Number of bits to use for ASLR of mmap base address for compatible applications.
CONFIG_ARCH_MMAP_RND_COMPAT_BITS_MIN
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Number of bits to use for ASLR of mmap base address for compatible applications.
CONFIG_ARCH_MULTIPLATFORM
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Allow multiple platforms to be selected.
CONFIG_ARCH_MULTI_V6_V7
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Enable system support ARM V6 V7.
CONFIG_ARCH_MULTI_V7
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Enable system support ARM V6.
CONFIG_ARCH_NR_GPIO
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] gpio
	[must] console
	[function] Maximum number of GPIOs in the system.
CONFIG_ARCH_OPTIONAL_KERNEL_RWX
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_OPTIONAL_KERNEL_RWX_DEFAULT
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_PHYS_ADDR_T_64BIT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Support the 64bit physical address.
CONFIG_ARCH_PROC_KCORE_TEXT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_SELECT_MEMORY_MODEL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Select memory model.
CONFIG_ARCH_SPARSEMEM_DEFAULT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem module options.
CONFIG_ARCH_SPARSEMEM_ENABLE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Enable sparsemem.
CONFIG_ARCH_SPRD
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] The global sprd debug.
CONFIG_ARCH_SUPPORTS_ATOMIC_RMW
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support atomic rmw.
CONFIG_ARCH_SUPPORTS_DEBUG_PAGEALLOC
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] mm
	[must] userdebug
	[function] Provides a hook to map and unmap pages for debugging purposes.
CONFIG_ARCH_SUPPORTS_LTO_CLANG
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_SUPPORTS_MEMORY_FAILURE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_SUPPORTS_NUMA_BALANCING
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_SUPPORTS_UPROBES
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable the kernel has the ability of uprobe_event.
CONFIG_ARCH_SUSPEND_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] power
	[must] user
	[function] PM_SLEEP_SMP depends on it.
CONFIG_ARCH_USE_BUILTIN_BSWAP
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Modern versions of GCC (since 4.4) have builtin functions
			for handling byte-swapping.
CONFIG_ARCH_USE_CMPXCHG_LOCKREF
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable ARCH_USE_CMPXCHG_LOCKREF for 64 bit since it shows performance
		improvements with Linus' simple stat() test case of up to 50% on a 30 cpu system.
CONFIG_ARCH_VIRT
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARCH_WANT_COMPAT_IPC_PARSE_VERSION
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support compat more ipc parse version.
CONFIG_ARCH_WANT_FRAME_POINTERS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] menu
	[must] console
	[function] Enable kernel support frame pointer.
CONFIG_ARCH_WANT_GENERAL_HUGETLB
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support general huge table.
CONFIG_ARCH_WANT_HUGE_PMD_SHARE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Share pmd page for hugetlb.
CONFIG_ARCH_WANT_IPC_PARSE_VERSION
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Support kernel ipc parse version.
CONFIG_ARM
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Enable for arm architecture.
CONFIG_ARM64
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Enalbe configs about ARM64.
CONFIG_ARM64_4K_PAGES
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Set pages size 4k on ARM64.
CONFIG_ARM64_CONT_SHIFT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM64_CRYPTO
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] ARM64 Accelerated Cryptographic Algorithms.
CONFIG_ARM64_ERRATUM_1024718
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A55 erratum problem.
CONFIG_ARM64_ERRATUM_819472
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
CONFIG_ARM64_ERRATUM_824069
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
CONFIG_ARM64_ERRATUM_826319
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
CONFIG_ARM64_ERRATUM_827319
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
CONFIG_ARM64_ERRATUM_843419
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
CONFIG_ARM64_ERRATUM_845719
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] code
	[subsys] erratum
	[must] console
	[function] Work around for Arm Cortex-A53 erratum problem.
CONFIG_ARM64_ERRATUM_858921
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM64_HW_AFDBM
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] arch
	[must] user
	[function] The ARMv8.1 architecture extensions introduce support for
		hardware updates of the access and dirty information in page.
CONFIG_ARM64_LSE_ATOMICS
	[arch] arm64
	[plat] roc1,sharkl5
	[field] make,code
	[subsys] arch
	[must] user
	[function] ARMv8.1 introduces new atomic instructions that
			are designed specifically to scale in very large systems.
CONFIG_ARM64_MODULE_CMODEL_LARGE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] arch
	[must] console
	[function] Slightly pre-requisites for supporting Transparent Huge Pages.
CONFIG_ARM64_MODULE_PLTS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernek support module plts , PLTS(Procedure Linkage Tables).
CONFIG_ARM64_PAGE_SHIFT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM64_PAN
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] arch
	[must] user
	[function] Privileged Access Never (PAN; part of the ARMv8.1 Extensions)
		prevents the kernel or hypervisor from accessing user-space (EL0) memory directly.
CONFIG_ARM64_SSBD
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM64_UAO
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] arch
	[must] console
	[function] ARM V8.2 feature,Enable support for User Access Override (UAO).
CONFIG_ARM64_VA_BITS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Defined how many bits virtual address the kernel used.
CONFIG_ARM64_VA_BITS_39
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Defined how many bits virtual address the kernel used.
CONFIG_ARMV8_DEPRECATED
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] core
	[must] console
	[function] Legacy software support may require certain instructions
	that have been deprecated or obsoleted in the architecture.
	Enable this config to enable selective emulation of these features.
CONFIG_ARM_AMBA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] Coresight devices depend on AMBA bus,
	   enable it to support coresight architecture.
CONFIG_ARM_ARCH_TIMER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] timer
	[must] console
	[function] Support arch timer.
CONFIG_ARM_ARCH_TIMER_EVTSTREAM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for ARM architected timer event stream generation.
CONFIG_ARM_ARCH_TIMER_OOL_WORKAROUND
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM_CPUIDLE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] cpuidle
	[must] user
	[function] Enable arm/arm64 cpuidle driver
CONFIG_ARM_CPU_SUSPEND
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] power
	[must] user
	[function] Support arm cpu suspend.
CONFIG_ARM_CPU_TOPOLOGY
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support cpu topology definition.
CONFIG_ARM_CRYPTO
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] ARM Accelerated Cryptographic Algorithms
CONFIG_ARM_DMA_MEM_BUFFERABLE
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] console
	[function] With the advent of ARMv7, mapping memory with differing
		types results in unpredictable behaviour, so on these CPUs,
		this option is forced on.
CONFIG_ARM_ERRATA_643719
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM_GIC
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support for ARM GIC.
CONFIG_ARM_GIC_MAX_NR
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM_GIC_V2M
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support for Message Signal Interrupts for system that
	   implement ARM Generic Interrupt Controller: GICv2m.
CONFIG_ARM_GIC_V3
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support ARM GIC V3.
CONFIG_ARM_GIC_V3_ITS
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support GIC_V3_ITS, depend on PCI and PCI_MSI.
CONFIG_ARM_HAS_SG_CHAIN
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] IF ARCH_SPRD, this config will select ARM_HAS_SG_CHAIN.
CONFIG_ARM_HEAVY_MB
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM_L1_CACHE_SHIFT
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Set CPU L1 cache size 1<<6.
CONFIG_ARM_L1_CACHE_SHIFT_6
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Set CPU L1 cache size 1<<6.
CONFIG_ARM_PATCH_IDIV
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM_PATCH_PHYS_VIRT
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Patch physical to virtual translations at runtime.
CONFIG_ARM_PMU
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] ARM PMU framework.
CONFIG_ARM_PSCI
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] arm
	[must] user
	[function] hotplug with security depend on PSCI,
		   enable it to support hotplug
CONFIG_ARM_PSCI_FW
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] hotplug with security depend on PSCI_FW,
	   enable it to support hotplug
CONFIG_ARM_SPRD_HW_CPUFREQ
	[arch] all
	[plat] all
	[field] make
	[subsys] cpufreq
	[must] user
	[function] Enable apcpu hardware dvfs function.
CONFIG_ARM_SPRD_HW_CPUFREQ_NORMAL
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] cpufreq
	[must] user
	[function] Enable apcpu hardware dvfs function in sharkl5 family SOCs.
CONFIG_ARM_SPRD_HW_CPUFREQ_SHARKL3
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ARM_THUMB
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support Thumb user binaries.
CONFIG_ARM_VIRT_EXT
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support VIRT ext.
CONFIG_ASHMEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Enable the Anonymous Shared Memory Subsystem,vts require.
CONFIG_ASN1
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Build a simple ASN.1 grammar compiler that produces
a bytecode output that can be interpreted by
the ASN.1 stream decoder and used to inform
it as to what tags are to be expected in a stream
and what functions  to call on what tags.
CONFIG_ASSOCIATIVE_ARRAY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Generic associative array.
CONFIG_ASYMMETRIC_KEY_TYPE
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Asymmetric (public-key cryptographic) key type, following pixel2.
CONFIG_ASYMMETRIC_PUBLIC_KEY_SUBTYPE
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Asymmetric public-key crypto algorithm subtype
CONFIG_ATAGS
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_AUDIT
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] vts require
CONFIG_AUDITSYSCALL
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_AUDIT_ARCH_COMPAT_GENERIC
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] security
	[must] console
	[function] selinux avc audit
CONFIG_AUDIT_COMPAT_GENERIC
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] security
	[must] console
	[function] selinux avc audit
CONFIG_AUDIT_GENERIC
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] console
	[function] selinux avc audit
CONFIG_AUDIT_TREE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_AUDIT_WATCH
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_AUTO_ZRELADDR
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Auto calculation of the decompressed kernel image address.
CONFIG_BACKLIGHT_CLASS_DEVICE
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Backlight sysfs and core driver.
CONFIG_BACKLIGHT_LCD_SUPPORT
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable display backlight driver.
CONFIG_BACKLIGHT_PWM
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable pwm backlight driver.
CONFIG_BACKLIGHT_SC2703
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] Enable sc2703 backlight & display power
CONFIG_BASE_FULL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Disabling this option reduces the size of miscellaneous core
	kernel data structures. This saves memory on small machines,
	but may reduce performance.
CONFIG_BASE_SMALL
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] Settint the cpu log buffer size.
CONFIG_BCMA_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] AMBA
	[must] user
	[function] Broadcom specific AMBA
CONFIG_BINARY_PRINTF
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Report trace with binary.
CONFIG_BINFMT_ELF
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Kernel support for ELF binaries.
CONFIG_BINFMT_SCRIPT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Kernel support for scripts starting with #!
CONFIG_BITREVERSE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support bit reverse.
CONFIG_BLK_DEBUG_FS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BLK_DEV
	[arch] all
	[plat] all
	[field] make,code
	[subsys] md
	[must] user
	[function] Support block devices.
CONFIG_BLK_DEV_DM
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Device-mapper is a low level volume manager.
	   It works by allowing people to specify mappings for ranges of logical sectors.
CONFIG_BLK_DEV_DM_BUILTIN
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Support BLK_DEV_DM function.
CONFIG_BLK_DEV_INITRD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Initial RAM filesystem and RAM disk (initramfs/initrd) support.
CONFIG_BLK_DEV_IO_TRACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Trace block device IO function.
CONFIG_BLK_DEV_LOOP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Loopback device support
CONFIG_BLK_DEV_LOOP_MIN_COUNT
	[arch] all
	[plat] all
	[field] code
	[subsys] block
	[must] user
	[function] Static number of loop devices to be unconditionally pre-created
	   at init time. we set this value to 0 for known problem.
CONFIG_BLK_DEV_RAM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] user
	[function] RAM block device support
CONFIG_BLK_DEV_RAM_COUNT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] user
	[function] Default number of RAM disks
CONFIG_BLK_DEV_RAM_SIZE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] user
	[function] Default RAM disk size (kbytes).
CONFIG_BLK_DEV_SD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support host udisk function.
CONFIG_BLK_MQ_PCI
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Provide a default queue mapping for pci device.
CONFIG_BLK_MQ_VIRTIO
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BLK_SCSI_REQUEST
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] block
	[must] busybox_console
	[function] Provide block layer support for the kernel.
	   If this option is disabled:
	    - block device files will become unusable
	    - some filesystems (such as ext3) will become
	   unavailable.
CONFIG_BLOCK_COMPAT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] block
	[must] busybox_console
	[function] block_dev support compat_ioctl func.
CONFIG_BOOTPARAM_HUNG_TASK_PANIC_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Trigger kernel panic when detect hung task.
CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BOOTPARAM_SOFTLOCKUP_PANIC_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Trigger kernel panic when detect soft-lockup.
CONFIG_BOUNCE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] bounce buffer handling for block devices.
CONFIG_BPF
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support Berkeley Packet Filter.
CONFIG_BPF_EVENTS
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BPF_SYSCALL
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BQL
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] depends on SYSFS, Byte queue limits are a mechanism to limit the size of the transmit
	hardware queue on a NIC by a number of bytes. The goal of these byte
	queue limits is to reduce latency caused by excessive queuing in
	hardware without sacrificing throughput.
CONFIG_BRANCH_PROFILE_NONE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] No branch profiling
CONFIG_BSD_PROCESS_ACCT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BSD_PROCESS_ACCT_V3
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_BUG
	[arch] all
	[plat] all
	[field] code
	[subsys] debug
	[must] debug
	[function] Disabling this option eliminates support for BUG and WARN, reducing
	the size of your kernel image and potentially quietly ignoring numerous fatal conditions.
	You should only consider disabling this option for embedded systems with no facilities for
	reporting errors.
CONFIG_BUILDTIME_EXTABLE_SORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable the kernel sort the exeception table.
CONFIG_BUILD_ARM64_DTC
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] core
	[must] console
	[function] Path of DTC tools. Compiling for dtb/dtbo.
CONFIG_BUILD_ARM64_DTC_FLAGS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] core
	[must] console
	[function] Parameters of DTC tools.
CONFIG_BUILD_ARM_DTC
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Path of DTC tools. Compiling for dtb/dtbo.
CONFIG_BUILD_ARM_DTC_FLAGS
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Path of DTC tools. Compiling for dtb/dtbo.
CONFIG_BUILD_BIN2C
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] user
	[function] vts require, Enable file format exchange from BIN to C.
	   enable by IKCONFIG
CONFIG_CACHE_L2X0
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CC_OPTIMIZE_FOR_SIZE
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] user
	[function] Optimize for size.
CONFIG_CC_STACKPROTECTOR
	[arch] all
	[plat] all
	[field] code
	[subsys] build
	[must] user
	[function] Set when a stack-protector mode is enabled, so that the build
	can enable kernel-side support for the GCC feature.
CONFIG_CC_STACKPROTECTOR_STRONG
	[arch] all
	[plat] all
	[field] make
	[subsys] build
	[must] user
	[function] Functions will have the stack-protector canary logic added.
CONFIG_CFG80211
	[arch] all
	[plat] all
	[field] code, menu,make
	[subsys] wireless
	[must] user
	[function] is the Linux wireless LAN (802.11) configuration API
CONFIG_CFG80211_CERTIFICATION_ONUS
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Give support to CFG80211_REG_CELLULAR_HINTS.
CONFIG_CFG80211_CRDA_SUPPORT
	[arch] all
	[plat] all
	[field] code
	[subsys] wireless
	[must] user
	[function] Central Regulatory Domain Agent
CONFIG_CFG80211_DEFAULT_PS
	[arch] all
	[plat] all
	[field] code
	[subsys] wireless
	[must] user
	[function] Enables powersave mode by default
CONFIG_CFG80211_INTERNAL_REGDB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] wireless
	[must] user
	[function] is regulatory rules database used by Linux.
CONFIG_CFG80211_REG_CELLULAR_HINTS
	[arch] all
	[plat] all
	[field] code
	[subsys] net
	[must] user
	[function] Give top priority to country code from SIM card.
CONFIG_CGROUPS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, This option adds support for grouping sets of
	processes together, for use with process control subsystems such as
	Cpusets, CFS, memory controls or device isolation.
CONFIG_CGROUP_BPF
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CGROUP_CPUACCT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Provides a simple Resource Controller for monitoring the
	total CPU consumed by the tasks in a cgroup.
CONFIG_CGROUP_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Exports useful debugging information about the cgroups framework. Disabled on featurephone.
CONFIG_CGROUP_FREEZER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Freezer cgroup subsystem(vts require)
CONFIG_CGROUP_SCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Group CPU scheduler(vts require)
CONFIG_CHARGER_FAN54015
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charge
CONFIG_CHARGER_MANAGER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Manage battery capacity and monitor charge status
CONFIG_CHARGER_SC2703
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable charg
CONFIG_CLEANCACHE
	[arch] all
	[plat] all
	[field] make
	[subsys] memory
	[must] user
	[function] This function is used to enable charge
CONFIG_CLKDEV_LOOKUP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] user
	[function] This macro is used to provide interfaces
		for clock customer.
CONFIG_CLKSRC_MMIO
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] clock
	[must] console
	[function] Enable clocksource in mmio mode.
CONFIG_CLONE_BACKWARDS
	[arch] all
	[plat] all
	[field] code
	[subsys] clock
	[must] console
	[function] Architecture has tls passed as the 4th argument of clone(2),
	not the 5th one.
CONFIG_CLZ_TAB
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by MPILIB
CONFIG_CMDLINE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] arch
	[must] user
	[function] Default kernel command string. Set to NULL.
CONFIG_COMMON_CLK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] arch
	[must] console
	[function] Clock driver needs common clock framework.
CONFIG_COMPACTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Allow for memory compaction.
CONFIG_COMPAT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] This option enables support for a 32-bit EL0 running under a 64-bit
	kernel at EL1.
CONFIG_COMPAT_BINFMT_ELF
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support compat binary format elf.
CONFIG_COMPAT_OLD_SIGACTION
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] Enable kernel support compat old signal action.
	[function]
CONFIG_CONFIGFS_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Configfs is a RAM-based filesystem that provides the
	   converse of sysfs's functionality. Where sysfs is a
	   filesystem-based view of kernel objects, configfs is
	   a filesystem-based manager of kernel objects, or
	   config_items.
CONFIG_CONSOLE_LOGLEVEL_DEFAULT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CONTEXT_SWITCH_TRACER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Scheduler switch trace event
CONFIG_COREDUMP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable core dump support.
CONFIG_CORESIGHT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight architecture.
CONFIG_CORESIGHT_LINKS_AND_SINKS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight funnel/etf/etr
	   modules.
CONFIG_CORESIGHT_LINK_AND_SINK_TMC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight etb module.
CONFIG_CORESIGHT_SOURCE_ETM4X
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] kernel core
	[must] debug
	[function] This function is used to enable coresight etm4x modules.
CONFIG_CP15_BARRIER_EMULATION
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Emulate CP15 Barrier instructions.
CONFIG_CPUFREQ_DT
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CPUFREQ_DT_PLATDEV
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CPUSETS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Let you create and manage CPUSETs which allow dynamically
		partitioning a system into sets of CPUs and Memory Nodes and
		assigning tasks to run only within those sets.
CONFIG_CPU_32v6K
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Support 32 CPU ARM V6.
CONFIG_CPU_32v7
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Support 32 CPU ARM V7.
CONFIG_CPU_ABRT_EV7
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support CPU type ABRT EV7.
CONFIG_CPU_CACHE_V7
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] core
	[must] console
	[function] Support cpu cache in V7 version.
CONFIG_CPU_CACHE_VIPT
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support VIPT(Virtual Index Physical Tag).
CONFIG_CPU_COPY_V6
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support CPU copy version V6.
CONFIG_CPU_CP15
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support CP15 processor.
CONFIG_CPU_CP15_MMU
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Enable CP15 processor support MMU.
CONFIG_CPU_FREQ
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable cpufreq
CONFIG_CPU_FREQ_DEFAULT_GOV_SCHEDUTIL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] Enable schedutil as a default governor
CONFIG_CPU_FREQ_GOV_ATTR_SET
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] Enable cpufreq governor sysfs interface
CONFIG_CPU_FREQ_GOV_PERFORMANCE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable performance as an available governor
CONFIG_CPU_FREQ_GOV_POWERSAVE
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable powersave as an available governor
CONFIG_CPU_FREQ_GOV_SCHEDUTIL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable schedutil as an available governor
CONFIG_CPU_FREQ_GOV_USERSPACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] enable userspace as an available governor
CONFIG_CPU_FREQ_STAT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] cpufreq
	[must] user
	[function] statistical information for dvfs
CONFIG_CPU_FREQ_TIMES
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] cpufreq
	[must] debug
	[function] This driver exports CPU time-in-state information through procfs file system.
CONFIG_CPU_HAS_ASID
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support ASID.
CONFIG_CPU_IDLE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] cpuidle
	[must] console
	[function] CPU idle pm support.
CONFIG_CPU_IDLE_GOV_LADDER
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CPU_IDLE_GOV_MENU
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] cpuidle
	[must] user
	[function] Menu governor (for tickless system).
CONFIG_CPU_IDLE_MULTIPLE_DRIVERS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] cpuidle
	[must] user
	[function] Support for multiple idle drivers.
CONFIG_CPU_PABRT_V7
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support CPU type PABRT EV7.
CONFIG_CPU_PM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] cpu power management
CONFIG_CPU_RMAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] These functions maintain a mapping from CPUs to some ordered set of
		objects with CPU affinities.
CONFIG_CPU_SPECTRE
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CPU_THUMB_CAPABLE
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CPU_TLB_V7
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support CPU TLB V7.
CONFIG_CPU_V7
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support ARM V7 processor.
CONFIG_CRC16
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC16 functions.
CONFIG_CRC32
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC32/CRC32c functions.
CONFIG_CRC32_SLICEBY8
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Slice by 8 bytes.
CONFIG_CRC7
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] core
	[function] Support CRC7.
CONFIG_CRC_CCITT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support CRC-CCITT functions.
CONFIG_CRC_ITU_T
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC ITU-T V.41 functions.
CONFIG_CROSS_COMPILE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Cross-compiler tool prefix. Doesn't need it, set to "".
CONFIG_CROSS_MEMORY_ATTACH
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable process_vm_readv/writev syscalls.
CONFIG_CRYPTO
	[arch] all
	[plat] all
	[field] meun
	[subsys] security
	[must] user
	[function] Cryptographic API.
CONFIG_CRYPTO_ACOMP2
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_AEAD
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_AEAD2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_AES
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] AES cipher algorithms.
CONFIG_CRYPTO_AES_ARM64
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_AES_ARM64_CE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES core cipher using ARMv8 Crypto Extensions.
CONFIG_CRYPTO_AES_ARM64_CE_BLK
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES in ECB/CBC/CTR/XTS modes using ARMv8 Crypto Extensions.
CONFIG_CRYPTO_AES_ARM64_CE_CCM
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES in CCM mode using ARMv8 Crypto Extensions.
CONFIG_CRYPTO_AES_ARM64_NEON_BLK
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] AES in ECB/CBC/CTR/XTS modes using NEON instructions.
CONFIG_CRYPTO_AES_ARM_CE
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] Accelerated AES using ARMv8 Crypto Extensions
CONFIG_CRYPTO_AKCIPHER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CONFIG_CRYPTO_AKCIPHER2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CONFIG_CRYPTO_ALGAPI
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CONFIG_CRYPTO_ALGAPI2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] selected by other configs.
CONFIG_CRYPTO_ANSI_CPRNG
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Pseudo Random Number Generation for Cryptographic modules.
CONFIG_CRYPTO_ARC4
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] ARC4 cipher algorithm.
CONFIG_CRYPTO_AUTHENC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Authenc support.
CONFIG_CRYPTO_BLKCIPHER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_BLKCIPHER2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_CBC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] CBC support.
CONFIG_CRYPTO_CMAC
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "CMAC support"(Cipher-based Message Authentication Code).
CONFIG_CRYPTO_CRC32
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] CRC32 CRC algorithm.
CONFIG_CRYPTO_CRC32C
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] console
	[function] CRC32c CRC algorithm.
CONFIG_CRYPTO_CRYPTD
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] Cryptographic API
CONFIG_CRYPTO_CTR
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "CTR support"(Counter mode).
CONFIG_CRYPTO_CTS
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "CTS support"(Cipher Text Stealing).
CONFIG_CRYPTO_DEFLATE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] crypto
	[must] console
	[function] Deflate compression algorithm.
CONFIG_CRYPTO_DES
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] DES and Triple DES EDE cipher algorithms.
CONFIG_CRYPTO_DEV_VIRTIO
	[arch] arm64
	[plat] roc1,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_DRBG
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_DRBG_HMAC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_DRBG_MENU
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] NIST SP800-90A DRBG.
CONFIG_CRYPTO_ECB
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] ECB support.
CONFIG_CRYPTO_ECHAINIV
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Encrypted Chain IV Generator.
CONFIG_CRYPTO_ENGINE
	[arch] arm64
	[plat] roc1,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_GCM
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] Support for Galois/Counter Mode (GCM) and Galois Message
Authentication Code (GMAC). Required for IPSec. The new feature on androidp.
If don't enable this, when luncher boot the screen will print error info. eg.Bug 980109
CONFIG_CRYPTO_GF128MUL
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] Efficient table driven implementation of multiplications in the field GF(2^128).
CONFIG_CRYPTO_GHASH
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] GHASH is message digest algorithm for GCM (Galois/Counter Mode).
CONFIG_CRYPTO_GHASH_ARM64_CE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] GHASH (for GCM chaining mode) using ARMv8 Crypto Extensions.
CONFIG_CRYPTO_GHASH_ARM_CE
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] PMULL-accelerated GHASH using ARMv8 Crypto Extensions
CONFIG_CRYPTO_HASH
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_HASH2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_HASH_INFO
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] hash info symbol
CONFIG_CRYPTO_HMAC
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] HMAC support.
CONFIG_CRYPTO_HW
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Hardware crypto devices.
CONFIG_CRYPTO_JITTERENTROPY
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Jitterentropy Non-Deterministic Random Number Generator.
CONFIG_CRYPTO_KPP2
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_LZ4
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_LZO
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] one compress algorithm
CONFIG_CRYPTO_MANAGER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Cryptographic algorithm manager.
CONFIG_CRYPTO_MANAGER2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_MANAGER_DISABLE_TESTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Disable run-time self tests.
CONFIG_CRYPTO_MD4
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] MD4 digest algorithm
CONFIG_CRYPTO_MD5
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function]  MD5 digest algorithm.
CONFIG_CRYPTO_NULL
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Null algorithms。
CONFIG_CRYPTO_NULL2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_RNG
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_RNG2
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_RNG_DEFAULT
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_SEQIV
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] This IV generator generates an IV based on a sequence number by xoring it with a salt.
CONFIG_CRYPTO_SHA1
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] SHA1 digest algorithm.
CONFIG_CRYPTO_SHA1_ARM
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA1 digest algorithm (ARM-asm)
CONFIG_CRYPTO_SHA1_ARM64_CE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] SHA-1 digest algorithm (ARMv8 Crypto Extensions).
CONFIG_CRYPTO_SHA1_ARM_CE
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA2 digest algorithm (ARM-crypto-extension)
CONFIG_CRYPTO_SHA256
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] SHA224 and SHA256 digest algorithm.
CONFIG_CRYPTO_SHA256_ARM
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA256 digest algorithm (ARM-asm)
CONFIG_CRYPTO_SHA256_ARM64
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_SHA2_ARM64_CE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] security
	[must] user
	[function] SHA-224/SHA-256 digest algorithm (ARMv8 Crypto Extensions).
CONFIG_CRYPTO_SHA2_ARM_CE
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA2 digest algorithm (ARM-crypto-extension)
CONFIG_CRYPTO_SHA512
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] SHA512 secure hash standard (DFIPS 180-2). New feature on Android P.
If don't enable this, when luncher boot the screen will print error info. eg.Bug 980109
CONFIG_CRYPTO_SHA512_ARM
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] crypto
	[must] none
	[function] SHA512 digest algorithm (ARM-asm)
CONFIG_CRYPTO_SIMD
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_CRYPTO_TWOFISH
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] make twofish driver to be compiled for sd card requirement.
CONFIG_CRYPTO_TWOFISH_COMMON
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] make twofish driver to be compiled for sd card requirement.
CONFIG_CRYPTO_WORKQUEUE
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] Selected by other configs.
CONFIG_CRYPTO_XCBC
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] Support CRYPTO_XCBC.
CONFIG_CRYPTO_XTS
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] tristate "XTS support"(IEEE1619/D16 narrow block cipher use with aes-xts-plain,
	   key size 256, 384 or 512 bits).
CONFIG_CUSE
	[arch] all
	[plat] all
	[field] menu make
	[subsys] fs
	[must] user
	[function] tristate "Character device in Userspace support".
CONFIG_DAX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DCACHE_WORD_ACCESS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Access dcache in word.
CONFIG_DEBUG_BUGVERBOSE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] For debug bugverbose.
CONFIG_DEBUG_DRIVER
	[arch] arm64
	[plat] sharkl5
	[field] make,code
	[subsys] core
	[must] debug
	[function] Enable the device debug information.
CONFIG_DEBUG_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] debug
	[function] Support Debug Filesystem.
CONFIG_DEBUG_GPIO
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DEBUG_INFO
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable debug info.
CONFIG_DEBUG_KERNEL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable kernel debug.
CONFIG_DEBUG_LL_INCLUDE
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] debug
	[must] console
	[function] Support for debug include path.
CONFIG_DEBUG_PERF_USE_VMALLOC
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DEBUG_RODATA_TEST
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DECOMPRESS_BZIP2
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support bzip2 decompress format.
CONFIG_DECOMPRESS_GZIP
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support kernel decompress gzip.
CONFIG_DECOMPRESS_LZMA
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support lzma decompress format.
CONFIG_DEFAULT_CFQ
	[arch] all
	[plat] all
	[field] menu
	[subsys] block
	[must] busybox_console
	[function] default io scheduler strings "cfq".
CONFIG_DEFAULT_HOSTNAME
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Default hostname. Set to "(none)".
CONFIG_DEFAULT_HUNG_TASK_TIMEOUT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] set value sysctl_hung_task_timeout_secs.
CONFIG_DEFAULT_IOSCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] block
	[must] busybox_console
	[function] default io scheduler config.
CONFIG_DEFAULT_MMAP_MIN_ADDR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Low address space to protect from user allocation.
CONFIG_DEFAULT_SECURITY
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] lsm
CONFIG_DEFAULT_SECURITY_SELINUX
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] user
	[function] vts require
CONFIG_DEFAULT_TCP_CONG
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] default algorithm of congestion control
CONFIG_DEFAULT_USE_ENERGY_AWARE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Enable EAS feature for schedule
CONFIG_DEFCONFIG_LIST
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Set path of defconfig.
CONFIG_DETECT_HUNG_TASK
	[arch] all
	[plat] all
	[field] code,make
	[subsys] core
	[must] debug
	[function] Detect hung task.
CONFIG_DEVFREQ_GOV_SIMPLE_ONDEMAND
	[arch] all
	[plat] all
	[field] code
	[subsys] devfreq
	[must] home
	[function] Support gpu dfs/dvfs logic.
CONFIG_DEVFREQ_GOV_SPRD_SCENE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] Sprd govanor can selected by Sprd_auto_dfs driver.
	   Userspace set scene to this govanor and then govnor send freq
	   request to driver.
CONFIG_DEVFREQ_SPRD_AUTO_DFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] This function is used to enable ddr auto dfs function
	   on DDRC v1 and and later version
CONFIG_DEVTMPFS
	[arch] arm64
	[plat] roc1,sharkl3
	[field] make,code
	[subsys] core
	[must] console
	[function] Maintain a devtmpfs filesystem to mount at /dev.
CONFIG_DEVTMPFS_MOUNT
	[arch] arm64
	[plat] roc1,sharkl3
	[field] code
	[subsys] core
	[must] console
	[function] Automount devtmpfs at /dev, after the kernel mounted the rootfs.
CONFIG_DIRECT_SWAPPINESS
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] unknown
	[function] Allow to adjust direct reclaim swappiness
CONFIG_DISP_PM_DOMAIN_SHARKL3
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] make
	[subsys] video
	[must] home
	[function] SPRD display PM Generic Domain for SharkL3
CONFIG_DMADEVICES
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support DMA devices.
CONFIG_DMA_ENGINE
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support DMA engine.
CONFIG_DMA_OF
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support of DMA.
CONFIG_DMA_SHARED_BUFFER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support DMA share buffer.
CONFIG_DMA_VIRTUAL_CHANNELS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DM_BUFIO
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] depends on BLK_DEV_DM, This interface allows you to do buffered I/O on a device
	   and acts as a cache, holding recently-read blocks in memory and performin delayed
	   writes.
CONFIG_DM_CRYPT
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on BLK_DEV_DM, This device-mapper target allows you to create a device that
	   transparently encrypts the data on it.
CONFIG_DM_UEVENT
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] make DM driver to be compiled for sd card requirement.
CONFIG_DM_VERITY
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on BLK_DEV_DM, This device-mapper target creates a read-only device.
	   Verity target one function in The device mapper.
CONFIG_DM_VERITY_AVB
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] md
	[must] none
	[function] Depends on DM_VERITY, Enables Android Verified Boot platform-specific error behavior.
CONFIG_DM_VERITY_FEC
	[arch] all
	[plat] all
	[field] make
	[subsys] md
	[must] none
	[function] Depends on DM_VERITY, add forward error correction support to dm-verity.
CONFIG_DNOTIFY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Dnotify is a directory-based per-fd file change
	   notification system that uses signals to communicate
	   events to user-space.  There exist superior
	   alternatives, but some applications may still rely on
	   dnotify.
CONFIG_DNS_RESOLVER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] depends on NET && KEYS, support for the DNS Resolver key type
CONFIG_DQL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] The goal of dynamic queue limits (dql) is to set the queue limit, number of objects to the queue, to be minimized
	without allowing the queue to be starved.
CONFIG_DRAGONRISE_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] DragonRise Inc. force feedback
CONFIG_DRM
	[arch] all
	[plat] all
	[field] make
	[subsys] gpu
	[must] home
	[function] Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)
CONFIG_DRM_BRIDGE
	[arch] all
	[plat] all
	[field] menu
	[subsys] gpu
	[must] home
	[function] Display Interface Bridges
CONFIG_DRM_FBDEV_EMULATION
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_FBDEV_OVERALLOC
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_GEM_CMA_HELPER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_KMS_CMA_HELPER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_KMS_FB_HELPER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_KMS_HELPER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_MIPI_DSI
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_PANEL
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_PANEL_BRIDGE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_SPRD
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DRM_SPRD_GSP
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_DST_CACHE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for dst cache.
CONFIG_DTC
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support the device-tree-compiler.
CONFIG_DT_IDLE_STATES
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] cpuidle
	[must] user
	[function] This macro is used to open cpuidle and light sleep function.
CONFIG_DUAL_ROLE_USB_INTF
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support generic DUAL ROLE sysfs interface.
CONFIG_DUMMY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Dummy net driver support:This is essentially a bit-bucket device (i.e. traffic you send to
	this device is consigned into oblivion) with a configurable IP address.
CONFIG_DYNAMIC_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] core,usb
	[must] debug
	[function] Enable/disalbe dynamic debug function.
CONFIG_DYNAMIC_FTRACE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] user
	[function] Enable/disable function tracing dynamically.
CONFIG_DYNAMIC_FTRACE_WITH_REGS
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_EDAC
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] EDAC (Error Detection And Correction) reporting.
CONFIG_EDAC_ATOMIC_SCRUB
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Support EDAC atomic scrub.
CONFIG_EDAC_LEGACY_SYSFS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] EDAC legacy sysfs.
CONFIG_EDAC_SUPPORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support EDAC.
CONFIG_EFI_PARTITION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] depends on PARTITION_ADVANCED
CONFIG_ELFCORE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ELF_CORE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable support for generating core dumps. Disabling saves about 4k.
CONFIG_EMBEDDED
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] user
	[function] vts require, Embedded system.
CONFIG_ENABLE_DEFAULT_TRACERS
	[arch] all
	[plat] all
	[field] make
	[subsys] trace
	[must] user
	[function] cts require, enable tracer config
CONFIG_ENABLE_MUST_CHECK
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable __must_check logic.
CONFIG_ENABLE_WARN_DEPRECATED
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable __deprecated logic.
CONFIG_ENCRYPTED_KEYS
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] none
	[function] tristate "ENCRYPTED KEYS"
CONFIG_ENHANCE_SMAPS_INFO
	[arch] arm64
	[plat] roc1,sharkl5
	[field] make
	[subsys] mm
	[must] debug
	[function] Show more smaps info.
CONFIG_EPOLL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable eventpoll support.
CONFIG_EVENTFD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Enable eventfd() system call.
CONFIG_EVENT_TRACING
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] The main swtich butten for event ftrace.
CONFIG_EXFAT_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must]
	[function] exfat filesystem.
CONFIG_EXFAT_VIRTUAL_XATTR
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must]
	[function] exfat support extended attribute.
CONFIG_EXFAT_VIRTUAL_XATTR_SELINUX_LABEL
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must]
	[function] exfat selinux label for sdcardf.
CONFIG_EXPERT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Configure standard kernel features (expert users).
CONFIG_EXT4_ENCRYPTION
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] none
	[function] Enable encryption of ext4 files and directories.
CONFIG_EXT4_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] busybox_console
	[function] ext4 filesystem
CONFIG_EXT4_FS_ENCRYPTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable encryption of ext4 files and directories.
CONFIG_EXT4_FS_SECURITY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] Security labels support alternative access control
	   models implemented by security modules like SELinux.
	   This option enables an extended attribute handler for
	   file security labels in the ext4 filesystem.
CONFIG_EXT4_RESERVE_SPACE_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Support for reserve space black and white list filter
	   feature.
CONFIG_EXTCON
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_EXTCON_USB_GPIO
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_EXTRA_FIRMWARE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] External firmware blobs to build into the kernel binary, Set to "".
CONFIG_E_SHOW_MEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib,mm
	[must] console
	[function] show enhanced meminfo.
CONFIG_F2FS_CHECK_FS
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] code
	[subsys] fs
	[must] user
	[function] Enable F2FS consistency checking feature.
CONFIG_F2FS_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Enable f2fs file system.
CONFIG_F2FS_FS_ENCRYPTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable encryption of f2fs files and directories.
CONFIG_F2FS_FS_SECURITY
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Enable F2FS Security Labels.
CONFIG_F2FS_FS_XATTR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Enable F2FS extended attributes.
CONFIG_F2FS_RESERVE_SPACE_FILTER
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable f2fs reserve space.
CONFIG_F2FS_STAT_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Enable F2FS Status Information.
CONFIG_FAIR_GROUP_SCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Group scheduling for SCHED_OTHER
CONFIG_FANOTIFY
	[arch] all
	[plat] all
	[field] make,menu
	[subsys] fs
	[must] user
	[function] Enable encryption of f2fs files and directories.
CONFIG_FANOTIFY_ACCESS_PERMISSIONS
	[arch] all
	[plat] all
	[field] make,menu
	[subsys] fs
	[must] user
	[function] Filesystem wide access notification.
CONFIG_FAST_CHARGER_SC2730
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] power
	[must] user
	[function] This function is used to enable fast charger
CONFIG_FAT_DEFAULT_CODEPAGE
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Value of fat_default_codepage config.
CONFIG_FAT_DEFAULT_IOCHARSET
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Fat fs default iocharset config.
CONFIG_FAT_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Fat filesystem.
CONFIG_FB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] vts function
CONFIG_FB_CFB_COPYAREA
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_CFB_FILLRECT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_CFB_IMAGEBLIT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_CMDLINE
	[arch] all
	[plat] all
	[field] make
	[subsys] video
	[must] home
	[function] framebuffer cmdline support and vts function
CONFIG_FB_DEFERRED_IO
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_NOTIFY
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_SYS_COPYAREA
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_SYS_FILLRECT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_SYS_FOPS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FB_SYS_IMAGEBLIT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FIB_RULES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPv4 Forwarding Information Base: policy rules
CONFIG_FILE_LOCKING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] This option enables standard file locking support,
	   required for filesystems like NFS and for the flock()
	   system call.
CONFIG_FIRMWARE_IN_KERNEL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Include in-kernel firmware blobs in kernel binary.
CONFIG_FIXED_PHY
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FIX_EARLYCON_MEM
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] IF MMU, enable kernel support earlycon fixmap.
CONFIG_FLASH_SC2703
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make
	[subsys] misc
	[must] unknown
	[function] compile flash sc2703 driver
CONFIG_FLATMEM
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Memory model.
CONFIG_FLAT_NODE_MEM_MAP
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Flat memory.
CONFIG_FORCE_MAX_ZONEORDER
	[arch] all
	[plat] all
	[field] menu
	[subsys] video
	[must] home
	[function] Enable to allocate large continuous physical pages.
CONFIG_FRAME_POINTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Compile the kernel with frame pointers, kernel image will be slightly
	larger and slower, but it gives very useful debugging information in case of kernel bugs.
CONFIG_FRAME_WARN
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Warn for stack frames larger than (needs gcc 4.4).
CONFIG_FREEZER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] control user space processes and some kernel threads suspend
	   during hibernation or system-wide suspend
CONFIG_FSNOTIFY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] File status changed notify function
CONFIG_FS_ENCRYPTION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] Enable encryption of fs files and directories.
CONFIG_FS_MBCACHE
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] busybox_console
	[function] Meta block cache for Extended Attributes (ext2/ext3/
	   ext4).
CONFIG_FS_POSIX_ACL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] POSIX Access Control Lists (ACLs) support.
CONFIG_FTRACE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Tracers
CONFIG_FTRACE_MCOUNT_RECORD
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Trace mcount record.
CONFIG_FTRACE_SYSCALLS
	[arch] arm64
	[plat] roc1
	[field] code,make
	[subsys] core
	[must] debug
	[function] Trace syscalls.
CONFIG_FUEL_GAUGE_SC27XX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FUNCTION_GRAPH_TRACER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Trace function graph.
CONFIG_FUNCTION_PROFILER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Trace function profiler.
CONFIG_FUNCTION_TRACER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Enable/disable function tracer.
CONFIG_FUSE_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Fuse filesystem support.
CONFIG_FUTEX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Disabling this option will cause the kernel to be built without
	support for "fast userspace mutexes".  The resulting kernel may not
	run glibc-based applications correctly.
CONFIG_FUTEX_PI
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_FW_LOADER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Userspace firmware loading support.
CONFIG_FW_LOADER_USER_HELPER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] select by FW_LOADER_USER_HELPER_FALLBACK.
CONFIG_FW_LOADER_USER_HELPER_FALLBACK
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] This option enables / disables the invocation of user-helper
	(e.g. udev) for loading firmware files as a fallback after the
	direct file loading in kernel fails.
CONFIG_GENERIC_ADC_THERMAL
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] This function is used to config thermal moudle to get
	   adc sensor temperature.
CONFIG_GENERIC_ALLOCATOR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Kernel support the generic allocator.
CONFIG_GENERIC_ARCH_TOPOLOGY
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GENERIC_BUG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] console
	[function] Generic support for BUG().
CONFIG_GENERIC_BUG_RELATIVE_POINTERS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] debug
	[must] console
	[function] use 32-bit pointers relative to the containing
	struct bug_entry for bug_addr and file.
CONFIG_GENERIC_CALIBRATE_DELAY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support default delay calibration.
CONFIG_GENERIC_CLOCKEVENTS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] console
	[function] Enable kernel support generic clock event.
CONFIG_GENERIC_CLOCKEVENTS_BROADCAST
	[arch] all
	[plat] all
	[field] make,code
	[subsys] clock
	[must] console
	[function] Clockevents broadcasting infrastructure.
CONFIG_GENERIC_CPU_AUTOPROBE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support cpu auto probe.
CONFIG_GENERIC_CSUM
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Enalbe kernel support checksum.
CONFIG_GENERIC_EARLY_IOREMAP
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Temporary boot-time mappings.
CONFIG_GENERIC_HWEIGHT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support hamming weight of a N-bit word.
CONFIG_GENERIC_IDLE_POLL_SETUP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support generic idle poll.
CONFIG_GENERIC_IO
	[arch] all
	[plat] all
	[field] menu
	[subsys] block
	[must] user
	[function] Generic IO.
CONFIG_GENERIC_IRQ_EFFECTIVE_AFF_MASK
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GENERIC_IRQ_MIGRATION
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] interrupt
	[must] console
	[function] Enable kernel support irq migration.
CONFIG_GENERIC_IRQ_PROBE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Enable kernel support generic irq probe.
CONFIG_GENERIC_IRQ_SHOW
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Use the generic /proc/interrupts implementation.
CONFIG_GENERIC_IRQ_SHOW_LEVEL
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Print level/edge extra information.
CONFIG_GENERIC_MSI_IRQ
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] msi
	[must] user
	[function] Generic MSI interrupt support.
CONFIG_GENERIC_MSI_IRQ_DOMAIN
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] msi
	[must] user
	[function] Generic MSI interrupt domain support.
CONFIG_GENERIC_NET_UTILS
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support net utils.
CONFIG_GENERIC_PCI_IOMAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support pci iomap.
CONFIG_GENERIC_PHY
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GENERIC_PINCONF
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Generic pin configuration support.
CONFIG_GENERIC_PINMUX_FUNCTIONS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GENERIC_SCHED_CLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support the generic sched clock.
CONFIG_GENERIC_SMP_IDLE_THREAD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support smp idle.
CONFIG_GENERIC_STRNCPY_FROM_USER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support strncpy from user.
CONFIG_GENERIC_STRNLEN_USER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support strnlen from user.
CONFIG_GENERIC_TIME_VSYSCALL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] soc
	[must] user
	[function] select by others.
CONFIG_GENERIC_TRACER
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable/disalbe generic tracer.
CONFIG_GLOB
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIOLIB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
CONFIG_GPIOLIB_IRQCHIP
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIO_EIC_SPRD
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIO_GENERIC
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIO_GENERIC_PLATFORM
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIO_PLUS_SPRD
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIO_PMIC_EIC_SPRD
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_GPIO_SPRD
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio support
CONFIG_GPIO_SYSFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Generic gpio sysfs support
CONFIG_GREENASIA_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] GreenAsia (Product ID 0x12) force feedback support
CONFIG_GRO_CELLS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HANDLE_DOMAIN_IRQ
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Support the handle of irq domain.
CONFIG_HARDENED_USERCOPY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] user
	[function] vts require, Harden memory copies between kernel and userspace
CONFIG_HARDEN_BRANCH_PREDICTOR
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HARDIRQS_SW_RESEND
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Support hardware irqs resend by software.
CONFIG_HARDLOCKUP_DETECTOR_OTHER_CPU
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field]
	[subsys] watchdog
	[must]
	[function] check the hrtimer irqs of the next cpu
CONFIG_HAS_DMA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] DMA-coherent buffers.
CONFIG_HAS_IOMEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] busybox_console
	[must] Provide a facility for active usages of device memory to block pmem device unbind.
	[function]
CONFIG_HAS_IOPORT_MAP
	[arch] all
	[plat] roc1,sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Support standard I/O routines.
CONFIG_HAVE_ALIGNED_STRUCT_PAGE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enalbe the struct aligned with page.
CONFIG_HAVE_ARCH_AUDITSYSCALL
	[arch] all
	[plat] all
	[field] make
	[subsys] security
	[must] console
	[function] avc audit
CONFIG_HAVE_ARCH_BITREVERSE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support kernel has ablity  of arch bit reverse.
CONFIG_HAVE_ARCH_HUGE_VMAP
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enalbe kernel has ablity of huge virtual map.
CONFIG_HAVE_ARCH_JUMP_LABEL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support JUMP_LABEL which
		Optimize very unlikely/likely branches.
CONFIG_HAVE_ARCH_KASAN
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support KASAN.
CONFIG_HAVE_ARCH_KGDB
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support gdb.
CONFIG_HAVE_ARCH_MMAP_RND_BITS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] An arch should select this symbol if it supports setting a variable
	number of bits for use in establishing the base address for mmap
	allocations, has MMU enabled and provides values for both:
	ARCH_MMAP_RND_BITS_MIN & ARCH_MMAP_RND_BITS_MAX.
CONFIG_HAVE_ARCH_MMAP_RND_COMPAT_BITS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] An arch should select this symbol if it supports running applications
	in compatibility mode, supports setting a variable number of bits for
	use in establishing the base address for mmap allocations, has MMU
	enabled and provides values for both:
	ARCH_MMAP_RND_COMPAT_BITS_MIN & ARCH_MMAP_RND_COMPAT_BITS_MAX.
CONFIG_HAVE_ARCH_PFN_VALID
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Memblock related configuration.
CONFIG_HAVE_ARCH_SECCOMP_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] An arch should select this symbol if it provides more system call.
CONFIG_HAVE_ARCH_TRACEHOOK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support trace hook.
CONFIG_HAVE_ARCH_TRANSPARENT_HUGEPAGE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] mm
	[must] console
	[function] Enable kernel has ability of Transparent Hugepages.
CONFIG_HAVE_ARCH_VMAP_STACK
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HAVE_ARM_ARCH_TIMER
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Architected timer support.
CONFIG_HAVE_ARM_SMCCC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support ARM SMC Calling Convention.
CONFIG_HAVE_CC_STACKPROTECTOR
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] An arch should select this symbol if:
	- its compiler supports the -fstack-protector option
	- it has implemented a stack canary (e.g. __stack_chk_guard)
CONFIG_HAVE_CLK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] The <linux/clk.h> calls support software clock gating and
		thus are a key power management tool on many systems.
CONFIG_HAVE_CLK_PREPARE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Some clocks need do some preparation, this macro allows
		driver to implement the clk_prepare() interface.
CONFIG_HAVE_CMPXCHG_DOUBLE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel has ablity of cmpxchg_double().
CONFIG_HAVE_CMPXCHG_LOCAL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel has ablity of cmpxchg().
CONFIG_HAVE_CONTEXT_TRACKING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Provide kernel/user boundaries probes necessary for subsystems.
CONFIG_HAVE_C_RECORDMCOUNT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for C record mcount. Don't need enable on feature phone.
CONFIG_HAVE_DEBUG_BUGVERBOSE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] core
	[must] console
	[function] Have function of debug bugverbose.
CONFIG_HAVE_DEBUG_KMEMLEAK
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Kmemleak detects memory leaks.
CONFIG_HAVE_DMA_API_DEBUG
	[arch] all
	[plat] all
	[field] menu
	[subsys] debug
	[must] debug
	[function] Enable kernel support DMA_API_DEBUG (debugging of DMA-API usage).
CONFIG_HAVE_DMA_CONTIGUOUS
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] DMA Contiguous Memory Allocator depends on HAVE_DMA_CONTIGUOUS.
CONFIG_HAVE_DYNAMIC_FTRACE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] If platform have dynamic ftrace function.
CONFIG_HAVE_DYNAMIC_FTRACE_WITH_REGS
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HAVE_EBPF_JIT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support Extended Berkeley Packet Filter Just In Time.
CONFIG_HAVE_EFFICIENT_UNALIGNED_ACCESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Some architectures are unable to perform unaligned accesses
		without the use of get_unaligned/put_unaligned.
CONFIG_HAVE_EXIT_THREAD
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] An architecture implements exit_thread.
CONFIG_HAVE_FTRACE_MCOUNT_RECORD
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Platform have ftrace of mcount record.
CONFIG_HAVE_FUNCTION_GRAPH_TRACER
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Have graph function tracer.
CONFIG_HAVE_FUNCTION_TRACER
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Have function tracer.
CONFIG_HAVE_FUTEX_CMPXCHG
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Architectures should select this if futex_atomic_cmpxchg_inatomic()
		is implemented and always working. This removes a couple of runtime checks.
CONFIG_HAVE_GCC_PLUGINS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HAVE_GENERIC_DMA_COHERENT
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Dma allocator.
CONFIG_HAVE_GENERIC_GUP
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HAVE_HARDENED_USERCOPY_ALLOCATOR
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel has ability of hardened usercopy allocator.
CONFIG_HAVE_HW_BREAKPOINT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support the hardware breakpoint.
CONFIG_HAVE_IRQ_TIME_ACCOUNTING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Archs need to ensure they use a high enough resolution clock to
		support irq time accounting and then call enable_sched_clock_irqtime().
CONFIG_HAVE_KERNEL_GZIP
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_GZIP.
CONFIG_HAVE_KERNEL_LZ4
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_LZ4.
CONFIG_HAVE_KERNEL_LZMA
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_LZMA.
CONFIG_HAVE_KERNEL_LZO
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_LZO.
CONFIG_HAVE_KERNEL_XZ
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_XZ.
CONFIG_HAVE_KPROBES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel has ability of uncompress KERNEL_XZ.
CONFIG_HAVE_KRETPROBES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable the kernel support KRETPROBES item.
CONFIG_HAVE_MEMBLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Early memory allocators memblock.
CONFIG_HAVE_MEMORY_PRESENT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Control the implementation of memory_present () function.
CONFIG_HAVE_MOD_ARCH_SPECIFIC
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable the arch uses struct mod_arch_specific to store data.
CONFIG_HAVE_NET_DSA
	[arch] all
	[plat] all
	[field] meun
	[subsys] net
	[must] user
	[function] Support for the hardware switches supported by the Distributed Switch Architecture.
CONFIG_HAVE_NMI
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HAVE_OPROFILE
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support OPROFILE which OProfile system profiling.
CONFIG_HAVE_OPTPROBES
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support OPTPROBES item.
CONFIG_HAVE_PATA_PLATFORM
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] ata
	[must] user
	[function]  ARCH_VEXPRESS and ARCH_RPC platform support
CONFIG_HAVE_PERF_EVENTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enable kernel support Kernel performance events and counters
CONFIG_HAVE_PERF_REGS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support selective register dumps for perf events.
CONFIG_HAVE_PERF_USER_STACK_DUMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support user stack dumps for perf event samples.
CONFIG_HAVE_PROC_CPU
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Support proc/cpu, selcet by PROC_FS.
CONFIG_HAVE_RCU_TABLE_FREE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Support rcu table free.
CONFIG_HAVE_REGS_AND_STACK_ACCESS_API
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] This symbol should be selected by an architecure if it supports
		the API needed to access registers and stack entries.
CONFIG_HAVE_SMP
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] This option should be selected by machines which have an SMP-capable CPU.
CONFIG_HAVE_SYSCALL_TRACEPOINTS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] core
	[must] debug
	[function] Platform support syscall tracepoints.
CONFIG_HAVE_UID16
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support UID item which enable 16-bit UID system calls.
CONFIG_HAVE_VIRT_CPU_ACCOUNTING_GEN
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] With VIRT_CPU_ACCOUNTING_GEN, cputime_t becomes 64-bit.
	Before enabling this option, arch code must be audited to ensure there are
	no races in concurrent read/write of cputime_t.
CONFIG_HDMI
	[arch] all
	[plat] all
	[field] make
	[subsys] gpu
	[must] home
	[function] HDMI display support
CONFIG_HID
	[arch] all
	[plat] all
	[field] menu
	[subsys] input
	[must] user
	[function] human interface device support
CONFIG_HIDRAW
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] raw hid device support
CONFIG_HID_A4TECH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function]  A4 tech mice
CONFIG_HID_ACRUX
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] ACRUX game controller support
CONFIG_HID_ACRUX_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] ACRUX force feedback support
CONFIG_HID_APPLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Apple {i,Power,Mac}Books
CONFIG_HID_BATTERY_STRENGTH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Battery level reporting for HID devices
CONFIG_HID_BELKIN
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Belkin Flip KVM and Wireless keyboard
CONFIG_HID_CHERRY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Cherry Cymotion keyboard
CONFIG_HID_CHICONY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Chicony devices
CONFIG_HID_CYPRESS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Cypress mouse and barcode readers
CONFIG_HID_DRAGONRISE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] DragonRise Inc. game controller
CONFIG_HID_ELECOM
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] ELECOM BM084 bluetooth mouse
CONFIG_HID_EMS_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] EMS Production Inc. force feedback support
CONFIG_HID_EZKEY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Ezkey BTC 8193 keyboard
CONFIG_HID_GENERIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Generic HID driver
CONFIG_HID_GREENASIA
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] GreenAsia (Product ID 0x12) game controller support
CONFIG_HID_GYRATION
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Gyration remote control
CONFIG_HID_HOLTEK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Holtek HID devices
CONFIG_HID_KENSINGTON
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Kensington Slimblade Trackball
CONFIG_HID_KEYTOUCH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Keytouch HID devices
CONFIG_HID_KYE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] KYE/Genius devices
CONFIG_HID_LCPOWER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] LC-Power RC1000MCE RF remote control
CONFIG_HID_LOGITECH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech devices
CONFIG_HID_LOGITECH_DJ
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech Unifying receivers full support
CONFIG_HID_LOGITECH_HIDPP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech HID++ devices support
CONFIG_HID_MAGICMOUSE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Apple Magic Mouse/Trackpad multi-touch support
CONFIG_HID_MICROSOFT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Microsoft non-fully HID-compliant devices
CONFIG_HID_MONTEREY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Monterey Genius KB29E keyboard
CONFIG_HID_MULTITOUCH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] HID Multitouch panels
CONFIG_HID_NTRIG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] N-Trig touch screen
CONFIG_HID_ORTEK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Ortek wireless keyboard and mouse trackpad
CONFIG_HID_PANTHERLORD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Pantherlord/GreenAsia game controller
CONFIG_HID_PETALYNX
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Petalynx Maxter remote control
CONFIG_HID_PICOLCD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] PicoLCD (graphic version)
CONFIG_HID_PRIMAX
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Primax non-fully HID-compliant devices
CONFIG_HID_PRODIKEYS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Prodikeys PC-MIDI Keyboard support
CONFIG_HID_ROCCAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Roccat device support
CONFIG_HID_SAITEK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Saitek non-fully HID-compliant devices
CONFIG_HID_SAMSUNG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Samsung InfraRed remote control or keyboards
CONFIG_HID_SMARTJOYPLUS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] SmartJoy PLUS PS2/USB adapter support
CONFIG_HID_SONY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Sony PS2/3/4 accessories
CONFIG_HID_SPEEDLINK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Speedlink VAD Cezanne mouse support
CONFIG_HID_SUNPLUS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Sunplus wireless desktop
CONFIG_HID_THRUSTMASTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] ThrustMaster devices support
CONFIG_HID_TIVO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] TiVo Slide Bluetooth remote control support
CONFIG_HID_TOPSEED
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] TopSeed remote control
CONFIG_HID_TWINHAN
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Twinhan IR remote control
CONFIG_HID_UCLOGIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Support for UC-Logic and Huion tablets
CONFIG_HID_WACOM
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Wacom Intuos/Graphire tablet support (USB)
CONFIG_HID_WALTOP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Support for Waltop tablets
CONFIG_HID_WIIMOTE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Nintendo Wii / Wii U peripherals
CONFIG_HID_ZEROPLUS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Zeroplus based game controller support
CONFIG_HID_ZYDACRON
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Zydacron remote control support
CONFIG_HIGHMEM
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] High Memory Support. Disabled on featurephone.
CONFIG_HIGHPTE
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] mm
	[must] user
	[function] Allocate 2nd-level pagetables from highmem.
CONFIG_HIGH_RES_TIMERS
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] vts require, High Resolution Timer Support.
CONFIG_HOLES_IN_ZONE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HOTPLUG_CPU
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] cpuhotplug
	[must] user
	[function] Enable arm/arm64 cpuhotplug/SMP function
CONFIG_HVC_DRIVER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_HWSPINLOCK
	[arch] all
	[plat] all
	[field] menu
	[subsys] hwspinlock
	[must] home
	[function] support Hardware Spinlock device.
CONFIG_HWSPINLOCK_SPRD
	[arch] all
	[plat] all
	[field] menu
	[subsys] hwspinlock
	[must] home
	[function] support the Spreadtrum Hardware Spinlock device.
CONFIG_HW_PERF_EVENTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] interrupt
	[must] console
	[function] Enable hardware performance counter support for perf events
CONFIG_HZ
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] HZ must be set for different plat.
CONFIG_HZ_250
	[arch] all
	[plat] all
	[field] menu
	[subsys] time
	[must] console
	[function] HZ_250 showes good interactive responsiveness on sprd plat
CONFIG_HZ_FIXED
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] clock
	[must] console
	[function] Set the fixed HZ.
CONFIG_I2C
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] android_console
	[function] I2C support.
CONFIG_I2C_ALGOBIT
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] I2C bit-banging interfaces
CONFIG_I2C_BOARDINFO
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] I2C boardinfo interface
CONFIG_I2C_CHARDEV
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] Use i2c-* device files
CONFIG_I2C_COMPAT
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] User-space package which expects i2c adapters to be class devices
CONFIG_I2C_HELPER_AUTO
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] Some I2C bus drivers require so-called "I2C algorithm" modules
CONFIG_I2C_SPRD
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] Enable i2c that support hw channel
CONFIG_I2C_SPRD_HW
	[arch] all
	[plat] all
	[field] menu
	[subsys] i2c
	[must] user
	[function] Enable i2c which support hw channel
CONFIG_IIO
	[arch] all
	[plat] all
	[field] make
	[subsys] iio
	[must] user
	[function] enable industrial io system built in kernel
CONFIG_IIO_BUFFER
	[arch] all
	[plat] all
	[field] make
	[subsys] iio
	[must] user
	[function] iio buffer interface
CONFIG_IIO_CONSUMERS_PER_TRIGGER
	[arch] all
	[plat] all
	[field] make, code
	[subsys] iio
	[must] user
	[function] use in iio trigger module
CONFIG_IIO_KFIFO_BUF
	[arch] all
	[plat] all
	[field] make
	[subsys] iio
	[must] user
	[function] iio fifo interface
CONFIG_IIO_TRIGGER
	[arch] all
	[plat] all
	[field] make
	[subsys] iio
	[must] user
	[function] iio trigger interface
CONFIG_IKCONFIG
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] user
	[function] vts require, Kernel .config support
CONFIG_IKCONFIG_PROC
	[arch] all
	[plat] all
	[field] code
	[subsys] debug
	[must] user
	[function] vts require, Enable access to .config through /proc/config.gz
CONFIG_ILLEGAL_POINTER_VALUE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Defined the invailed point value.
CONFIG_INET
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, support for TCP/IP networking
CONFIG_INET6_AH
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, support for ipv6 IPsec AH
CONFIG_INET6_ESP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, Support for ipv6 IPsec ESP
CONFIG_INET6_IPCOMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, Support for IP Payload Compression Protocol (IPComp) (RFC3173) of ipv6,
CONFIG_INET6_TUNNEL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support for IPv6-in-IPv6 and IPv4-in-IPv6 tunnels described in RFC 2473.
CONFIG_INET6_XFRM_MODE_BEET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec BEET mode.
CONFIG_INET6_XFRM_MODE_TRANSPORT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec transport mode.
CONFIG_INET6_XFRM_MODE_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for ipv6 IPsec tunnel mode.
CONFIG_INET6_XFRM_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] supoort for ipv6 tunnel
CONFIG_INET_AH
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] It is AH transformation, it supports for IPsec AH.
CONFIG_INET_DIAG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for INET (TCP, DCCP, etc) socket monitoring interface used by
	native Linux tools such as ss. ss is included in iproute2
CONFIG_INET_DIAG_DESTROY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, allow privileged process to administratively close sockets
CONFIG_INET_ESP
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Support for IPsec ESP.
CONFIG_INET_IPCOMP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] It is IPComp transformation, supports for IP Payload
	  Compression Protocol (IPComp) (RFC3173), typically
	  needed for IPsec.
CONFIG_INET_RAW_DIAG
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_INET_TCP_DIAG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for INET TCP socket monitoring interface used by
	native Linux tools such as ss.
CONFIG_INET_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for tunnel
CONFIG_INET_UDP_DIAG
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support for UDP socket monitoring interface used by
	  the ss tool.
CONFIG_INET_XFRM_MODE_BEET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec BEET mode.
CONFIG_INET_XFRM_MODE_TRANSPORT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for IPsec transport mode.
CONFIG_INET_XFRM_MODE_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Support for IPsec tunnel mode.
CONFIG_INET_XFRM_TUNNEL
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] It supports IPsec tunnel mode.
CONFIG_INITRAMFS_SOURCE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Initramfs source file(s). Set to "".
CONFIG_INIT_ENV_ARG_LIMIT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Maximum of each of the number of arguments and environment
	variables passed to init from the kernel command line.
CONFIG_INOTIFY_USER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Inotify support for userspace.
CONFIG_INPUT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Generic input layer (needed for keyboard, mouse, ...)
CONFIG_INPUT_EVDEV
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] event interface
CONFIG_INPUT_FF_MEMLESS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Support for memoryless force-feedback devices
CONFIG_INPUT_GPIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] GPIO driver support
CONFIG_INPUT_JOYSTICK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Joystick interface
CONFIG_INPUT_KEYBOARD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Keyboards support
CONFIG_INPUT_KEYCHORD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Key chord input driver support
CONFIG_INPUT_KEYCOMBO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] Key combo
CONFIG_INPUT_KEYRESET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] if you want to reboot when some keys are pressed
CONFIG_INPUT_LEDS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Export input device LEDs in sysfs
CONFIG_INPUT_MISC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Miscellaneous devices
CONFIG_INPUT_MOUSEDEV
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Mouse interface
CONFIG_INPUT_MOUSEDEV_PSAUX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_INPUT_MOUSEDEV_SCREEN_X
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] input
	[must] unknown
	[function] Horizontal screen resolution
CONFIG_INPUT_MOUSEDEV_SCREEN_Y
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] input
	[must] unknown
	[function] Vertical screen resolution
CONFIG_INPUT_SC27XX_VIBRA
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Spreadtrum sc27xx vibrator support
CONFIG_INPUT_TABLET
	[arch] all
	[plat] all
	[field] menu
	[subsys] input
	[must] user
	[function] Tablets support
CONFIG_INPUT_TOUCHSCREEN
	[arch] all
	[plat] all
	[field] menu
	[subsys] input
	[must] user
	[function] touchscreen drivers
CONFIG_INPUT_UINPUT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] input
	[must] user
	[function] This macro is to open  node.  The node is used by  Bluetooth headset.
CONFIG_INTEGRITY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] console
	[function] This function is used to enable the integrity subsystem.
CONFIG_INTEGRITY_AUDIT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] console
	[function] This function is used to enable integrity auditing support.
CONFIG_IOMMU_HELPER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support iommu for help.
CONFIG_ION
	[arch] all
	[plat] all
	[field] make
	[subsys] ion
	[must] home
	[function] An memory allocator for android.
CONFIG_ION_CARVEOUT_HEAP
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_ION_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] ion
	[must] home
	[function] This macro is to enable sprd-specific ion features.
CONFIG_ION_SYSTEM_HEAP
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IOSCHED_CFQ
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] busybox_console
	[function] CFQ I/O scheduler.
CONFIG_IOSCHED_NOOP
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] user
	[function] No-op I/O scheduler.
CONFIG_IP6_NF_FILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, support for packet filtering
CONFIG_IP6_NF_IPTABLES
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, IP6 tables support
CONFIG_IP6_NF_MANGLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `mangle' table to iptables: see the man page for
	iptables(8).  This table is used for various packet alterations
	which can effect how the packet is routed.
CONFIG_IP6_NF_MATCH_EUI64
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This module performs checking on the IPv6 source address
	  Compares the last 64 bits with the EUI64 (delivered from\
	  the MAC address) address.
CONFIG_IP6_NF_MATCH_RPFILTER
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option allows you to match packets whose replies
	  would go out via the interface the packet came in.
CONFIG_IP6_NF_NAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This enables the `nat' table in ip6tables. This allows masquerading,
		port forwarding and other forms of full Network Address Port Translation.
CONFIG_IP6_NF_RAW
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `raw' table to ip6tables. This table is the very
	first in the netfilter framework and hooks in at the PREROUTING and OUTPUT chains.
CONFIG_IP6_NF_SECURITY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `security' table to iptables, for use with Mandatory Access Control (MAC) policy.
CONFIG_IP6_NF_TARGET_HL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This is a backwards-compatible option for the user's
	  convenience (e.g. when running oldconfig). It selects
	  CONFIG_NETFILTER_XT_TARGET_HL.
CONFIG_IP6_NF_TARGET_MASQUERADE
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Masquerading is a special case of NAT: all outgoing
	  connections are changed to seem to come from a
	  particular interface's address, and if the interface
	  goes down, those connections are lost.
CONFIG_IP6_NF_TARGET_NPT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds the `SNPT' and `DNPT' target, which
	  perform stateless IPv6-to-IPv6 Network Prefix
	  Translation per RFC 6296.
CONFIG_IP6_NF_TARGET_REJECT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, The REJECT target allows a filtering rule to specify that an ICMPv6
	error should be issued in response to an incoming packet, rather than silently being dropped.
CONFIG_IP6_NF_TARGET_SYNPROXY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This enables the `nat' table in ip6tables.
	  This allows masquerading, port forwarding and other
	  forms of full Network Address Port Translation.
CONFIG_IP6_NF_VOWIFI_DEC_TCPDUMP
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] make
	[subsys] net
	[must] user
	[function] to debug for decode ipsec pkt for software engineer.
	Use this module,the esp pkt which apk allowed, will be
	save in the tcpdump with its original message.The module will
	save the ipv6 esp pkt.
CONFIG_IPV6
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require,support for ipv6
CONFIG_IPV6_MIP6
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Support for IPv6 Mobility described in RFC 3775.
CONFIG_IPV6_MULTIPLE_TABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,  Support multiple routing tables.
CONFIG_IPV6_NDISC_NODETYPE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Router type: cross-layer information from link-layer to
	IPv6 layer reported by certain link types (e.g., RFC4214).
CONFIG_IPV6_OPTIMISTIC_DAD
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require,This is experimental support for optimistic Duplicate
	Address Detection.  It allows for autoconfigured addresses
	to be used more quickly.
CONFIG_IPV6_ROUTER_PREF
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require,IPv6: Router Preference (RFC 4191) support
CONFIG_IPV6_ROUTE_INFO
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, This is experimental support of Route Information.
CONFIG_IPV6_SIT
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] This driver implements encapsulation of IPv6
	into IPv4 packets. This is useful if you want to connect two IPv6
	networks over an IPv4-only path.
CONFIG_IPV6_SUBTREES
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] IPv6: source address based routing
CONFIG_IPV6_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Support for IPv6-in-IPv6 and IPv4-in-IPv6 tunnels described in RFC 2473.
CONFIG_IPV6_VTI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function]  This can be used with xfrm mode tunnel to give
	the notion of a secure tunnel for IPSEC and then use routing protocol
	on top.
	If don't enable this config, the phone will have the internal problem.
CONFIG_IP_ADVANCED_ROUTER
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, If you intend to run your Linux box mostly as a router, i.e. as a
	computer that forwards and redistributes network packets, say Y; you
	will then be presented with several options that allow more precise
	control about the routing process.
CONFIG_IP_MULTICAST
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, This is code for addressing several networked computers at once,
	enlarging your kernel by about 2 KB. You need multicasting if you
	intend to participate in the MBONE, a high bandwidth network on top
	of the Internet which carries audio and video broadcasts.
CONFIG_IP_MULTIPLE_TABLES
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Normally, a router decides what to do with a received packet based
	solely on the packet's final destination address. If you say Y here,
	the Linux router will also be able to take the packet's source
	address into account. Furthermore, the TOS (Type-Of-Service) field
	of the packet can be used for routing decisions as well.
CONFIG_IP_NF_ARPFILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, ARP packet filtering defines a table `filter', which has a series of
	rules for simple ARP packet filtering at local input and
	local output.  On a bridge, you can also specify filtering rules
	for forwarded ARP packets. See the man page for arptables(8).
CONFIG_IP_NF_ARPTABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, arptables is a general, extensible packet identification framework.
	The ARP packet filtering and mangling (manipulation)subsystems
	use this: say Y or M here if you want to use either of those.
CONFIG_IP_NF_ARP_MANGLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Allows altering the ARP packet payload: source and destination
	hardware and network addresses.
CONFIG_IP_NF_FILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Packet filtering defines a table `filter', which has a series of
	rules for simple packet filtering at local input, forwarding and
	local output.  See the man page for iptables(8).
CONFIG_IP_NF_IPTABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IP tables support (required for filtering/masq/NAT)
CONFIG_IP_NF_MANGLE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `mangle' table to iptables: see the man page for
	iptables(8).  This table is used for various packet alterations
	which can effect how the packet is routed.
CONFIG_IP_NF_MATCH_AH
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This match extension allows you to match a range of SPIs
	  inside AH header of IPSec packets. 2. vts require
CONFIG_IP_NF_MATCH_ECN
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This is a backwards-compat option for the user's
	  convenience(e.g. when running oldconfig). 2. vts require
CONFIG_IP_NF_MATCH_RPFILTER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This option allows you to match packets whose replies would
	go out via the interface the packet came in.
CONFIG_IP_NF_MATCH_TTL
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This is a backwards-compat option for the user's convenience
	  (e.g. when running oldconfig). 2. vts require
CONFIG_IP_NF_NAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This enables the `nat' table in iptables. This allows masquerading,
	port forwarding and other forms of full Network Address Port Translation.
CONFIG_IP_NF_RAW
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `raw' table to iptables. This table is the very
	first in the netfilter framework and hooks in at the PREROUTING and OUTPUT chains.
CONFIG_IP_NF_SECURITY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `security' table to iptables, for use
	with Mandatory Access Control (MAC) policy.
CONFIG_IP_NF_TARGET_ECN
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `ECN' target, which can be used in
	  the iptables mangle table.
CONFIG_IP_NF_TARGET_MASQUERADE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Masquerading is a special case of NAT: all outgoing connections are
	changed to seem to come from a particular interface's address, and
	if the interface goes down, those connections are lost.  This is
	only useful for dialup accounts with dynamic IP address (ie. your IP
	address will be different on next dialup).
CONFIG_IP_NF_TARGET_NETMAP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This is a backwards-compat option for the user's
	  convenience (e.g. when running oldconfig). 2. vts require
CONFIG_IP_NF_TARGET_REDIRECT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, This is a backwards-compat option for the user's convenience
	(e.g. when running oldconfig). It selects CONFIG_NETFILTER_XT_TARGET_REDIRECT.
CONFIG_IP_NF_TARGET_REJECT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, The REJECT target allows a filtering rule to specify that an ICMP
	error should be issued in response to an incoming packet, rather
	than silently being dropped.
CONFIG_IP_NF_TARGET_SYNPROXY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK && NETFILTER_ADVANCED, allows you to intercept TCP connections and
	establish them using syncookies before they are passed on to the server. This allows to avoid conntrack and server resource usage
	during SYN-flood attacks.
CONFIG_IP_NF_TARGET_TTL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This is a backwards-compatible option for the user's
	  convenience (e.g. when running oldconfig). It selects
	  CONFIG_NETFILTER_XT_TARGET_HL.
CONFIG_IP_NF_VOWIFI_DEC_TCPDUMP
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] make
	[subsys] net
	[must] user
	[function] to debug for decode ipsec pkt for software engineer.Use this module,
	the esp pkt which apk allowed, will be save in the tcpdump with its
	original message.The module will save the ipv4 esp pkt.
CONFIG_IP_PNP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This enables automatic configuration of IP addresses of devices and
	of the routing table during kernel boot, based on either information
	supplied on the kernel command line or by BOOTP or RARP protocols.
	You need to say Y only for diskless machines requiring network
	access to boot (in which case you want to say Y to "Root file system
	on NFS" as well), because all other machines configure the network
	in their startup scripts.
[field]
[subsys]
[must]
[function]
CONFIG_IP_PNP_DHCP
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] DHCP support
CONFIG_IP_ROUTE_VERBOSE
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] the kernel will print verbose messages regarding the routing, for example warnings about
	received packets which look strange and could be evidence of an
	attack or a misconfigured system somewhere. The information is
	handled by the klogd daemon which is responsible for kernel messages
	("man klogd").
CONFIG_IRQCHIP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support chip irq.
CONFIG_IRQSOFF_TRACER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Enable/disable trace irq off.
CONFIG_IRQ_DOMAIN
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] irq domain support.
CONFIG_IRQ_DOMAIN_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] debug
	[function] Support irq domain debug.
CONFIG_IRQ_DOMAIN_HIERARCHY
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for hierarchical irq domains.
CONFIG_IRQ_FORCED_THREADING
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function]
CONFIG_IRQ_TIME_ACCOUNTING
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] core
	[must] user
	[function] enable fine granularity task irq time accounting
CONFIG_IRQ_WORK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable irq work.
CONFIG_IR_JVC_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_MCE_KBD_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_NEC_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_RC5_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_RC6_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_SANYO_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_SHARP_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_SONY_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_IR_XMP_DECODER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_JBD2
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] busybox_console
	[function] Generic journaling layer for block devices that support
	   both 32-bit and 64-bit block numbers. It is currently
	   used by the ext4 and OCFS2 filesystems.
CONFIG_JOYSTICK_XPAD
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_JOYSTICK_XPAD_FF
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_JOYSTICK_XPAD_LEDS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_JUMP_LABEL
	[arch] all
	[plat] all
	[field] code
	[subsys] soc
	[must] user
	[function] Optimize very unlikely/likely branches.
CONFIG_KALLSYMS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] load all symbols for debugging/ksymoops
CONFIG_KALLSYMS_ALL
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] include all symbols in kallsyms
CONFIG_KALLSYMS_BASE_RELATIVE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_KERNEL_GZIP
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Choose kernel compression mode GZIP.
CONFIG_KERNEL_MODE_NEON
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] none
	[function] Support for NEON in kernel mode
CONFIG_KERNFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] Kernfs support.
CONFIG_KEYBOARD_GPIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] GPIO Buttons
CONFIG_KEYS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable access key retention support.
CONFIG_KEYS_COMPAT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] core
	[must] console
	[function] Support for Key compat.
CONFIG_KSM
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Enable KSM for page merging.
CONFIG_KUSER_HELPERS
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] console
	[function] Enable kuser helpers in vector page.
CONFIG_L2TP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for L2tp.
CONFIG_LBDAF
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] fs
	[must] user
	[function] This function is support large (2TB+) block devices and files.
CONFIG_LEDS_CLASS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] leds
	[must] user
	[function] LED Class Support
CONFIG_LEDS_SC27XX_BLTC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] led
	[must] user
	[function] LED support for the SC27xx breathing light controller
CONFIG_LEDS_TRIGGERS
	[arch] all
	[plat] all
	[field] menu
	[subsys] leds
	[must] unknown
	[function] LED Trigger support
CONFIG_LEDS_TRIGGER_PATTERN
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] led
	[must] user
	[function] LED Pattern Trigger
CONFIG_LIBCRC32C
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] CRC32c (Castagnoli, et al) Cyclic Redundancy-Check.
CONFIG_LIBFDT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support the kernel for fdt.
CONFIG_LOCALVERSION
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Local version - append to kernel release. Set to "".
CONFIG_LOCALVERSION_AUTO
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_LOCKDEP_SUPPORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Enable kernel support lockup.
CONFIG_LOCKUP_DETECTOR
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] enable kernel soft lockup and hard lockup
CONFIG_LOCK_SPIN_ON_OWNER
	[arch] all
	[plat] all
	[field] make
	[subsys] interrupt
	[must] console
	[function] An MCS like lock especially tailored for optimistic spinning for sleeping
	lock implementations.
CONFIG_LOGIG940_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech Flight System G940 force feedback support
CONFIG_LOGIRUMBLEPAD2_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech force feedback support (variant 2)
CONFIG_LOGITECH_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech force feedback support
CONFIG_LOGIWHEELS_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Logitech wheels configuration and force feedback support
CONFIG_LOG_BUF_SHIFT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Set the size of log buffer. highmem use 18, lowmem use 17.
CONFIG_LOG_CPU_MAX_BUF_SHIFT
	[arch] all
	[plat] all
	[field] menu
	[subsys] arch
	[must] console
	[function] CPU kernel log buffer size contribution (13 => 8 KB, 17 => 128KB).
CONFIG_LSM_MMAP_MIN_ADDR
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] Low address space for LSM to protect from user allocation.
CONFIG_LTO_NONE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_LZ4_COMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] zram
	[function] compress algorithm.
CONFIG_LZ4_DECOMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] busybox_console
	[function] uncompress algorithm.
CONFIG_LZO_COMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] busybox_console
	[function] compress algorithm
CONFIG_LZO_DECOMPRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] lib
	[must] busybox_console
	[function] uncompress algorithm.
CONFIG_MAC80211_STA_HASH_MAX_SIZE
	[arch] all
	[plat] all
	[field] code
	[subsys] mac80211
	[must] user
	[function] Station hash table maximum size
CONFIG_MAGIC_SYSRQ
	[arch] all
	[plat] all
	[field] code,make
	[subsys] core,uart
	[must] debug
	[function] Debug kernel using sysrq function.
CONFIG_MAGIC_SYSRQ_DEFAULT_ENABLE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Default enable sysrq debug function.
CONFIG_MAGIC_SYSRQ_SERIAL
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MANDATORY_FILE_LOCKING
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MAY_USE_DEVLINK
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MD
	[arch] all
	[plat] all
	[field] menu
	[subsys] md
	[must] user
	[function] The device mapper is a framework provided by the Linux kernel.
	   for mapping physical block devices onto higher-level virtual block devices.
	   must enable when DM_VERIFY function enable.
CONFIG_MDIO_BUS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MDIO_DEVICE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MEDIA_SUPPORT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MEMBARRIER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Enable membarrier() system call.
CONFIG_MEMCG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] none
	[function] Provides a memory resource controller that manages both anonymous
	   memory and page cache. (See Documentation/cgroups/memory.txt).
CONFIG_MEMCG_SWAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] none
	[function] Add swap management feature to memory resource controller. When you
	   enable this, you can limit mem+swap usage per cgroup.
CONFIG_MEMCG_SWAP_ENABLED
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] none
	[function] Memory Resource Controller Swap Extension enabled by default
CONFIG_MEMORY_STATE_TIME
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] console
	[function] Memory time statistics exported to /sys/kernel/memory_state_time.
CONFIG_MESSAGE_LOGLEVEL_DEFAULT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Default message log level (1-7), set to 4.
CONFIG_MFD_CORE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mfd
	[must] user
	[function] Support for mfd device management
CONFIG_MFD_SC2703
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Support for sc2703 charger management
CONFIG_MFD_SC27XX_PMIC
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] mfd
	[must] user
	[function] Spreadtrum SC27xx PMICs.
CONFIG_MFD_SYSCON
	[arch] all
	[plat] all
	[field] menu
	[subsys] mfd
	[must] user
	[function] System Controller Register R/W Based on Regmap.
CONFIG_MIGHT_HAVE_CACHE_L2X0
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] This option should be selected by machines which have a L2x0
		or PL310 cache controller, but where its use is optional.
CONFIG_MIGHT_HAVE_PCI
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] This config select the PCI.
CONFIG_MIGRATION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Allows the migration of the physical location of pages of processes
	while the virtual addresses are not changed.
CONFIG_MISC_FILESYSTEMS
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] user
	[function] Miscellaneous filesystems support. This option alone
	   does not add any kernel code. Sdcardfs/ubifs need this.
CONFIG_MMC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] MMC/SD/SDIO card support
CONFIG_MMC_BLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] MMC block device driver
CONFIG_MMC_BLOCK_MINORS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mmc
	[must] user
	[function] Number of minors per block device
CONFIG_MMC_SPRD_SDHCR11
	[arch] all
	[plat] all
	[field] make
	[subsys] mmc
	[must] user
	[function] add sprd mmc host controller driver(r11p0) to kernel.
CONFIG_MMU
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Select if you want MMU-based virtualised addressing space
		support by paged memory management.
CONFIG_MODULES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Enable loadable module support.
CONFIG_MODULES_TREE_LOOKUP
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] PERF_EVENTS || TRACING chosen this.
CONFIG_MODULES_USE_ELF_REL
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Modules only use ELF REL relocations.  Modules with ELF RELA
			relocations will give an error.
CONFIG_MODULES_USE_ELF_RELA
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Modules only use ELF RELA relocations.  Modules with ELF REL
	relocations will give an error.
CONFIG_MODULE_FORCE_UNLOAD
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Forced module unloading.
CONFIG_MODULE_UNLOAD
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] user
	[function] The loaded module can be uninstalled. If don't enable this, when
    luncher boot the screen will print error info. eg.Bug 983051.
CONFIG_MODVERSIONS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support module version check. If don't enable this, when luncher
     boot the screen will print error info. eg.Bug 983051.
CONFIG_MPILIB
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] needed by other configs
CONFIG_MQ_IOSCHED_DEADLINE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MQ_IOSCHED_KYBER
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_MSDOS_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] MSDOS filesystem support.
CONFIG_MSDOS_PARTITION
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] none
	[function] depends on PARTITION_ADVANCED
CONFIG_MULTIPLE_OOM_KILLER
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] unknown
	[function] lmk can kill multiple processes
CONFIG_MULTIUSER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Multiple users, groups and capabilities support.
CONFIG_MULTI_IRQ_HANDLER
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Allow each machine to specify it's own IRQ handler at run time.
CONFIG_MUTEX_SPIN_ON_OWNER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support mutex spin on owner.
CONFIG_NAMESPACES
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Provides the way to make tasks work with different objects using
	the same id.
CONFIG_NEED_DMA_MAP_STATE
	[arch] all
	[plat] all
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] The macro definition of control has been commented out.
CONFIG_NEED_SG_DMA_LENGTH
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Used for decentralized/clustered DMA operations.
CONFIG_NEON
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] Advanced SIMD (NEON) Extension support.
		the ARMv7 Advanced SIMD Extension.
CONFIG_NET
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, support for net
CONFIG_NETDEVICES
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Network device support
CONFIG_NETFILTER
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, support for netfilter
CONFIG_NETFILTER_ADVANCED
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support for Advanced netfilter configuration
CONFIG_NETFILTER_INGRESS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Netfilter ingress support
CONFIG_NETFILTER_NETLINK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for netfilter netlink
CONFIG_NETFILTER_NETLINK_LOG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Netfilter LOG over NFNETLINK interface
CONFIG_NETFILTER_NETLINK_QUEUE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for queueing packets via NFNETLINK.
CONFIG_NETFILTER_SYNPROXY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] The SYNPROXY target allows you to intercept TCP connections and establish them using syncookies before they are passed on to the
	server. This allows to avoid conntrack and server resource usage during SYN-flood attacks.
CONFIG_NETFILTER_XTABLES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Netfilter Xtables support (required for ip_tables)
CONFIG_NETFILTER_XT_CONNMARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This option adds the "CONNMARK" target and "connmark" match.
	Netfilter allows you to store a mark value per connection (a.k.a.
	ctmark), similarly to the packet mark (nfmark). Using this
	target and match, you can set and match on this mark.
CONFIG_NETFILTER_XT_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] nfmark target and match support
CONFIG_NETFILTER_XT_MATCH_ADDRTYPE
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option allows you to match what routing thinks of
	  an address, eg. UNICAST, LOCAL, BROADCAST, ...
CONFIG_NETFILTER_XT_MATCH_BPF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "bpf" match support
CONFIG_NETFILTER_XT_MATCH_COMMENT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `comment' dummy-match, which allows you to put comments in your iptables ruleset.
CONFIG_NETFILTER_XT_MATCH_CONNBYTES
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `connbytes' match, which allows
	  you to match the number of bytes and/or packets for
	  each direction within a connection.
CONFIG_NETFILTER_XT_MATCH_CONNLIMIT
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1.  This match allows you to match against the number
	  of parallel connections to a server per client IP
	  address (or address block). 2. vts require
CONFIG_NETFILTER_XT_MATCH_CONNMARK
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, This is a backwards-compat option for the user's convenience (e.g. when running oldconfig). It selects
	CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).
CONFIG_NETFILTER_XT_MATCH_CONNTRACK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "conntrack" connection tracking match support
CONFIG_NETFILTER_XT_MATCH_ECN
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option adds an "ECN" match, which allows you to
	  match against the IPv4 and TCP header ECN fields.
CONFIG_NETFILTER_XT_MATCH_ESP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This match extension allows you to match a range of
	  SPIs inside ESP header of IPSec packets.
CONFIG_NETFILTER_XT_MATCH_HASHLIMIT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, This option adds a `hashlimit' match.
	As opposed to `limit', this match dynamically creates a hash table
	of limit buckets, based on your selection of source/destination
	addresses and/or ports.
	It enables you to express policies like `10kpps for any given
	destination address' or `500pps from any given source address'
	with a single rule.
CONFIG_NETFILTER_XT_MATCH_HELPER
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. Helper matching allows you to match packets in dynamic
	  connections tracked by a conntrack-helper,
	  ie. ip_conntrack_ftp 2. vts require
CONFIG_NETFILTER_XT_MATCH_HL
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] HL matching allows you to match packets based on the
	  hoplimit in the IPv6 header, or the time-to-live field in
	  the IPv4 header of the packet.
CONFIG_NETFILTER_XT_MATCH_IPCOMP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This match extension allows you to match a range of
	  CPIs(16 bits) inside IPComp header of IPSec packets.
CONFIG_NETFILTER_XT_MATCH_IPRANGE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "iprange" address range match support
CONFIG_NETFILTER_XT_MATCH_L2TP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds an "L2TP" match, which allows you to
	  match against L2TP protocol header fields.
CONFIG_NETFILTER_XT_MATCH_LENGTH
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,  This option allows you to match the length of a packet against a
	specific value or range of values.
CONFIG_NETFILTER_XT_MATCH_LIMIT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "limit" match support
CONFIG_NETFILTER_XT_MATCH_MAC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "mac" address match support
CONFIG_NETFILTER_XT_MATCH_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "mark" match support
CONFIG_NETFILTER_XT_MATCH_MULTIPORT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "multiport" Multiple port match support
CONFIG_NETFILTER_XT_MATCH_PKTTYPE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "pkttype" packet type match support
CONFIG_NETFILTER_XT_MATCH_POLICY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IPsec "policy" match support
CONFIG_NETFILTER_XT_MATCH_QTAGUID
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,"quota, tag, owner" match and stats support
CONFIG_NETFILTER_XT_MATCH_QUOTA
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "quota" match support
CONFIG_NETFILTER_XT_MATCH_QUOTA2
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "quota2" match support
CONFIG_NETFILTER_XT_MATCH_QUOTA2_LOG
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds an "L2TP" match, which allows you to
	  his option allows `quota2' to log ONCE when a
	  quota limit.
CONFIG_NETFILTER_XT_MATCH_SCTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] With this option enabled, you will be able to use the
	  `sctp' match in order to match on SCTP source/destination
	  portsand SCTP chunk types.NETFILTER_XT_MATCH_SOCKET.
CONFIG_NETFILTER_XT_MATCH_SOCKET
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "socket" match support
CONFIG_NETFILTER_XT_MATCH_STATE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "state" match support
CONFIG_NETFILTER_XT_MATCH_STATISTIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "statistic" match support
CONFIG_NETFILTER_XT_MATCH_STRING
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,"string" match support
CONFIG_NETFILTER_XT_MATCH_TCPMSS
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `tcpmss' match, which allows you to
	  examine the MSS value of TCP SYN packets, which control
	  the maximum packet size for that connection.
CONFIG_NETFILTER_XT_MATCH_TIME
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "time" match support
CONFIG_NETFILTER_XT_MATCH_U32
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "u32" match support
CONFIG_NETFILTER_XT_NAT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "SNAT and DNAT" targets support
CONFIG_NETFILTER_XT_TARGET_CLASSIFY
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This option adds a `CLASSIFY' target, which enables the
	  user to set the priority of a packet. 2. vts require
CONFIG_NETFILTER_XT_TARGET_CONNMARK
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] vts require, "CONNMARK" target support
	This is a backwards-compat option for the user's convenience
	(e.g. when running oldconfig). It selects
	CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).
CONFIG_NETFILTER_XT_TARGET_CONNSECMARK
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1.The CONNSECMARK target copies security markings from
	  packets to connections, and restores security markings from
	  connections to packets (if the packets are not already marked).
	  2. vts require
CONFIG_NETFILTER_XT_TARGET_DSCP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds a `DSCP' target, which allows you to
	   manipulate the IPv4/IPv6 header DSCP field
	   (differentiated services codepoint).
	   The DSCP field can have any value between 0x0 and
	   0x3f inclusive.
	   It also adds the "TOS" target, which allows you to
CONFIG_NETFILTER_XT_TARGET_HL
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option adds the "HL" (for IPv6) and "TTL"
	  (for IPv4) targets, which enable the user to change the
	  hoplimit/time-to-live value of the IP header.
CONFIG_NETFILTER_XT_TARGET_IDLETIMER
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IDLETIMER target support
CONFIG_NETFILTER_XT_TARGET_LOG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] LOG target support. 3. Disabled on featurephone.
CONFIG_NETFILTER_XT_TARGET_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "MARK" target support
CONFIG_NETFILTER_XT_TARGET_NETMAP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "NETMAP" target support, NETMAP is an implementation of static 1:1 NAT mapping of network
	addresses. It maps the network address part, while keeping the host address part intact.
CONFIG_NETFILTER_XT_TARGET_NFLOG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "NFLOG" target support
CONFIG_NETFILTER_XT_TARGET_NFQUEUE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require,"NFQUEUE" target Support:This target replaced the old obsolete QUEUE target.
CONFIG_NETFILTER_XT_TARGET_REDIRECT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] "REDIRECT target support:REDIRECT is a special case of NAT: all incoming connections are
	mapped onto the incoming interface's address, causing the packets to
	come to the local machine instead of passing through. This is
	useful for transparent proxies.
CONFIG_NETFILTER_XT_TARGET_SECMARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "SECMARK" target support: The SECMARK target allows security marking of network
	packets, for use with security subsystems.
CONFIG_NETFILTER_XT_TARGET_TCPMSS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, "TCPMSS" target support: This option adds a `TCPMSS' target, which allows you to alter the
	MSS value of TCP SYN packets, to control the maximum size for that
	connection (usually limiting it to your outgoing interface's MTU minus 40).
CONFIG_NETFILTER_XT_TARGET_TEE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option adds a "TEE" target with which a packet
	  can be cloned and this clone be rerouted to
	  another nexthop.
CONFIG_NETFILTER_XT_TARGET_TPROXY
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This option adds a `TPROXY' target, which is somewhat
	  similar to REDIRECT. 2. vts require
CONFIG_NETFILTER_XT_TARGET_TRACE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. The TRACE target allows you to mark packets so that
	  the kernel will log every rule which match the packets as
	  those traverse the tables, chains, rules. 2. vts require
CONFIG_NETWORK_SECMARK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] This enables security marking of network packets, similar to nfmark, but designated for security purposes.
CONFIG_NET_CLS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for net classfication.
CONFIG_NET_CLS_ACT
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Say Y here if you want to use traffic control actions. Actions
	get attached to classifiers and are invoked after a successful
	classification. They are used to overwrite the classification
	result, instantly drop or redirect packets, etc.
CONFIG_NET_CLS_FW
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option enable you to classify packets according
	  to netfilter/firewall marks.
CONFIG_NET_CLS_U32
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Say Y here to be able to classify packets using a universal 32bit pieces based comparison scheme.
CONFIG_NET_CORE
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Network core driver support
CONFIG_NET_EMATCH
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Say Y here if you want to use extended matches on top of classifiers
	and select the extended matches below.
	Extended matches are small classification helpers not worth writing
	a separate classifier for.
CONFIG_NET_EMATCH_STACK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Size of the local stack variable used while evaluating the tree of
	ematches. Limits the depth of the tree, i.e. the number of
	encapsulated precedences. Every level requires 4 bytes of additional
	stack space.
CONFIG_NET_EMATCH_U32
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Say Y here if you want to be able to classify packets using
	the famous u32 key in combination with logic relations.
CONFIG_NET_FLOW_LIMIT
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function]  The network stack has to drop packets when a receive processing CPU's
	backlog reaches netdev_max_backlog. If a few out of many active flows
	generate the vast majority of load, drop their traffic earlier to
	maintain capacity for the other flows. This feature provides servers
	with many clients some protection against DoS by a single (spoofed)
	flow that greatly exceeds average workload.
CONFIG_NET_INGRESS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Support for classifying packets from ingress
CONFIG_NET_IPGRE_DEMUX
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] his is helper module to demultiplex GRE packets on GRE version field criteria.
	Required by ip_gre and pptp modules.
CONFIG_NET_IPVTI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for Virtual (secure) IP tunneling:This can be used with xfrm mode tunnel to give
	If don't enable this config, the phone will have the internal problem.
CONFIG_NET_IP_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for ip tunnelling
CONFIG_NET_KEY
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, PF_KEYv2 socket family, compatible to KAME ones.
	They are required if you are going to use IPsec tools ported from KAME.
CONFIG_NET_RX_BUSY_POLL
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Support for received data polling
CONFIG_NET_SCHED
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, If you say N here, you will get the standard packet scheduler, which
	is a FIFO (first come, first served). If you say Y here, you will be
	able to choose from among several alternative algorithms which can
	then be attached to different network devices. This is useful for
	example if some of your network devices are real time devices that
	need a certain minimum data flow rate, or if you need to limit the
	maximum data flow rate for traffic which matches specified criteria.
	This code is considered to be experimental.
CONFIG_NET_SCH_FIFO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for the standard packet scheduler, which is a FIFO (first come, first served)
CONFIG_NET_SCH_HTB
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Say Y here if you want to use the Hierarchical Token Buckets (HTB)
	packet scheduling algorithm
CONFIG_NET_UDP_TUNNEL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for UDP Tunneling Protocol
CONFIG_NEW_LEDS
	[arch] all
	[plat] all
	[field] menu
	[subsys] leds
	[must] user
	[function] LED Support
CONFIG_NF_CONNTRACK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Netfilter connection tracking support
CONFIG_NF_CONNTRACK_AMANDA
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. This allows the connection tracking and natting
	  code to allow the sub-channels that Amanda requires
	  for communication of the backup data, messages and
	  index.2. vts require
CONFIG_NF_CONNTRACK_BROADCAST
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] select NF_CONNTRACK_BROADCAST by NF_CONNTRACK_NETBIOS_NS
CONFIG_NF_CONNTRACK_EVENTS
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, If this option is enabled, the connection tracking code will
	provide a notifier chain that can be used by other kernel code
	to get notified about changes in the connection tracking state.
CONFIG_NF_CONNTRACK_FTP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, Tracking FTP connections is problematic: special helpers are
	required for tracking them, and doing masquerading and other forms
	of Network Address Translation on them.
	This is FTP support on Layer 3 independent connection tracking.
	Layer 3 independent connection tracking is experimental scheme
	which generalize ip_conntrack to support other layer 3 protocols.
CONFIG_NF_CONNTRACK_H323
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. support H.323 on a connection tracking/NAT firewall.
	  2. vts require
CONFIG_NF_CONNTRACK_IPV4
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IPv4 connection tracking support (required for NAT)
CONFIG_NF_CONNTRACK_IPV6
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, IPv6 connection tracking support
CONFIG_NF_CONNTRACK_IRC
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. There is a commonly-used extension to IRC called
	  Direct Client-to-Client Protocol (DCC).  This enables
	  users to send files to each other, and also chat to each
	  other without the need of a server. 2. vts require
CONFIG_NF_CONNTRACK_MARK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This option enables support for connection marks, used by the
	`CONNMARK' target and `connmark' match. Similar to the mark value
	of packets, but this mark value is kept in the conntrack session
	instead of the individual packets.
CONFIG_NF_CONNTRACK_NETBIOS_NS
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. NetBIOS name service requests are sent as broadcast
	  messages from an unprivileged port and responded to with
	  unicast messages to the same port. 2. vts require
CONFIG_NF_CONNTRACK_PPTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] vts require, This module adds support for PPTP (Point to Point Tunnelling Protocol, RFC2637) connection tracking and NAT.
CONFIG_NF_CONNTRACK_PROCFS
	[arch] all
	[plat] all
	[field] code
	[subsys] net
	[must] user
	[function] This option enables for the list of known conntrack entries
	to be shown in procfs under net/netfilter/nf_conntrack. This
	is considered obsolete in favor of using the conntrack(8)
	tool which uses Netlink.
CONFIG_NF_CONNTRACK_SANE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. SANE is a protocol for remote access to scanners as
	  implemented by the 'saned' daemon. Like FTP, it uses separate
	  control and data connections. 2. vts require
CONFIG_NF_CONNTRACK_SECMARK
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. The SECMARK target allows security marking of network
	  packets, for use with security subsystems. 2. vts require
CONFIG_NF_CONNTRACK_SIP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support sip protocol on a connection
	  tracking/NATing firewall.
CONFIG_NF_CONNTRACK_TFTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] vts require, TFTP connection tracking helper, this is required depending
	on how restrictive your ruleset is.
	If you are using a tftp client behind -j SNAT or -j MASQUERADING
	you will need this.
CONFIG_NF_CT_NETLINK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] vts require, support for a netlink-based userspace interface
CONFIG_NF_CT_NETLINK_TIMEOUT
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This option enables support for connection tracking
	  timeout fine-grain tuning. This allows you to attach
	  specific timeout, policies to flows, instead of using
	  the global timeout policy.
CONFIG_NF_CT_PROTO_DCCP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. With this option enabled, the layer 3 independent
	  connection tracking code will be able to do state
	  tracking on DCCP connections. 2. vts require
CONFIG_NF_CT_PROTO_GRE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Connection tracking protocol helper module for GRE.
	GRE is a generic encapsulation protocol, which is generally not very
	suited for NAT, as it has no protocol-specific part as port numbers.
CONFIG_NF_CT_PROTO_SCTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. With this option enabled, the layer 3 independent
	  connection tracking code will be able to do state
	  tracking on SCTP connections. 2. vts require
CONFIG_NF_CT_PROTO_UDPLITE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. With this option enabled, the layer 3 independent
	  connection tracking code will be able to do state
	  tracking on UDP-Lite connections.2. vts require
CONFIG_NF_DEFRAG_IPV4
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] Netfilter connection tracking requires all IPv4 packets to be defragmented.
	Both the socket match and the TPROXY target depend on this functionality, so
	this patch separates the Netfilter IPv4 defrag hooks into a separate module.
CONFIG_NF_DEFRAG_IPV6
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] Netfilter connection tracking requires all IPv6 packets to be defragmented.
	Both the socket match and the TPROXY target depend on this functionality, so
	this patch separates the Netfilter IPv6 defrag hooks into a separate module.
CONFIG_NF_DUP_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option adds a "TEE" target with which a packet
	  can be cloned and this clone be rerouted to another
	  nexthop.
CONFIG_NF_DUP_IPV6
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] This option enables the nf_dup_ipv6 core, which
	  duplicates an IPv6 packet to be rerouted to another
	  destination.
CONFIG_NF_LOG_COMMON
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Support for logging
CONFIG_NF_LOG_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Support for IPv4 packet logging
CONFIG_NF_LOG_IPV6
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Support for IPv6 packet logging
CONFIG_NF_NAT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] vts require, support for nat.
CONFIG_NF_NAT_AMANDA
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK && NF_NAT
CONFIG_NF_NAT_FTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support FTP NAT helper
CONFIG_NF_NAT_H323
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK
CONFIG_NF_NAT_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] The IPv4 NAT option allows masquerading, port forwarding and other
	forms of full Network Address Port Translation. This can be
	controlled by iptables or nft.
CONFIG_NF_NAT_IPV6
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] depends on NF_CONNTRACK_IPV6 & NETFILTER_ADVANCED, The IPv6 NAT option allows masquerading, port forwarding and other
	forms of full Network Address Port Translation. This can be controlled by iptables or nft.
CONFIG_NF_NAT_IRC
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support IPv6 in IRC NAT helper
CONFIG_NF_NAT_MASQUERADE_IPV4
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] This is the kernel functionality to provide NAT in the masquerade
	flavour (automatic source address selection).
CONFIG_NF_NAT_MASQUERADE_IPV6
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] This is the kernel functionality to provide NAT in
	  the masquerade flavour (automatic source address
	  selection).
CONFIG_NF_NAT_NEEDED
	[arch] all
	[plat] all
	[field] code
	[subsys] net
	[must] user
	[function] depends on NF_NAT
CONFIG_NF_NAT_PPTP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] net
	[must] user
	[function] NAT support for PPTP (Point to Point Tunneling Protocol).
CONFIG_NF_NAT_PROTO_DCCP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_NAT && NF_CT_PROTO_DCCP
CONFIG_NF_NAT_PROTO_GRE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] NAT protocol helper module for GRE.GRE is a generic encapsulation protocol, which is generally not very
	suited for NAT, as it has no protocol-specific part as port numbers.
CONFIG_NF_NAT_PROTO_SCTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_NAT && NF_CT_PROTO_SCTP
CONFIG_NF_NAT_PROTO_UDPLITE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] depends on NF_NAT && NF_CT_PROTO_UDPLITE
CONFIG_NF_NAT_REDIRECT
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] IPv4/IPv6 redirect support
CONFIG_NF_NAT_SIP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support SIP protocol on a connection
	  tracking/NATing firewall.
CONFIG_NF_NAT_TFTP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support IPv6 in TFTP NAT helper
CONFIG_NF_REJECT_IPV4
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support for ipv4 rejecting in netfilter
CONFIG_NF_REJECT_IPV6
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] support for ipv6 rejecting in netfilter
CONFIG_NF_SOCKET_IPV4
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IPv4 connection socket support
CONFIG_NF_SOCKET_IPV6
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, IPv6 connection socket support
CONFIG_NL80211_TESTMODE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] wireless
	[must] user
	[function] helps implementing things like factory calibration or
		validation tools for wireless chips
CONFIG_NLATTR
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for netlink attribute
CONFIG_NLS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] The base Native Language Support. A number of
	   filesystems depend on it (e.g. FAT, JOLIET, NT, BEOS
	   filesystems), as well as the ability of some filesystems
	   to use native languages (NCP, SMB).
CONFIG_NLS_ASCII
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Native language support ASCII characters
CONFIG_NLS_CODEPAGE_437
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Character sets. Codepage 437 (United States, Canada).
CONFIG_NLS_DEFAULT
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] Default NLS config.
CONFIG_NLS_ISO8859_1
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Character sets. NLS ISO 8859-1  (Latin 1; Western
	   European Languages).
CONFIG_NLS_UTF8
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Character sets. UTF-8.
CONFIG_NOP_TRACER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] The ararchitecture of tracer.
CONFIG_NO_BOOTMEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Early memory allocators used memblock.
CONFIG_NO_HZ
	[arch] all
	[plat] all
	[field] make,code
	[subsys] time
	[must] console
	[function] vts require, Old Idle dynticks config.
CONFIG_NO_HZ_COMMON
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] Together with hrtimer to support tick one-shot.
CONFIG_NO_HZ_IDLE
	[arch] all
	[plat] all
	[field] code
	[subsys] time
	[must] console
	[function] Idle dynticks system (tickless idle).
CONFIG_NO_IOPORT_MAP
	[arch] arm64
	[plat] sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] debug
	[function] Select by IF !PCI.
CONFIG_NR_CPUS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Maximum number of CPUs (2-4096).
CONFIG_NVMEM
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_OF
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Device Tree and Open Firmware support.
CONFIG_OF_ADDRESS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support OF set address.
CONFIG_OF_ADDRESS_PCI
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] make,code
	[function] PCI bus specific translator.
CONFIG_OF_EARLY_FLATTREE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support early flattree of Openfirmware.
CONFIG_OF_FLATTREE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support for flat tree.
CONFIG_OF_GPIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] gpio
	[must] user
	[function] Supprot for gpio driver
CONFIG_OF_IRQ
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support OpenFirmware irq.
CONFIG_OF_MDIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support MDIO.
CONFIG_OF_NET
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support OpenFirmware net.
CONFIG_OF_PCI
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] OpenFirmware pci bus accessors.
CONFIG_OF_PCI_IRQ
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] OpenFirmware PCI IRQ routing helpers.
CONFIG_OF_RESERVED_MEM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] of
	[must] console
	[function] Support Openfirmware reserved memory.
CONFIG_OID_REGISTRY
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] needed by other configs
CONFIG_OLD_MCOUNT
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] debug
	[must] console
	[function] depends on FUNCTION_TRACER && FRAME_POINTER
CONFIG_OLD_SIGACTION
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] core
	[function] Architecture has old sigaction(2) syscall.  Nope, not the same
		as OLD_SIGSUSPEND | OLD_SIGSUSPEND3 - alpha has sigsuspend(2),
		but fairly different variant of sigaction(2), thanks to OSF/1 compatibility...
CONFIG_OLD_SIGSUSPEND3
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Even weirder antique ABI - three-argument sigsuspend(2).
CONFIG_OOM_NOTIFIER
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] unknown
	[function] Using a Android-Style oom-killer instead of linux's native OOM_killer
CONFIG_OUTER_CACHE
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_OUTER_CACHE_SYNC
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PACKET
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require
CONFIG_PAGE_COUNTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] android_console
	[function] The cgroup-memory subsystem is related.
CONFIG_PAGE_OFFSET
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] mm
	[must] console
	[function] Set the memory limit between userspace and kernelspace.
CONFIG_PANIC_ON_OOPS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Kernel panic when OOPS.
CONFIG_PANIC_ON_OOPS_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Set kernel value panic_on_oops.
CONFIG_PANIC_TIMEOUT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Machine restart if kernel panic.
CONFIG_PANTHERLORD_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] Pantherlord force feedback support
CONFIG_PARTITION_ADVANCED
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] fs
	[must] none
	[function] Support use hard disks under linux which were partitioned under an operating
		   system running on a different architecture than linux system.
CONFIG_PARTITION_PERCPU
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PCI
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Enable support for PCI bus system.
CONFIG_PCIEPORTBUS
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Enable PCI Express Port Bus support.
CONFIG_PCIE_DW
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Enable Synopsys DesignWare PCIe host controller driver.
CONFIG_PCIE_DW_HOST
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Enable Synopsys DesignWare PCIe host controller driver.
CONFIG_PCIE_PME
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] PCI Express Native PME support.
CONFIG_PCIE_SPRD
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support Spreadtrum PCIe controller driver(RC and EP).
CONFIG_PCIE_SPRD_HOST
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support Spreadtrum PCIe host controller driver(only for RC).
CONFIG_PCI_BUS_ADDR_T_64BIT
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support 64 bit PCI address.
CONFIG_PCI_DEBUG
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] PCI core can produce a bunch of debug messages to the
	   system log.
CONFIG_PCI_DOMAINS
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support PCI domain.
CONFIG_PCI_DOMAINS_GENERIC
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Generic implementation for PCI domain support.
CONFIG_PCI_MSI
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] Allow device driver to enable MSI(Message Signaled Interrupts).
	[function]
CONFIG_PCI_MSI_IRQ_DOMAIN
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Support MSI IRQ domain.
CONFIG_PCI_QUIRKS
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] Enable workarounds for various PCI chipset bugs/quirks.
CONFIG_PCI_SYSCALL
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] pci
	[must] user
	[function] For architectures where we want to allow direct access to
	   the PCI config stuff.
CONFIG_PELT_UTIL_HALFLIFE_32
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PERF_EVENTS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Kernel performance events and counters.
CONFIG_PERF_USE_VMALLOC
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable kernel support Performance Counters for Linux.
CONFIG_PGTABLE_LEVELS
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] console
	[function] Set the page table level.
CONFIG_PHYLIB
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Ethernet controllers are usually attached to PHY
	devices.  This option provides infrastructure for
	managing PHY devices.
CONFIG_PHYS_ADDR_T_64BIT
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] Define the number of digits of phys_addr_t.
CONFIG_PHY_XGENE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PINCONF
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Support pin configuration controllers.
CONFIG_PINCTRL
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Support pin configuration controllers.
CONFIG_PINCTRL_SPRD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] pinctrl
	[must] user
	[function] Spreadtrum pinctrl driver.
CONFIG_PINCTRL_SPRD_ROC1
	[arch] arm64
	[plat] roc1
	[field] menu,make,code
	[subsys] pinctrl
	[must] user
	[function] Spreadtrum Roc1 pinctrl driver
CONFIG_PINCTRL_SPRD_SHARKL3
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PINCTRL_SPRD_SHARKL5
	[arch] all
	[plat] sharkl5,sharkl5_32
	[field] menu,make,code
	[subsys] pinctrl
	[must] user
	[function] Spreadtrum Sharkl5 pinctrl driver
CONFIG_PINMUX
	[arch] all
	[plat] all
	[field] menu
	[subsys] pinctrl
	[must] user
	[function] Support pin multiplexing controllers.
CONFIG_PKCS7_MESSAGE_PARSER
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must]  user
	[function] Support PKCS7_MESSAGE_PARSER.
CONFIG_PM
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] power management system
CONFIG_PM_AUTOSLEEP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] vts require, Support for PM_AUTOSLEEP
CONFIG_PM_CLK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] power subsystem clock management
CONFIG_PM_DEBUG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] debug
	[function] Power management debug switch
CONFIG_PM_DEVFREQ
	[arch] all
	[plat] all
	[field] make,code
	[subsys] devfreq
	[must] none
	[function] Generic Dynamic Voltage and Frequency Scaling (DVFS) support
CONFIG_PM_GENERIC_DOMAINS
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] make,code
	[subsys] device power
	[must] user
	[function] common driver of device power domain
CONFIG_PM_GENERIC_DOMAINS_OF
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] code
	[subsys] device power
	[must] user
	[function] Device Tree based PM domain
CONFIG_PM_GENERIC_DOMAINS_SLEEP
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] code
	[subsys] power
	[must] user
	[function] without using except defconfig_update.sh checking
CONFIG_PM_OPP
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] This function is enabele power opp
CONFIG_PM_SLEEP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Support for PM sleep.
CONFIG_PM_SLEEP_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] power
	[must] user
	[function] Support for PM sleep debug.
CONFIG_PM_SLEEP_SMP
	[arch] all
	[plat] all
	[field] make
	[subsys] power
	[must] user
	[function] Support for PM sleep on SMP.
CONFIG_PM_WAKELOCKS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] vts require, User space wakeup sources interface
CONFIG_PM_WAKELOCKS_GC
	[arch] all
	[plat] all
	[field] code
	[subsys] power
	[must] user
	[function] Garbage collector for user space wakeup sources
CONFIG_PM_WAKELOCKS_LIMIT
	[arch] all
	[plat] all
	[field] code
	[subsys] power
	[must] user
	[function] Maximum number of user space wakeup sources (0 = no limit)
CONFIG_POSIX_TIMERS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_POWER_RESET
	[arch] all
	[plat] all
	[field] make,code
	[subsys] reset
	[must] user
	[function] Provides a number of drivers which either reset a complete board.
CONFIG_POWER_RESET_SC27XX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] reset
	[must] user
	[function] Spreadtrum system reboot interface.
CONFIG_POWER_RESET_SYSCON
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] reboot
	[must] user
	[function] Generic Syscon Reboot Driver
CONFIG_POWER_SUPPLY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] This allows power supply monitoring by userspace via sysfs.
CONFIG_PPP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. PPP (Point to Point Protocol) is a newer and better SLIP.
	  2. vts require
CONFIG_PPPOE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for PPP over Ethernet.
CONFIG_PPPOL2TP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Support for PPP-over-L2TP socket family. L2TP is a protocol
	used by ISPs and enterprises to tunnel PPP traffic over UDP
	tunnels. L2TP is replacing PPTP for VPN uses.
CONFIG_PPP_ASYNC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] Say Y (or M) here if you want to be able to use PPP over standard
	asynchronous serial ports, such as COM1 or COM2 on a PC.  If you use
	a modem (not a synchronous or ISDN modem) to contact your ISP, you
	need this option.
CONFIG_PPP_BSDCOMP
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. Support for the BSD-Compress compression method for PPP,
	  which uses the LZW compression method to compress each PPP
	  packet before it is sent over the wire. 2. vts require
CONFIG_PPP_DEFLATE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1. Support for the Deflate compression method for PPP, which
	  uses the Deflate algorithm (the same algorithm that gzip uses)
	  to compress each PPP packet before it is sent over the wire.
	  2. vts require
CONFIG_PPP_FILTER
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Say Y here if you want to be able to filter the packets passing over
	PPP interfaces.  This allows you to control which packets count as
	activity (i.e. which packets will reset the idle timer or bring up
	a demand-dialed link) and which packets are to be dropped entirely.
	You need to say Y here if you wish to use the pass-filter and
	active-filter options to pppd.
CONFIG_PPP_MPPE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] 1.  Support for the MPPE Encryption protocol, as employed by the
	  Microsoft Point-to-Point Tunneling Protocol. 2. vts require
CONFIG_PPP_MULTILINK
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] PPP multilink support
CONFIG_PPTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] depends on PPP && NET_IPGRE_DEMUX, Support for PPP over IPv4.(Point-to-Point Tunneling Protocol)
CONFIG_PREEMPT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] console
	[function] vts require, Preemptible Kernel (Low-Latency Desktop).
CONFIG_PREEMPT_COUNT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Statistics count of preempt.
CONFIG_PREEMPT_RCU
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] vts require, Enable kernel support rcu preempt.
CONFIG_PREEMPT_TRACER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] user
	[function] Preemption-off Latency Tracer.
CONFIG_PREVENT_FIRMWARE_BUILD
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Prevent firmware from being built.
CONFIG_PRINTK
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable support for printk.
CONFIG_PRINTK_CPUID
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Add cpuid in kernel log.
CONFIG_PRINTK_NMI
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PRINTK_SAFE_LOG_BUF_SHIFT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PRINTK_TIME
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Add time stamp in kernel log.
CONFIG_PROBE_EVENTS
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PROC_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] /proc file system support.
CONFIG_PROC_PAGE_MONITOR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] user
	[function] Various /proc files exist to monitor process memory
	   utilization: /proc/pid/smaps, /proc/pid/clear_refs,
	   /proc/pid/pagemap,/proc/kpagecount, and /proc/kpageflags
CONFIG_PROC_PID_CPUSET
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] vts require, Include legacy /proc/<pid>/cpuset file.
CONFIG_PROC_SYSCTL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] Sysctl support (/proc/sys).
CONFIG_PROC_UID
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] debug
	[function] Provides aggregated per-uid information under /proc/uid.
CONFIG_PROFILING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Profiling support.
CONFIG_PSTORE
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed. Disabled on featurephone.
CONFIG_PSTORE_CONSOLE
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
CONFIG_PSTORE_PMSG
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
CONFIG_PSTORE_RAM
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] CtsLiblogTestCases testcase needed
CONFIG_PSTORE_ZLIB_COMPRESS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_PWM
	[arch] all
	[plat] all
	[field] make
	[subsys] pwm
	[must] home
	[function] PWM device core driver.
CONFIG_PWM_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] pwm
	[must] home
	[function] Enable SPRD specific pwm driver.
CONFIG_PWM_SYSFS
	[arch] all
	[plat] all
	[field] make
	[subsys] pwm
	[must] debug
	[function] Create pwm sysfs file for userspace.
CONFIG_QFMT_V2
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Quota format vfsv0 and vfsv1 support.
CONFIG_QUOTA
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] none
	[function] Quota support,set per user limits for disk usage
CONFIG_QUOTACTL
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] none
	[function] Quota support
CONFIG_QUOTA_NETLINK_INTERFACE
	[arch] all
	[plat] all
	[field] menu
	[subsys] fs
	[must] none
	[function] Report quota messages through netlink interface
CONFIG_QUOTA_TREE
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] Generic support for tree structured quota files.
CONFIG_RANDOMIZE_BASE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Randomize the address of the kernel image.
CONFIG_RANDOMIZE_MODULE_REGION_FULL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] arch
	[must] console
	[function] Randomize the module region independently from the core kernel.
CONFIG_RAS
	[arch] all
	[plat] all
	[field] make
	[subsys] arch
	[must] console
	[function] Reliability, Availability and Serviceability (RAS) features.
CONFIG_RATIONAL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Calculate best rational approximation for a given fraction
		taking into account restricted register size.
CONFIG_RCU_CPU_STALL_TIMEOUT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] If a given RCU grace period extends more than the specified
	number of seconds, a CPU stall warning is printed.
CONFIG_RCU_NEED_SEGCBLIST
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_RCU_STALL_COMMON
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Enables RCU CPU stall code that is common between the TINY
	and TREE variants of RCU.
CONFIG_RC_CORE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_RC_DECODERS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_RC_MAP
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_RD_BZIP2
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] core
	[must] console
	[function] Support initial ramdisks compressed using bzip2.
CONFIG_RD_GZIP
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] lib
	[must] console
	[function] CtsLiblogTestCases testcase needed, Support initial ramdisks compressed using gzip.
CONFIG_RD_LZMA
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] core
	[must] console
	[function] Support initial ramdisks compressed using LZMA.
CONFIG_REED_SOLOMON
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] user
	[function] Support for reed solomon.
CONFIG_REED_SOLOMON_DEC8
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] user
	[function] Support reed solomon dec8.
CONFIG_REED_SOLOMON_ENC8
	[arch] all
	[plat] all
	[field] make
	[subsys] lib
	[must] user
	[function] CtsLiblogTestCases testcase needed
CONFIG_REGMAP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support regmap.
CONFIG_REGMAP_I2C
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support iic regmap.
CONFIG_REGMAP_IRQ
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support irq regmap.
CONFIG_REGMAP_MMIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support mmio regmap.
CONFIG_REGMAP_SPI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] core
	[must] user
	[function] Support spi regmap.
CONFIG_REGULATOR
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] regulator
	[must] user
	[function] Support regulator core.
CONFIG_REGULATOR_DA9211
	[arch] arm64
	[plat] roc1
	[field] menu,code
	[subsys] regulator
	[must] user
	[function] SUPPORT DA9211 regulator function.
CONFIG_REGULATOR_FAN53555
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] make,code
	[subsys] regulator
	[must] user
	[function] Support for fan53555 pmic regulator.
CONFIG_REGULATOR_FIXED_VOLTAGE
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] regulator
	[must] user
	[function] This driver provides support for fixed voltage regulators
CONFIG_REGULATOR_SC2703
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] regulator
	[must] user
	[function] SUPPORT SC2703 regulator function.
CONFIG_REGULATOR_SC2721
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_REGULATOR_SC2730
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,code
	[subsys] regulator
	[must] user
	[function] SUPPORT SC2730 regulator function.
CONFIG_RELAY
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] support for relay interface support in certain file systems
CONFIG_RELOCATABLE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] This builds the kernel as a Position Independent Executable (PIE),
	which retains all relocation metadata required to relocate the kernel binary
	at runtime to a different virtual address than the address it was linked at.
CONFIG_RESET_CONTROLLER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic Reset Controller support.
CONFIG_RFKILL
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] arm64
	[must] user
	[function] Support for set bluetooth power
CONFIG_RFKILL_LEDS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_RFKILL_PM
	[arch] all
	[plat] all
	[field] make
	[subsys] net/rfkill
	[must] user
	[function] Power off on suspend
CONFIG_RFS_ACCEL
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Accelerated RFS is to RFS what RSS is to RPS: a hardware-accelerated load
	balancing mechanism that uses soft state to steer flows based on where
	the application thread consuming the packets of each flow is running.
	Accelerated RFS should perform better than RFS since packets are sent
	directly to a CPU local to the thread consuming the data.
CONFIG_RING_BUFFER
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] Necessary for ftrace, used for save data.
CONFIG_RING_BUFFER_ALLOW_SWAP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Exchange two cpu ring buffer.
CONFIG_RPS
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Receive Packet Steering (RPS) is logically a software implementation of
	RSS. Being in software, it is necessarily called later in the datapath.
	Whereas RSS selects the queue and hence CPU that will run the hardware
	interrupt handler, RPS selects the CPU to perform protocol processing
	above the interrupt handler. This is accomplished by placing the packet
	on the desired CPUs backlog queue and waking up the CPU for processing.
	RPS has some advantages over RSS: 1) it can be used with any NIC,
	2) software filters can easily be added to hash over new protocols,
	3) it does not increase hardware device interrupt rate (although it does
	introduce inter-processor interrupts (IPIs)).
CONFIG_RTC_CLASS
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] Generic RTC class support.
CONFIG_RTC_DRV_SC27XX
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] Spreadtrum SC27xx RTC.
CONFIG_RTC_HCTOSYS
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] Set system time from RTC on startup and resume.
CONFIG_RTC_HCTOSYS_DEVICE
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] RTC used to set the system time.
CONFIG_RTC_I2C_AND_SPI
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_RTC_INTF_DEV
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] /dev/rtcN (character devices).
CONFIG_RTC_INTF_PROC
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] /proc/driver/rtc (procfs for rtcN).
CONFIG_RTC_INTF_SYSFS
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] rtc
	[must] user
	[function] /sys/class/rtc/rtcN (sysfs).
CONFIG_RTC_LIB
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] RTC driver based on RTC lib.
CONFIG_RTC_SYSTOHC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] rtc
	[must] user
	[function] Set the RTC time based on NTP synchronization.
CONFIG_RTC_SYSTOHC_DEVICE
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] rtc
	[must] user
	[function] RTC used to synchronize NTP adjustment.
CONFIG_RT_GROUP_SCHED
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Group scheduling for SCHED_RR/FIFO(vts require)
CONFIG_RT_MUTEXES
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support RCU_BOOST.
CONFIG_RWSEM_SPIN_ON_OWNER
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Support rw lock.
CONFIG_RWSEM_XCHGADD_ALGORITHM
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Added rwsem xchage algorithm.
CONFIG_SBITMAP
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SC2342_INTEG
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] This is support wcn chip for spreadtrum.
CONFIG_SC2355
	[arch] all
	[plat] all
	[field] menu
	[subsys] wcn
	[must] user
	[function] This function is used to support wcn sc2355 chip
CONFIG_SC23XX
	[arch] all
	[plat] all
	[field] menu
	[subsys] msic
	[must] user
	[function] This function is used to support wcn sc23xx chip
	For pike2, this must be enable for buletooth.
CONFIG_SC27XX_ADC
	[arch] all
	[plat] all
	[field] make
	[subsys] iio
	[must] home
	[function] This function is used to support sc27xx adc moudle
CONFIG_SC27XX_EFUSE
	[arch] all
	[plat] all
	[field] make
	[subsys] nvmem
	[must] home
	[function] get sc27xx series efuse value
CONFIG_SC27XX_TSENSOR_THERMAL
	[arch] all
	[plat] sharkl5,sharkl5_32
	[field] make
	[subsys] thermal
	[must] usr
	[function] 	[function]This function is used to config thermal moudle to get
	osc and extern cystal temperature.
CONFIG_SCHEDSTATS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Collect scheduler statistics
CONFIG_SCHED_DEBUG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Collect scheduler debugging info(Google needed)
CONFIG_SCHED_HRTICK
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] High Resolution Timer preemption tick
CONFIG_SCHED_INFO
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Collect scheduler  info
CONFIG_SCHED_MC
	[arch] all
	[plat] all
	[field] code
	[subsys] sched
	[must] user
	[function] Multi-core scheduler support
CONFIG_SCHED_TRACER
	[arch] all
	[plat] roc1,sharkl3,sharkl5_32
	[field] make,code
	[subsys] core
	[must] debug
	[function] Scheduling Latency Tracer
CONFIG_SCHED_TUNE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sched
	[must] user
	[function] Enable boost for fair sched class tasks
CONFIG_SCHED_WALT
	[arch] arm64
	[plat] roc1,sharkl5
	[field] make,code
	[subsys] sched
	[must] user
	[function] Window Assisted Load Tracking switch
CONFIG_SCSI
	[arch] all
	[plat] all
	[field] make,code
	[subsys] scsi
	[must] user
	[function] SCSI device support
CONFIG_SCSI_DMA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] scsi
	[must] user
	[function] SCSI device dma support
CONFIG_SCSI_LOWLEVEL
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SCSI_MOD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] scsi
	[must] user
	[function] SCSI module support
CONFIG_SCSI_UFSHCD
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SCSI_UFSHCD_PLATFORM
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SCSI_UFS_SPRD
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SDCARD_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] This function is used to open sdcardfs feature
CONFIG_SDIOHAL
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SECCOMP
	[arch] all
	[plat] all
	[field] make, code
	[subsys] core
	[must] user
	[function] Enable seccomp to safely compute untrusted bytecode.
	   vts require
CONFIG_SECCOMP_FILTER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Enable tasks to build secure computing
	environments defined in terms of Berkeley
	Packet Filter programs which implement
	task-defined system call filtering polices.
CONFIG_SECTION_MISMATCH_WARN_ONLY
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Make section mismatch errors non-fatal.
CONFIG_SECURITY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] user
	[function] vts require
CONFIG_SECURITYFS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SECURITY_NETWORK
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] user
	[function] vts require
CONFIG_SECURITY_PERF_EVENTS_RESTRICT
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] user
	[function] vts require, Restrict unprivileged use of performance events
CONFIG_SECURITY_SELINUX
	[arch] all
	[plat] all
	[field] make,code
	[subsys] security
	[must] user
	[function] vts require
CONFIG_SECURITY_SELINUX_AVC_STATS
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] avc audit
CONFIG_SECURITY_SELINUX_CHECKREQPROT_VALUE
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] lsm
CONFIG_SECURITY_SELINUX_DEVELOP
	[arch] all
	[plat] all
	[field] code
	[subsys] security
	[must] console
	[function] vts, cts, security
CONFIG_SELECT_MEMORY_MODEL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] menu
	[subsys] mm
	[must] busybox_console
	[function] The choice of the memory model depends on the ARCH_SELECT_MEMORY_MODEL.
CONFIG_SERIAL_CORE
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enable serial core
CONFIG_SERIAL_CORE_CONSOLE
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enable serial core console
CONFIG_SERIAL_EARLYCON
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Support for early consoles with the earlycon parameter
CONFIG_SERIAL_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enables the driver for the Spreadtrum's serial
CONFIG_SERIAL_SPRD_CONSOLE
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Support for early debug console using Spreadtrum's serial
CONFIG_SERIO
	[arch] all
	[plat] all
	[field] make,code
	[subsys] tty
	[must] console
	[function] Serial I/O support.
CONFIG_SERIO_LIBPS2
	[arch] all
	[plat] all
	[field] make,code
	[subsys] tty
	[must] console
	[function] Serial I/O support.
CONFIG_SETEND_EMULATION
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] The SETEND instruction alters the data-endianness of the
	AArch32 EL0, and is deprecated in ARMv8.
CONFIG_SG_POOL
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SHMEM
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybo_console
	[function] Use full shmem filesystem.
CONFIG_SIGNALFD
	[arch] all
	[plat] all
	[field] code
	[subsys] make,code
	[must] console
	[function] Enable the signalfd() system call that allows to receive signals
	on a file descriptor.
CONFIG_SLABINFO
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] Increase debug efficiency for memory covered issue,
	   depends on PROC_FS,depends on SLAB || SLUB_DEBUG
CONFIG_SLAB_MERGE_DEFAULT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SLHC
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option enables Van Jacobsen serial line header
	  compression routines.
CONFIG_SLUB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] mm
	[must] busybox_console
	[function] Slub memory allocator
CONFIG_SLUB_CPU_PARTIAL
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] SLUB per cpu partial cache.
CONFIG_SLUB_DEBUG
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] debug
	[function] Increase debug efficiency for memory covered issue
CONFIG_SLUB_DEBUG_ON
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SLUB_STATS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] debug
	[function] SLUB statistics are useful to debug SLUBs allocation
	  behavior
CONFIG_SMARTJOYPLUS_FF
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] hid
	[must] user
	[function] SmartJoy PLUS PS2/USB adapter force feedback support
CONFIG_SMP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] home
	[function] Enable kernel support symmetric Multi-Processing.
CONFIG_SMP_ON_UP
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] home
	[function] Allow booting SMP kernel on uniprocessor systems.
CONFIG_SND
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] enable Advanced Linux Sound Architecture
CONFIG_SND_ARM
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_COMPRESS_OFFLOAD
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] audio compress offload support
CONFIG_SND_DRIVERS
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] audio moudle base config
CONFIG_SND_DYNAMIC_MINORS
	[arch] all
	[plat] all
	[field] code
	[subsys] sound
	[must] user
	[function] sound support dynamic device allocation
CONFIG_SND_HDA_PREALLOC_SIZE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Pre-allocated buffer size for HD-audio driver
CONFIG_SND_HWDEP
	[arch] all
	[plat] all
	[field] make
	[subsys] snd-usb-audio
	[must] debug
	[function] This macro is selected when snd usb audio true
	   support USB Audio/MIDI driver.
CONFIG_SND_JACK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] This macro is selected when using headphone
CONFIG_SND_JACK_INPUT_DEV
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_MAX_CARDS
	[arch] all
	[plat] all
	[field] code
	[subsys] sound
	[must] user
	[function] support max 32 device
CONFIG_SND_PCM
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] enable ALSA pcm
CONFIG_SND_PCM_TIMER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] PCM timer interface
CONFIG_SND_PROC_FS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Sound Proc FS Support
CONFIG_SND_RAWMIDI
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] sound Rawmidi interface
CONFIG_SND_SOC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] ALSA for SoC audio support
CONFIG_SND_SOC_COMPRESS
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] sound support compress
CONFIG_SND_SOC_I2C_AND_SPI
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] enable I2C and SPI bus for audio codec
CONFIG_SND_SOC_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] snd soc common code
CONFIG_SND_SOC_SPRD_AUDIO_TWO_STAGE_DMAENGINE_SURPPORT
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_SOC_SPRD_CODEC_SC2721
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_SOC_SPRD_CODEC_SC2730
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make, code
	[subsys] sound
	[must] user
	[function] snd codec dai
CONFIG_SND_SOC_SPRD_R1P0V3_SC2721
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_SOC_SPRD_SHARKL3
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_SOC_SPRD_VAUDIO
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_SOC_SPRD_VBC_R1P0V3
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SND_SOC_SPRD_VBC_V4
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] snd soc cpu dai
CONFIG_SND_SOC_SPRD_VBC_V4_SC2730
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] snd soc machine code
CONFIG_SND_SUPPORT_OLD_API
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Support old ALSA API
CONFIG_SND_TIMER
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] Support snd sound timer
CONFIG_SND_USB
	[arch] all
	[plat] all
	[field] config
	[subsys] snd
	[must] debug
	[function] This macro is used to support USB sound devices
CONFIG_SND_USB_AUDIO
	[arch] all
	[plat] all
	[field] make
	[subsys] snd
	[must] debug
	[function] This macro is used to support USB Audio/MIDI driver
CONFIG_SND_VERBOSE_PROCFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] sound
	[must] user
	[function] Verbose procfs contents
CONFIG_SOCK_CGROUP_DATA
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SOFTLOCKUP_DETECTOR
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SOUND
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] Sound card support
CONFIG_SPARSEMEM
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] busybox_console
	[function]  Sparsemem memory model.
CONFIG_SPARSEMEM_EXTREME
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem memory model-related configuration items.
CONFIG_SPARSEMEM_MANUAL
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem memory model-related configuration items.
CONFIG_SPARSEMEM_VMEMMAP
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparse Memory virtual memmap.
CONFIG_SPARSEMEM_VMEMMAP_ENABLE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Sparsemem memory model-related configuration items.
CONFIG_SPARSE_IRQ
	[arch] all
	[plat] all
	[field] code
	[subsys] interrupt
	[must] console
	[function] Sparse irq numbering is useful for distro kernels that want
	to define a high CONFIG_NR_CPUS value but still want to have
	low kernel memory footprint on smaller machines.
CONFIG_SPI
	[arch] all
	[plat] all
	[field] make
	[subsys] spi
	[must] user
	[function] SPI support
CONFIG_SPI_BITBANG
	[arch] all
	[plat] all
	[field] make
	[subsys] spi
	[must] user
	[function] Utilities for Bitbanging SPI masters
CONFIG_SPI_MASTER
	[arch] all
	[plat] all
	[field] make
	[subsys] spi
	[must] user
	[function] SPI Master Support
CONFIG_SPI_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] spi
	[must] user
	[function] Enable spreadtrum SPI controller
CONFIG_SPI_SPRD_ADI
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] spi
	[must] user
	[function] Spreadtrum ADI controller based on SPI.
CONFIG_SPLIT_PTLOCK_CPUS
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] busybox_console
	[function] Set the number of startup ARM cores.
CONFIG_SPRD_7SRESET
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] core
	[must] user
	[function] Spreadtrum hw 7s reset driver.
CONFIG_SPRD_APB_BUSMONITOR
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable APB busmonitor function
CONFIG_SPRD_APDU
	[arch] arm64
	[plat] roc1
	[field] make,code
	[subsys] misc
	[must] user
	[function] Spreadtrum apdu driver.
CONFIG_SPRD_APSYS_DVFS_DEVFREQ
	[arch] arm64
	[plat] sharkl5
	[field] make
	[subsys] devfreq
	[must] user
	[function] Enable apsys dvfs function.
CONFIG_SPRD_AUDIO_AGDSP_ACCESS
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] audio dsp access
CONFIG_SPRD_AUDIO_CPBOOT
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] misc
	[must] user
	[function] Reboot audio cp from kernel.
CONFIG_SPRD_AUDIO_DSP_DUMP
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] audio dsp memory and log dump
CONFIG_SPRD_AUDIO_MCDT
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] sound data transmission channel with dsp
CONFIG_SPRD_AUDIO_MEMORY_MANAGER
	[arch] all
	[plat] all
	[field] make
	[subsys] sound
	[must] user
	[function] audio memory allocation
CONFIG_SPRD_AUDIO_SIPC
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] sound
	[must] user
	[function] sound communication with audio dsp
CONFIG_SPRD_AUTOTEST
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] soc
	[must] user
	[function] Support Spreadtrum autotest
CONFIG_SPRD_AUTOTEST_GPIO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] soc
	[must] user
	[function] Spreadtrum gpio autotest support
CONFIG_SPRD_AUTOTEST_PINCTRL
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] soc
	[must] user
	[function] Spreadtrum pinctrl autotest support
CONFIG_SPRD_BUSMONITOR
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable busmonitor core function
CONFIG_SPRD_CACHE_EFUSE
	[arch] all
	[plat] sharkl5,sharkl5_32
	[field] 	[field]make
	[subsys] nvmem
	[must] home
	[function] get sprdtrum soc series efuse value using pre-reading mechanism
CONFIG_SPRD_CAM_PW_DOMAIN_R5P0
	[arch] arm64
	[plat] sharkl3
	[field] make,code
	[subsys] camera
	[must] user
	[function] This function is used to enable cam power domain.
CONFIG_SPRD_CLUSTER0_THERMAL
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] thermal
	[must] user
	[function] enable virtual sensor driver for cluster0
CONFIG_SPRD_CLUSTER1_THERMAL
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] thermal
	[must] user
	[function] enable virtual sensor driver for cluster1
CONFIG_SPRD_COMMON_CLK
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_CPROC
	[arch] all
	[plat] all
	[field] make
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd cproc module for modem boot.
CONFIG_SPRD_CPU_COOLING
	[arch] all
	[plat] orca,roc1,sharkl5,sharkl5_32
	[missing plat] sharkl3
	[field] make
	[subsys] thermal
	[must] user
	[function] sprd thermal policy
CONFIG_SPRD_CPU_COOLING_CPUIDLE
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] thermal
	[must] user
	[function] sprd thermal policy
CONFIG_SPRD_CPU_COOLING_DEVICE
	[arch] all
	[plat] orca,roc1,sharkl5,sharkl5_32
	[missing plat] sharkl3
	[field] make
	[subsys] thermal
	[must] user
	[function] sprd cpu power model
CONFIG_SPRD_CPU_HOTPLUG_GOV
	[arch] all
	[plat] all
	[field] make
	[subsys] cpu hotplug
	[must] user
	[function] Enable cpu hotplug based on PM_QoS for IPA, powerhint and etc.
CONFIG_SPRD_CPU_USAGE
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] This function is used to record cpu usage for each cpu.
CONFIG_SPRD_DEBUG
	[arch] all
	[plat] all
	[field] code,make,menu
	[subsys] soc
	[must] debug
	[function] Enable/disable sprd debug function.
CONFIG_SPRD_DEDICATE_THERMAL
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_DJTAG
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable Djtag function
CONFIG_SPRD_DJTAG_CORE
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable Djtag core function
CONFIG_SPRD_DMA
	[arch] all
	[plat] all
	[field] make
	[subsys] dma
	[must] none
	[function] Support Spreadtrum DMA.
CONFIG_SPRD_DMC_DRV
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable DMC core debug function, for example ddr info and pub monitor function
CONFIG_SPRD_DMC_MPU
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable MPU R4P0 debug function
CONFIG_SPRD_DMC_MPU_CORE
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Enable MPU core function
CONFIG_SPRD_EFUSE
	[arch] all
	[plat] all
	[field] 	[field]make
	[subsys] nvmem
	[must] home
	[function] get sprdtrum soc series efuse value
CONFIG_SPRD_EXT_MODEM
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_HW_DEVICE_DVFS_AGCP
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] misc
	[must] user
	[function] This config is enable audiocp DVFS function.
CONFIG_SPRD_HW_DEVICE_DVFS_CP
	[arch] arm64
	[plat] sharkl5
	[field] make,code
	[subsys] cp
	[must] user
	[function] This config is enable modem DVFS function.
CONFIG_SPRD_IMS_BRIDGE
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] Add ims_bridge kernel module to compile.
CONFIG_SPRD_IMS_BRIDGE_TEST
	[arch] all
	[plat] all
	[field] make, code
	[subsys] net
	[must] user
	[function] Add ims_bridged kernel test module to compile.
CONFIG_SPRD_IOMMU
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] home
	[function] This macro is to support Sprd iommu.
CONFIG_SPRD_IPA_PCIE_WORKROUND
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_IPA_SUPPORT
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_IPA_SYS
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_IQ
	[arch] all
	[plat] all
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable wcdma iq log function.
CONFIG_SPRD_IRQS_MONITOR
	[arch] all
	[plat] all
	[field] make,code
	[subsys] soc
	[must] debug
	[function] This function is used to enable irq monistor
CONFIG_SPRD_JPG
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] misc
	[must] user
	[function] The JPG is the hardware accelerator for jpeg standard image compression.
CONFIG_SPRD_JPG_CALL_VSP_PW_DOMAIN
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_LOOK_AT
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_MAILBOX
	[arch] all
	[plat] all
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd mailbox module.
CONFIG_SPRD_MAILBOX_R1P2
	[arch] all
	[plat] all
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable sprd mailbox r1p2 version.
CONFIG_SPRD_MCD
	[arch] arm64
	[plat] roc1
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] modem control device driver
CONFIG_SPRD_MEM_OVERLAY_CHECK
	[arch] all
	[plat] all
	[field] code
	[subsys] staging
	[must] user
	[function] This function is used to detected overlay region in
		   reserved-memory.
CONFIG_SPRD_MINI_SYSDUMP
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_MIPI_LOG_R5P0
	[arch] arm64
	[plat] sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_MM_PW_DOMAIN_R6P0
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] misc
	[must] console
	[function] This function is used to enable mm power domain.
CONFIG_SPRD_MODEM_DEBUG
	[arch] arm64
	[plat] sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_MODEM_LOADER
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_PAMU3
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_PAM_IPA
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_PCIE_EP_DEVICE
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_PMIC_SYSCON
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] soc
	[must] debug
	[function] This function is used to calibrate PMIC 26M.
CONFIG_SPRD_POWER_DEBUG
	[arch] all
	[plat] all
	[field] make
	[subsys] soc
	[must] debug
	[function] Enable/disable sprd power debug function.
CONFIG_SPRD_PTM
	[arch] all
	[plat] all
	[field] make
	[subsys] debug
	[must] debug
	[function] Support Spreadtrum PTM.
CONFIG_SPRD_REGMAP_DEBUG
	[arch] arm
	[plat] sharkl5_32
	[field] menu,code
	[subsys] core
	[must] user
	[function] Spreadtrum syscon regmap debug.
CONFIG_SPRD_ROC1_CLK
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_ROC1_USB2_PHY
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SC9863A_CLK
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SENSOR_HUB
	[arch] all
	[plat] all
	[field] make
	[subsys] iio
	[must] user
	[function] enable sensor hub driver built in kernel
CONFIG_SPRD_SFP_SUPPORT
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SFP_TEST
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SHARKL3_USB2_PHY
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SHARKL5_CLK
	[arch] all
	[plat] sharkl5,sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SHARKL5_USB2_PHY
	[arch] all
	[plat] sharkl5,sharkl5_32
	[field] code
	[subsys] usb
	[must] user
	[function] usb phy init
CONFIG_SPRD_SIPA
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SIPA_DELEGATE
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SIPA_DELE_MINIAP_IN_AP
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SIPC
	[arch] all
	[plat] all
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable sipc function between modem and AP.
CONFIG_SPRD_SIPC_MEM_CACHE_EN
	[arch] all
	[plat] all
	[field] code
	[subsys] staging
	[must] user
	[function] This function is used to enable sipx share memmory cache.
CONFIG_SPRD_SIPC_SETH
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,make
	[subsys] net
	[must] user
	[function] This driver supports the Spreadtrum Ethernet based on share memory.
CONFIG_SPRD_SIPC_SETH_RAWIP
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,make
	[subsys] net
	[must] user
	[function]  Support using zero copy rawip transfer
CONFIG_SPRD_SIPC_SPIPE
	[arch] all
	[plat] all
	[field] make
	[subsys] staging
	[must] user
	[function] This function is used to enable spipe function.
CONFIG_SPRD_SIPC_SPOOL
	[arch] all
	[plat] all
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable spool function.
CONFIG_SPRD_SIPC_SWCNBLK
	[arch] arm64
	[plat] sharkl3
	[field] make, code
	[subsys] staging
	[must] user
	[function] This function is used to enable wcnblk function for wifi ht.
CONFIG_SPRD_SIPC_V2
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_SIPC_ZERO_COPY_SIPX
	[arch] all
	[plat] all
	[field] make
	[subsys] staging
	[must] user
	[function] This function is used to enable sipx function between modem and AP.
CONFIG_SPRD_SIP_FW
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] firmware
	[must] user
	[function] Provides interfaces to SoC implementation-specific secure
	           services.
CONFIG_SPRD_SOC_THERMAL
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] thermal
	[must] user
	[function] enable virtual sensor for soc
CONFIG_SPRD_SYSDUMP
	[arch] all
	[plat] all
	[field] make,code
	[subsys] soc
	[must] user
	[function] This function is used to enable sprd sysdump feature
        that dump the DDR except reserved memory.
CONFIG_SPRD_THERMAL
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make
	[subsys] thermal
	[must] user
	[function] This function is used to config thermal moudle.
CONFIG_SPRD_TIMER
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make
	[subsys] timer
	[must] console
	[function] Support for Spreadtrum ARM based SoCs.
CONFIG_SPRD_TOP_DVFS_DEVFREQ
	[arch] arm64
	[plat] roc1,sharkl5
	[field] make
	[subsys] devfreq
	[must] user
	[function] Enable device dvfs function.
CONFIG_SPRD_USB3_PHY
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SPRD_VSP
	[arch] all
	[plat] all
	[field] make,code,menu
	[subsys] misc
	[must] user
	[function] The VSP is a video CODEC accelerator.
CONFIG_SPRD_WATCHDOG
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,code
	[subsys] core
	[must] user
	[function] Spreadtrum watchdog driver.
CONFIG_SPRD_WATCHDOG_SYS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] watchdog
	[must] user
	[function] add ap sys watchdog.
CONFIG_SRCU
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Selects the sleepable version of RCU.
CONFIG_SSB_POSSIBLE
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Support for SSB(Sonics Silicon Backplane).
CONFIG_STACKTRACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] debug
	[must] console
	[function] Stack backtrace support.
CONFIG_STACKTRACE_SUPPORT
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] console
	[function] Keep stack trace of persistent data block lock holders.
CONFIG_STACK_TRACER
	[arch] all
	[plat] all
	[field] code,make
	[subsys] core
	[must] debug
	[function] Support stack tracer.
CONFIG_STAGING
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support kernel Staging drivers.
CONFIG_STANDALONE
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Select only drivers that don't need compile-time external firmware.
CONFIG_STRICT_KERNEL_RWX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_STRICT_MODULE_RWX
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SUSPEND
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Suspend to RAM and standby.
CONFIG_SUSPEND_FREEZER
	[arch] all
	[plat] all
	[field] make,code
	[subsys] power
	[must] user
	[function] Enable freezer for suspend to RAM/standby.
CONFIG_SWAP
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Support for paging of anonymous memory.
CONFIG_SWIOTLB
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support switch IO TLB.
CONFIG_SWPHY
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SWP_EMULATE
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] Emulate SWP/SWPB instructions.
CONFIG_SWP_EMULATION
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] make,code
	[subsys] core
	[must] console
	[function] Emulate SWP/SWPB instructions.
CONFIG_SW_SYNC
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Support Software synchronization objects.
CONFIG_SYNC_FILE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_SYN_COOKIES
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] SYN cookies provide protection against SYN flooding attack.
CONFIG_SYSCTL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable kernel support the sysctl.
CONFIG_SYSCTL_EXCEPTION_TRACE
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Enable support for /proc/sys/debug/exception-trace.
CONFIG_SYSCTL_SYSCALL
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Sysctl syscall support.
CONFIG_SYSFS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] busybox_console
	[function] sysfs file system support.
CONFIG_SYSFS_SYSCALL
	[arch] all
	[plat] all
	[field] make,code
	[subsys] fs
	[must] console
	[function] Support sysfs system call.
CONFIG_SYSTEM_TRUSTED_KEYRING
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] support SYSTEM_TRUSTED_KEYRING.
CONFIG_SYSTEM_TRUSTED_KEYS
	[arch] all
	[plat] all
	[field] make
	[subsys] crypto
	[must] user
	[function] Support SYSTEM_TRUSTED_KEYS.
CONFIG_SYS_SUPPORTS_APM_EMULATION
	[arch] arm
	[plat] sharkl5_32
	[field] menu
	[subsys] core
	[must] console
	[function] This config select by ARM.
CONFIG_SYS_SUPPORTS_HUGETLBFS
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] fs
	[must] android4.4
	[function] Grants system server access to /proc/<pid>/oom_adj
		   for Android applications.it is needed by android4.4.
CONFIG_TABLET_USB_ACECAD
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Acecad Flair tablet support (USB)
CONFIG_TABLET_USB_AIPTEK
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Aiptek 6000U/8000U and Genius G_PEN tablet support (USB)
CONFIG_TABLET_USB_GTCO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] GTCO CalComp/InterWrite USB Support
CONFIG_TABLET_USB_HANWANG
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] Hanwang Art Master III tablet support (USB)
CONFIG_TABLET_USB_KBTAB
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] KB Gear JamStudio tablet support (USB)
CONFIG_TASKSTATS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Export task/process statistics through netlink.
CONFIG_TASKS_RCU
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TASK_IO_ACCOUNTING
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable per-task storage I/O accounting.
CONFIG_TASK_XACCT
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Enable extended accounting over taskstats.
CONFIG_TCP_CONG_CUBIC
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] This is version 2.0 of BIC-TCP which uses a cubic growth function among other techniques.
CONFIG_TCP_MD5SIG
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] Giving MD5 protection to TCP sessions
CONFIG_TEXTSEARCH
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for txt search.
CONFIG_TEXTSEARCH_BM
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Boyer-Moore text search.
CONFIG_TEXTSEARCH_FSM
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] A naive finite state machine text search approach.
CONFIG_TEXTSEARCH_KMP
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support Knuth-Morris-Pratt text search.
CONFIG_THERMAL
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] kernel thermal core framework
CONFIG_THERMAL_DEFAULT_GOV_POWER_ALLOCATOR
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Set default thermal governor as power allocator.
CONFIG_THERMAL_EMERGENCY_POWEROFF_DELAY_MS
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_THERMAL_GOV_POWER_ALLOCATOR
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Power allocator thermal governor.
CONFIG_THERMAL_GOV_STEP_WISE
	[arch] arm64
	[plat] sharkl3
	[missing plat] orca,roc1,sharkl5
	[field] make
	[subsys] thermal
	[must] user
	[function] default thermal governor
CONFIG_THERMAL_OF
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] kernel thermal core framework
CONFIG_THERMAL_WRITABLE_TRIPS
	[arch] all
	[plat] all
	[field] make
	[subsys] thermal
	[must] user
	[function] Enable writable trip points.
CONFIG_THIN_ARCHIVES
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_THREAD_INFO_IN_TASK
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] core
	[must] console
	[function] Select this to move thread_info off the stack into task_struct.  To
		make this work, an arch will need to remove all thread_info fields
		except flags and fix any runtime bugs.
CONFIG_TICK_CPU_ACCOUNTING
	[arch] all
	[plat] all
	[field] menu
	[subsys] time
	[must] debug
	[function] Simple tick based cputime accounting.
CONFIG_TICK_ONESHOT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] time
	[must] console
	[function] This is only related to the tick functionality.
CONFIG_TIMERFD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] interrupt
	[must] console
	[function] Enable the timerfd() system call that allows to receive timer
		events on a file descriptor.
CONFIG_TIMER_OF
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TIMER_PROBE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TMPFS
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] busybox_console
	[function] Tmpfs virtual memory file system support. Tmpfs is a
		   file system which keeps all files in virtual memory.
CONFIG_TMPFS_POSIX_ACL
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] busybox_console
	[function] Tmpfs POSIX Access Control Lists.
CONFIG_TMPFS_XATTR
	[arch] all
	[plat] all
	[field] code
	[subsys] fs
	[must] busybox_console
	[function] Tmpfs extended attributes.
CONFIG_TOUCHSCREEN_ADAPTIVE
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] user
	[function] adaptive touchscreen driver
CONFIG_TOUCHSCREEN_ADAPTIVE_VENDOR_FOCALTECH
	[arch] all
	[plat] all
	[field] make
	[subsys] input
	[must] unknown
	[function] This macro is to control the TP driver compilation.
CONFIG_TOUCHSCREEN_PROPERTIES
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] touchscreen of interface
CONFIG_TRACEPOINTS
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Place an empty function call at each tracepoint site.
CONFIG_TRACEPOINT_BENCHMARK
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TRACER_MAX_TRACE
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Maxsize of trace, Maxsize report of sched, irq, trace.
CONFIG_TRACER_SNAPSHOT
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] Create a snapshot trace buffer
CONFIG_TRACER_SNAPSHOT_PER_CPU_SWAP
	[arch] all
	[plat] all
	[field] menu
	[subsys] core
	[must] debug
	[function] Allow snapshot to swap per CPU
CONFIG_TRACE_CLOCK
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] Report clock of trace.
CONFIG_TRACE_EVAL_MAP_FILE
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TRACE_IRQFLAGS
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] debug
	[function] Enable/disable irq flags trace.
CONFIG_TRACE_IRQFLAGS_SUPPORT
	[arch] all
	[plat] all
	[field] code,menu
	[subsys] core
	[must] debug
	[function] Support irq flags trace.
CONFIG_TRACING
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] debug
	[function] To avoid circular dependencies to accomplish the hiding of the automatic options.
CONFIG_TRACING_EVENTS_GPIO
	[arch] all
	[plat] sharkl3,sharkl5_32
	[field] code
	[subsys] core
	[must] debug
	[function] Trace gpio events
CONFIG_TRACING_SUPPORT
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] debug
	[function] Minsize of trace in arch, if enable ftrace, this is necessary.
CONFIG_TREE_SRCU
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TRUSTY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] tee
	[must] home
	[function] This is the top config option of trusty driver which supports
			  communication between linux and trusty OS.
		  Trusty driver is used on all ARM architecture-based platforms
		  with trusty OS integrated
CONFIG_TRUSTY_LOG
	[arch] all
	[plat] all
	[field] make
	[subsys] tee
	[must] debug
	[function] This is used to dump trusty OS log and output to kernel log
CONFIG_TRUSTY_VIRTIO
	[arch] all
	[plat] all
	[field] make
	[subsys] tee
	[must] home
	[function] This implements trusty virtio driver which works with the
		   back-end virtio driver in trusty OS
CONFIG_TRUSTY_VIRTIO_IPC
	[arch] all
	[plat] all
	[field] make
	[subsys] tee
	[must] home
	[function] This implements trusty IPC driver based on trusty virtio
CONFIG_TTY
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] busybox_console
	[function] Enable TTY
CONFIG_TUN
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] vts require, Universal TUN/TAP device driver support
CONFIG_TYPEC
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_TYPEC_UCSI
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_UEVENT_HELPER
	[arch] all
	[plat] all
	[field] code
	[subsys] core
	[must] console
	[function] Support for uevent helper.
CONFIG_UEVENT_HELPER_PATH
	[arch] all
	[plat] all
	[field] code
	[subsys] udev
	[must] console
	[function] path to uevent helper. Set to null.
CONFIG_UHID
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] input
	[must] unknown
	[function] User-space I/O driver support for HID subsystem
CONFIG_UID16
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] Enable 16-bit UID system calls.
CONFIG_UID_SYS_STATS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] vts require, Per-UID statistics
CONFIG_UMW2652
	[arch] all
	[plat] sharkl5,sharkl5_32
	[field] menu
	[subsys] wcn
	[must] user
	[function] This function is used to support wcn umw2652 chip
CONFIG_UNCOMPRESS_INCLUDE
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] debug
	[must] console
	[function] Support for compress include path. Set to "debug/uncompress.h".
CONFIG_UNINLINE_SPIN_UNLOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] console
	[function] vts require, Enable uninlie spin.
CONFIG_UNIX
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] vts require, support for Unix domain sockets
CONFIG_UNIX98_PTYS
	[arch] all
	[plat] all
	[field] make
	[subsys] uart
	[must] user
	[function] Support unix98 PTY
CONFIG_UNMAP_KERNEL_AT_EL0
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] arch
	[must] user
	[function] meltdown/spectre fix
CONFIG_UPROBES
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_UPROBE_EVENTS
	[arch] arm
	[plat] sharkl5_32
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB Core files and filesystem
CONFIG_USB_ACM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] USB host side ACM function.
CONFIG_USB_ANNOUNCE_NEW_DEVICES
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] debug
	[function] USB announce new devices info.
CONFIG_USB_ARCH_HAS_HCD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB host feature.
CONFIG_USB_COMMON
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] Provides code common for host and device side USB.
CONFIG_USB_CONFIGFS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] A Linux USB "gadget" can be set up through configfs.
CONFIG_USB_CONFIGFS_F_ACC
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] USB gadget Accessory support
CONFIG_USB_CONFIGFS_F_AUDIO_SRC
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] USB gadget Audio Source support.
CONFIG_USB_CONFIGFS_F_FS
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] Function filesystem (FunctionFS)
CONFIG_USB_CONFIGFS_F_MBIM
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB_CONFIGFS_F_MIDI
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] The MIDI Function acts as a USB Audio device.
CONFIG_USB_CONFIGFS_F_MTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] USB gadget MTP support.
CONFIG_USB_CONFIGFS_F_PTP
	[arch] all
	[plat] all
	[field] menu
	[subsys] usb
	[must] user
	[function] USB gadget PTP support.
CONFIG_USB_CONFIGFS_F_VSERIAL
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support vendor serial.
CONFIG_USB_CONFIGFS_MASS_STORAGE
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support USB Mass storage.
CONFIG_USB_CONFIGFS_RNDIS
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] This macro is to support RNDIS
CONFIG_USB_CONFIGFS_SERIAL
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support Generic serial bulk in/out.
CONFIG_USB_CONFIGFS_UEVENT
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] Uevent notification of Gadget state.
CONFIG_USB_DEFAULT_PERSIST
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] Enable USB persist by default for PM.
CONFIG_USB_DWC3
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support DWC3 USB driver.
CONFIG_USB_DWC3_DUAL_ROLE
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] usb
	[must] user
	[function] DWC3 USB Dual Role mode support.
CONFIG_USB_DWC3_OF_SIMPLE
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] usb
	[must] user
	[function] Support USB2/3 functionality in simple SoC integrations.
CONFIG_USB_DWC3_SPRD
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB_EHCI_HCD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] EHCI is standard for USB 2.0 host controller hardware.
CONFIG_USB_EHCI_HCD_PLATFORM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Generic EHCI driver for a platform device.
CONFIG_USB_EHCI_TT_NEWSCHED
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] Improved Transaction Translator scheduling.
CONFIG_USB_F_ACC
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget Accessory support
CONFIG_USB_F_AUDIO_SRC
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget Audio Source support.
CONFIG_USB_F_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] Function filesystem (FunctionFS)
CONFIG_USB_F_MASS_STORAGE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support USB Mass storage.
CONFIG_USB_F_MBIM
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB_F_MIDI
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] The MIDI Function acts as a USB Audio device.
CONFIG_USB_F_MTP
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget MTP support.
CONFIG_USB_F_PTP
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget PTP support.
CONFIG_USB_F_RNDIS
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] RNDIS function
CONFIG_USB_F_SERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget SERIAL support.
CONFIG_USB_F_VSERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB gadget VSERIAL support.
CONFIG_USB_GADGET
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB Gadget Support
CONFIG_USB_GADGET_DEBUG_FILES
	[arch] all
	[plat] all
	[field] config
	[subsys] usb
	[must] user
	[function] This macro is to support gadget debug info.
CONFIG_USB_GADGET_STORAGE_NUM_BUFFERS
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] Number of storage pipeline buffers
CONFIG_USB_GADGET_VBUS_DRAW
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] Maximum VBUS Power usage (2-500 mA).
CONFIG_USB_HID
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB human interface device (HID) support
CONFIG_USB_HIDDEV
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] /dev/hiddev raw HID device support
CONFIG_USB_LIBCOMPOSITE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] composite based drivers
CONFIG_USB_MUSB_DUAL_ROLE
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] USB Dual Role mode support.
CONFIG_USB_MUSB_HDRC
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Inventra Highspeed Dual Role Controller (TI, ADI, AW, ...).
CONFIG_USB_MUSB_SPRD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to suppor SPRD platforms musb driver.
CONFIG_USB_OHCI_HCD
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support OHCI HCD (USB 1.1).
CONFIG_USB_OHCI_HCD_PLATFORM
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] This macro is to support Generic OHCI driver for a platform device.
CONFIG_USB_OHCI_LITTLE_ENDIAN
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] A controller type.
CONFIG_USB_OTG_WAKELOCK
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to hold a wakelock when USB connected.
CONFIG_USB_PAM
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB_PHY
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support USB Physical Layer drivers.
CONFIG_USB_SC27XX_TYPEC
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB_SERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] unknown
	[function] USB serial mode on host mode
CONFIG_USB_SPRD_DMA
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support SPRD DMA mode.
CONFIG_USB_SPRD_DMA_V3
	[arch] all
	[plat] all
	[field] make,code
	[subsys] usb
	[must] user
	[function] DMA VERSION V3.
CONFIG_USB_SPRD_OFFLOAD
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] usb
	[must] user
	[function] This macro is to support SPRD OFFLOAD mode.
CONFIG_USB_STORAGE
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] This macro is to support USB Mass Storage support.
CONFIG_USB_SUPPORT
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] This option adds core support for Universal Serial Bus (USB).
CONFIG_USB_U_ETHER
	[arch] all
	[plat] all
	[field] code
	[subsys] usb
	[must] user
	[function] RNDIS function
CONFIG_USB_U_SERIAL
	[arch] all
	[plat] all
	[field] make
	[subsys] usb
	[must] user
	[function] u_serial.c -- utilities for USB gadget "serial port"/TTY support
CONFIG_USB_XHCI_HCD
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USB_XHCI_PLATFORM
	[arch] arm64
	[plat] roc1
	[field]
	[subsys]
	[must]
	[function]
CONFIG_USE_OF
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] Flattened Device Tree support.
CONFIG_VECTORS_BASE
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] The base address of exception vectors.  This must be two pages
		in size.
CONFIG_VFAT_FS
	[arch] all
	[plat] all
	[field] make
	[subsys] fs
	[must] user
	[function] This option provides support for normal Windows file
		   systems with long filenames.
CONFIG_VFP
	[arch] arm
	[plat] sharkl5_32
	[field] make,code
	[subsys] core
	[must] console
	[function] VFP-format floating point maths.
CONFIG_VFPv3
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] core
	[must] console
	[function] VFPV3-format floating point maths.
CONFIG_VIDEOMODE_HELPERS
	[arch] all
	[plat] all
	[field] make,code
	[subsys] video
	[must] home
	[function] Helper function for parsing lcd video parameters.
CONFIG_VIRTIO
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This option is selected by any driver which implements
		  the virtio bus, such as CONFIG_VIRTIO_PCI,
		  CONFIG_VIRTIO_MMIO, CONFIG_LGUEST, CONFIG_RPMSG
		  or CONFIG_S390_GUEST.
CONFIG_VIRTIO_CONSOLE
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_VIRTIO_MMIO
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This drivers provides support for memory mapped
		  virtio platform device driver.
CONFIG_VIRTIO_NET
	[arch] arm64
	[plat] sharkl3
	[field]
	[subsys]
	[must]
	[function]
CONFIG_VMAP_STACK
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field]
	[subsys]
	[must]
	[function]
CONFIG_VMSPLIT_3G
	[arch] arm
	[plat] sharkl5_32
	[field] code
	[subsys] mm
	[must] console
	[function] Set the memory limit between userspace and kernelspace.
CONFIG_VM_EVENT_COUNTERS
	[arch] all
	[plat] all
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Enable VM event counters for /proc/vmstat.
CONFIG_WATCHDOG
	[arch] all
	[plat] all
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic Watchdog Controller support.
CONFIG_WATCHDOG_CORE
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] make,code
	[subsys] core
	[must] user
	[function] Generic Watchdog Core sys support.
CONFIG_WATCHDOG_HANDLE_BOOT_ENABLED
	[arch] all
	[plat] all
	[field]
	[subsys]
	[must]
	[function]
CONFIG_WATCHDOG_PRETIMEOUT_DEFAULT_GOV_PANIC
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,code
	[subsys] core
	[must] user
	[function] watchdog pretimeout default gov panic
CONFIG_WATCHDOG_PRETIMEOUT_GOV
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,code
	[subsys] core
	[must] user
	[function] watchdog pretimeout gov
CONFIG_WATCHDOG_PRETIMEOUT_GOV_PANIC
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] menu,code
	[subsys] core
	[must] user
	[function] watchdog pretimeout gov panic
CONFIG_WCN_BOOT
	[arch] all
	[plat] all
	[field] make
	[subsys] wcn
	[must] user
	[function] wcn boot up for 2355 chip.
CONFIG_WCN_PCIE
	[arch] arm64
	[plat] roc1
	[field] make
	[subsys] wcn
	[must] user
	[function] support pcie bus for wcn chip
CONFIG_WCN_PLATFORM
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make,code
	[subsys] wcn
	[must] user
	[function] wcn intergation 2342 chip support
CONFIG_WCN_SIPC
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make
	[subsys] wcn
	[must] user
	[function] WCN integration chip 2342 sipc Support
CONFIG_WCN_SLP
	[arch] all
	[plat] sharkl3,sharkl5,sharkl5_32
	[field] make
	[subsys] wcn
	[must] user
	[function] wcn sleep and wakeup for 2355 chip
CONFIG_WCN_UTILS
	[arch] all
	[plat] all
	[field] make
	[subsys] wcn
	[must] user
	[function] debug tool for wcn chip
CONFIG_WIRELESS
	[arch] all
	[plat] all
	[field] make
	[subsys] wireless
	[must] user
	[function] wireless support
CONFIG_WLAN
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] This section contains all the pre 802.11 and 802.11 wireless
		device drivers. For a complete list of drivers and documentation
		on them refer to the wireless wiki:
CONFIG_WQ_POWER_EFFICIENT_DEFAULT
	[arch] all
	[plat] roc1,sharkl5,sharkl5_32
	[field] code
	[subsys] power
	[must] user
	[function] power efficient work queue
CONFIG_X509_CERTIFICATE_PARSER
	[arch] all
	[plat] all
	[field] menu
	[subsys] security
	[must] user
	[function] X.509 certificate parser
CONFIG_XFRM
	[arch] all
	[plat] all
	[field] menu,make,code
	[subsys] net
	[must] user
	[function] Support for xfrm
CONFIG_XFRM_ALGO
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for xfrm algorithum
CONFIG_XFRM_FRAGMENT
	[arch] arm64
	[plat] sharkl5
	[field] menu
	[subsys] net
	[must] user
	[function] Support pkt fragment in ip layer before esp. By using this
		   one,control parameter will be set to one. It is only for
		   sprd until now. It is used for vowifi.
CONFIG_XFRM_IPCOMP
	[arch] all
	[plat] all
	[field] menu,make
	[subsys] net
	[must] user
	[function] support for ip comparing
CONFIG_XFRM_STATISTICS
	[arch] all
	[plat] all
	[field] make
	[subsys] net
	[must] user
	[function] This statistics is to show statistics about transformation
		   factor at packet processing for developer.It is used for
		   vowifi.
CONFIG_XFRM_SUB_POLICY
	[arch] all
	[plat] all
	[field] menu
	[subsys] net
	[must] user
	[function] Support sub policy for developers. By using sub policy with
		   main one, two policies can be applied to the same packet at
		   once. It is used for vowifi.
CONFIG_XFRM_USER
	[arch] all
	[plat] all
	[field] menu,code
	[subsys] net
	[must] user
	[function] vts require, Support for Transformation(XFRM) user configuration interface
		like IPsec used by native Linux tools
CONFIG_XPS
	[arch] all
	[plat] all
	[field] menu,net
	[subsys] net
	[must] user
	[function] To enable XPS, the bitmap of CPUs that may use a transmit
		queue is configured using the sysfs file entry:
		/sys/class/net/<dev>/queues/tx-<n>/xps_cpus
CONFIG_ZBOOT_ROM_BSS
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] core
	[must] console
	[function] Compressed ROM boot loader BSS address.
CONFIG_ZBOOT_ROM_TEXT
	[arch] arm
	[plat] sharkl5_32
	[field] make
	[subsys] core
	[must] code
	[function] Compressed ROM boot loader base address.
CONFIG_ZBUD
	[arch] all
	[plat] all
	[field] make,code
	[subsys] memory
	[must] ZCACHE feature
	[function] an memory allocator for storing compressed pages.
CONFIG_ZLIB_DEFLATE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support uncompress zlib by deflate.
CONFIG_ZLIB_INFLATE
	[arch] all
	[plat] all
	[field] make
	[subsys] core
	[must] console
	[function] Support uncompress zlib by inflate.
CONFIG_ZONE_DMA
	[arch] arm64
	[plat] roc1,sharkl3,sharkl5
	[field] code
	[subsys] mm
	[must] busybox_console
	[function] Dma zone.
CONFIG_ZRAM
	[arch] all
	[plat] all
	[field] make
	[subsys] block
	[must] user
	[function] SWAP partition based on RAM is used to access the compressed anon page
		   to avoid the influence of IO speed restriction on the system,
		   which is equivalent to increasing the size of available memory.
CONFIG_ZSMALLOC
	[arch] all
	[plat] all
	[field] make
	[subsys] mm
	[must] user
	[function] The Zsmalloc allocator attempts to store multiple
		   objects of the same size on a composite page
