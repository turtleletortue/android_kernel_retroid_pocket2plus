/*
 * sound/soc/sprd/dai/vbc/r1p0v3/vbc-comm.h
 *
 * SPRD SoC VBC -- SpreadTrum SOC DAI for VBC Common function.
 *
 * Copyright (C) 2015 SpreadTrum Ltd.
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY ork FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */
#ifndef __VBC_COMM_H
#define __VBC_COMM_H



#include "sprd-audio.h"

#define VBC_VERSION	"vbc.r1p0v3"

/* AD DGMUX NUM */
enum {
	ADC0_DGMUX = 0,
	ADC1_DGMUX,
	ADC2_DGMUX,
	ADC3_DGMUX,
	ADC_DGMUX_MAX
};

/* DG */
enum {
	VBC_DAC_DG = 0,
	VBC_ADC01_DG,
	VBC_ADC23_DG,
	VBC_DG_MAX,
};
enum {
	VBC_MIXERDG_DAC01 = 0,
	VBC_MIXERDG_DAC23,
	VBC_MIXERDG_DACMAX,
};
/*AD SRC*/
enum {
	VBC_AD01_SRC = 0,
	VBC_AD23_SRC,
	VBC_AD_SRC_MAX,
};

/* DA SRC */
/*da src configured with eq*/

/* eq :
 * dac eq include eq6, eq4 and alc.
 * adc eq include eq6.
 */
enum {
	VBC_DA_EQ = 0,
	VBC_AD01_EQ,
	VBC_AD23_EQ,
	VBC_EQ_MAX,
};

enum {
	VBC_PLAYBACK01 = 0,
	VBC_PLAYBACK23 = 1,
	SPRD_VBC_PLAYBACK_COUNT = 2,
	VBC_CAPTURE01 = 2,
	VBC_CAPTURE23 = 3,
	VBC_IDX_MAX
};

enum VBC_MODULE {
	AD_FIFO,
	AD_IIS,
	AD_IIS_AFIFO,
	AD_EQ6,
	AD_DG,
	AD_SRC,
	DA_FIFO,
	DA_DGMIXER,
	DA_DG,
	DA_EQ6,
	DA_ALC,
	DA_EQ4,
	DA_NOISE_GEN,
	DA_IIS,
	DA_IIS_AFIFO,
	DA_SRC,
	DA_NCHTONE,
	DA_NCHFLT,
	SIDE_TONE,
	SIDE_TONE_FIFO,
	FM_MUTE,
};
enum VBC_ST_MODULE {
	ST_EN,
	ST_HPF,
};

enum VBC_BT_MODULE {
	BT_AD_SRC,
	BT_DA_SRC
};

enum VBC_IIS_PORT {
	VBC_IIS0,
	VBC_IIS1,
	VBC_IIS2,
	VBC_IIS3,
	VBC_IIS4
};

enum VBC_MIXER_ID_E {
	VBC_MIXER_DAC,
	VBC_MIXER_ST,
	VBC_MIXER_MAX,
};

enum VBC_SRC_MODE_ENUM {
	SRC_INPUT_48000 = 0,
	SRC_INPUT_44100,
	SRC_INPUT_32000,
	SRC_INPUT_24000,
	SRC_INPUT_22050,
	SRC_INPUT_16000,
	SRC_INPUT_12000,
	SRC_INPUT_11025,
	SRC_INPUT_9600,
	SRC_INPUT_8000
};

enum VBC_DAT_FORMAT {
	VBC_DAT_L16 = 0,
	VBC_DAT_H16,
	VBC_DAT_L24,
	VBC_DAT_H24
};

/*vbc mux setting*/
enum {
	SPRD_VBC_MUX_START = 0,
	SPRD_VBC_ST0_CHAN_MUX = SPRD_VBC_MUX_START,
	SPRD_VBC_ST1_CHAN_MUX,
	SPRD_VBC_ST0_MUX,
	SPRD_VBC_ST1_MUX,
	SPRD_VBC_AD0_INMUX,
	SPRD_VBC_AD1_INMUX,
	SPRD_VBC_AD2_INMUX,
	SPRD_VBC_AD3_INMUX,
	SPRD_VBC_AD_IISMUX,
	SPRD_VBC_AD23_IISMUX,
	SPRD_VBC_DFM_DA0_ADDFM_INMUX,
	SPRD_VBC_DFM_DA1_ADDFM_INMUX,
	SPRD_VBC_DFM_DA0_ADDST_INMUX,
	SPRD_VBC_DFM_DA1_ADDST_INMUX,
	SPRD_VBC_MUX_MAX
};

enum {
	VBC_LOOP_SWITCH_START = SPRD_VBC_MUX_MAX,
	VBC_AD01_LOOP_SWITCH = VBC_LOOP_SWITCH_START,
	VBC_AD23_LOOP_SWITCH,
	VBC_LOOP_SWITCH_MAX
};

enum SYS_IIS_E {
	SYS_IIS_START = 0,
	SYS_IIS0 = SYS_IIS_START,
	SYS_IIS1,
	SYS_IIS2,
	SYS_IIS3,
	SYS_IIS4,
	SYS_IIS5,
	SYS_IIS6,
	SYS_IIS_MAX,
};

#define AUD_FIRMWARE_PATHNAME_LEN_MAX 256
#define MIXERDG_MAX_VAL		(0xffff)

/* left channel use index1, right channel use index2
 * and index0 reserved
 */
#define AUDIO_CHAN_L (0x1)
#define AUDIO_CHAN_R (0x2)
#define AUDIO_CHAN_ALL (0x8)
#define AUDIO_ARRAY_MAX (0x3)

enum {
	CHAN_IDX_0,
	CHAN_IDX_1,
	CHAN_IDX_MAX,
};

#define AUDIO_IS_CHAN_L(chan) ((AUDIO_CHAN_ALL ==\
(chan & 0xF)) || (AUDIO_CHAN_L & (chan)))
#define AUDIO_IS_CHAN_R(chan) ((AUDIO_CHAN_ALL ==\
(chan & 0xF)) || (AUDIO_CHAN_R & (chan)))
#define AUDIO_CHAN_CHECK(chan) (AUDIO_IS_CHAN_L(chan) ||\
AUDIO_IS_CHAN_R(chan))

#define VBC_EQ_FIRMWARE_MAGIC_LEN (4)
#define VBC_EQ_FIRMWARE_MAGIC_ID ("VBEQ")
#define VBC_EQ_PROFILE_VERSION (0x00000002)
#define VBC_EQ_PROFILE_CNT_MAX (100)
#define VBC_EQ_PROFILE_NAME_MAX (32)
#define VBC_DA_EFFECT_PARAS_LEN (20+72*2)
#define VBC_AD_EFFECT_PARAS_LEN (2 + 43*2)

#define IS_SPRD_VBC_SWITCH_RANG(reg) \
	((reg) >= VBC_LOOP_SWITCH_START && (reg) < (VBC_LOOP_SWITCH_MAX))
#define SPRD_VBC_SWITCH_IDX(reg) (reg - VBC_LOOP_SWITCH_START)
#define VBC_DG_VAL_MAX (0x7F)

#define VB_DA01_FRAG_LEN (80)
#define VB_DA23_FRAG_LEN (240)
#define VB_AD01_FRAG_LEN (240)
#define VB_AD23_FRAG_LEN (240)

#define VB_DA01_FULL_WATERMARK (80)
#define VB_DA01_EMPTY_WATERMARK (240)
#define VB_DA23_FULL_WATERMARK (80)
#define VB_DA23_EMPTY_WATERMARK (80)
#define VB_AD01_FULL_WATERMARK (240)
#define VB_AD01_EMPTY_WATERMARK (240)
#define VB_AD23_FULL_WATERMARK (240)
#define VB_AD23_EMPTY_WATERMARK (240)

#define ARM_VB_BASE VBC_BASE
/* Controle Registers */
#define REG_VBC_VBC_MODULE_CLR  (VBC_BASE + 0x0000)
#define REG_VBC_VBC_DAC_DGMIXER_DG0 (VBC_BASE + 0x0004)
#define REG_VBC_VBC_DAC_DGMIXER_DG1 (VBC_BASE + 0x0008)
#define REG_VBC_VBC_IIS_CTL0    (VBC_BASE + 0x0014)
#define REG_VBC_VBC_ENABLE_CTRL (VBC_BASE + 0x0018)
#define REG_VBC_VBC_DEBUG_STS   (VBC_BASE + 0x001C)
#define REG_VBC_VBC_INT_CTRL    (VBC_BASE + 0x0034)
#define REG_VBC_VBC_DAT_FORMAT_CTRL (VBC_BASE + 0x0038)
#define REG_VBC_VBC_IIS_CTL1    (VBC_BASE + 0x003C)

#define REG_VBC_VBC_DAC_PATH_CTRL (VBC_BASE + 0x0040)
#define REG_VBC_VBC_DAC_DG_CTRL (VBC_BASE + 0x0044)

#define REG_VBC_VBC_DAC_HP_CTRL (VBC_BASE + 0x0048)
#define REG_VBC_VBC_DAC_ALC_CTRL0 (VBC_BASE + 0x004C)
#define REG_VBC_VBC_DAC_ALC_CTRL1 (VBC_BASE + 0x0050)
#define REG_VBC_VBC_DAC_ALC_CTRL2 (VBC_BASE + 0x0054)
#define REG_VBC_VBC_DAC_ALC_CTRL3 (VBC_BASE + 0x0058)
#define REG_VBC_VBC_DAC_ALC_CTRL4 (VBC_BASE + 0x005C)
#define REG_VBC_VBC_DAC_ALC_CTRL5 (VBC_BASE + 0x0060)
#define REG_VBC_VBC_DAC_ALC_CTRL6 (VBC_BASE + 0x0064)
#define REG_VBC_VBC_DAC_ALC_CTRL7 (VBC_BASE + 0x0068)
#define REG_VBC_VBC_DAC_ALC_CTRL8 (VBC_BASE + 0x006C)
#define REG_VBC_VBC_DAC_ALC_CTRL9 (VBC_BASE + 0x0070)
#define REG_VBC_VBC_DAC_ALC_CTRL10 (VBC_BASE + 0x0074)
#define REG_VBC_VBC_DAC_ST_CTL0 (VBC_BASE + 0x0078)
#define REG_VBC_VBC_DAC_ST_CTL1 (VBC_BASE + 0x007C)
#define REG_VBC_VBC_ADC_PATH_CTRL (VBC_BASE + 0x0080)
#define REG_VBC_VBC_ADC01_DG_CTRL (VBC_BASE + 0x0084)
#define REG_VBC_VBC_ADC23_DG_CTRL (VBC_BASE + 0x0088)
#define REG_VBC_VBC_ADC_EQ_CTRL (VBC_BASE + 0x008C)
#define REG_VBC_VBC_ADC_SRC_CTRL (VBC_BASE + 0x0090)
#define REG_VBC_VBC_DAC_SRC_CTRL (VBC_BASE + 0x0094)
#define REG_VBC_VBC_MIXER_CTRL  (VBC_BASE + 0x0098)
#define REG_VBC_VBC_ST_FIFO_CTRL (VBC_BASE + 0x009C)
#define REG_VBC_VBC_INT_EN      (VBC_BASE + 0x00A0)
#define REG_VBC_VBC_INT_CLR     (VBC_BASE + 0x00A4)
#define REG_VBC_VBC_INT_RAW_STS (VBC_BASE + 0x00A8)
#define REG_VBC_VBC_INT_STS     (VBC_BASE + 0x00AC)
#define REG_VBC_VBC_DAC_NGC_VTHD (VBC_BASE + 0x00B0)
#define REG_VBC_VBC_DAC_NGC_TTHD (VBC_BASE + 0x00B4)
#define REG_VBC_VBC_DAC_NGC_CTRL (VBC_BASE + 0x00B8)
#define REG_VBC_VBC_DAC0_FIFO_STS (VBC_BASE + 0x00BC)
#define REG_VBC_VBC_DAC1_FIFO_STS (VBC_BASE + 0x00C0)
#define REG_VBC_VBC_INNER_FIFO_STS (VBC_BASE + 0x00C4)
#define REG_VBC_VBC_CHN_EN      (VBC_BASE + 0x00C8)
#define REG_VBC_VBC_DAC2_FIFO_STS (VBC_BASE + 0x00CC)
#define REG_VBC_VBC_DAC3_FIFO_STS (VBC_BASE + 0x00D0)
#define REG_VBC_VBC_ADC0_FIFO_STS (VBC_BASE + 0x00D4)
#define REG_VBC_VBC_ADC1_FIFO_STS (VBC_BASE + 0x00D8)
#define REG_VBC_VBC_ADC2_FIFO_STS (VBC_BASE + 0x00DC)
#define REG_VBC_VBC_ADC3_FIFO_STS (VBC_BASE + 0x00E0)
#define REG_VBC_VBC_DAC01_FIFO_LVL (VBC_BASE + 0x00E4)
#define REG_VBC_VBC_DAC23_FIFO_LVL (VBC_BASE + 0x00E8)
#define REG_VBC_VBC_ADC01_FIFO_LVL (VBC_BASE + 0x00EC)
#define REG_VBC_VBC_ADC23_FIFO_LVL (VBC_BASE + 0x00F0)
#define REG_VBC_VBC_IIS_STS     (VBC_BASE + 0x00F4)
#define REG_VBC_VBC_FM_MUTE_CTL (VBC_BASE + 0x00F8)
#define REG_VBC_VBC_VERSION     (VBC_BASE + 0x00FC)
/* dac eq6 */
#define REG_VBC_VBC_DAC_EQ6_COEF0_H (VBC_BASE + 0x0100)
#define REG_VBC_VBC_DAC_EQ6_COEF0_L (VBC_BASE + 0x0104)
#define REG_VBC_VBC_DAC_EQ6_COEF1_H (VBC_BASE + 0x0108)
#define REG_VBC_VBC_DAC_EQ6_COEF1_L (VBC_BASE + 0x010C)
#define REG_VBC_VBC_DAC_EQ6_COEF2_H (VBC_BASE + 0x0110)
#define REG_VBC_VBC_DAC_EQ6_COEF2_L (VBC_BASE + 0x0114)
#define REG_VBC_VBC_DAC_EQ6_COEF3_H (VBC_BASE + 0x0118)
#define REG_VBC_VBC_DAC_EQ6_COEF3_L (VBC_BASE + 0x011C)
#define REG_VBC_VBC_DAC_EQ6_COEF4_H (VBC_BASE + 0x0120)
#define REG_VBC_VBC_DAC_EQ6_COEF4_L (VBC_BASE + 0x0124)
#define REG_VBC_VBC_DAC_EQ6_COEF5_H (VBC_BASE + 0x0128)
#define REG_VBC_VBC_DAC_EQ6_COEF5_L (VBC_BASE + 0x012C)
#define REG_VBC_VBC_DAC_EQ6_COEF6_H (VBC_BASE + 0x0130)
#define REG_VBC_VBC_DAC_EQ6_COEF6_L (VBC_BASE + 0x0134)
#define REG_VBC_VBC_DAC_EQ6_COEF7_H (VBC_BASE + 0x0138)
#define REG_VBC_VBC_DAC_EQ6_COEF7_L (VBC_BASE + 0x013C)
#define REG_VBC_VBC_DAC_EQ6_COEF8_H (VBC_BASE + 0x0140)
#define REG_VBC_VBC_DAC_EQ6_COEF8_L (VBC_BASE + 0x0144)
#define REG_VBC_VBC_DAC_EQ6_COEF9_H (VBC_BASE + 0x0148)
#define REG_VBC_VBC_DAC_EQ6_COEF9_L (VBC_BASE + 0x014C)
#define REG_VBC_VBC_DAC_EQ6_COEF10_H (VBC_BASE + 0x0150)
#define REG_VBC_VBC_DAC_EQ6_COEF10_L (VBC_BASE + 0x0154)
#define REG_VBC_VBC_DAC_EQ6_COEF11_H (VBC_BASE + 0x0158)
#define REG_VBC_VBC_DAC_EQ6_COEF11_L (VBC_BASE + 0x015C)
#define REG_VBC_VBC_DAC_EQ6_COEF12_H (VBC_BASE + 0x0160)
#define REG_VBC_VBC_DAC_EQ6_COEF12_L (VBC_BASE + 0x0164)
#define REG_VBC_VBC_DAC_EQ6_COEF13_H (VBC_BASE + 0x0168)
#define REG_VBC_VBC_DAC_EQ6_COEF13_L (VBC_BASE + 0x016C)
#define REG_VBC_VBC_DAC_EQ6_COEF14_H (VBC_BASE + 0x0170)
#define REG_VBC_VBC_DAC_EQ6_COEF14_L (VBC_BASE + 0x0174)
#define REG_VBC_VBC_DAC_EQ6_COEF15_H (VBC_BASE + 0x0178)
#define REG_VBC_VBC_DAC_EQ6_COEF15_L (VBC_BASE + 0x017C)
#define REG_VBC_VBC_DAC_EQ6_COEF16_H (VBC_BASE + 0x0180)
#define REG_VBC_VBC_DAC_EQ6_COEF16_L (VBC_BASE + 0x0184)
#define REG_VBC_VBC_DAC_EQ6_COEF17_H (VBC_BASE + 0x0188)
#define REG_VBC_VBC_DAC_EQ6_COEF17_L (VBC_BASE + 0x018C)
#define REG_VBC_VBC_DAC_EQ6_COEF18_H (VBC_BASE + 0x0190)
#define REG_VBC_VBC_DAC_EQ6_COEF18_L (VBC_BASE + 0x0194)
#define REG_VBC_VBC_DAC_EQ6_COEF19_H (VBC_BASE + 0x0198)
#define REG_VBC_VBC_DAC_EQ6_COEF19_L (VBC_BASE + 0x019C)
#define REG_VBC_VBC_DAC_EQ6_COEF20_H (VBC_BASE + 0x01A0)
#define REG_VBC_VBC_DAC_EQ6_COEF20_L (VBC_BASE + 0x01A4)
#define REG_VBC_VBC_DAC_EQ6_COEF21_H (VBC_BASE + 0x01A8)
#define REG_VBC_VBC_DAC_EQ6_COEF21_L (VBC_BASE + 0x01AC)
#define REG_VBC_VBC_DAC_EQ6_COEF22_H (VBC_BASE + 0x01B0)
#define REG_VBC_VBC_DAC_EQ6_COEF22_L (VBC_BASE + 0x01B4)
#define REG_VBC_VBC_DAC_EQ6_COEF23_H (VBC_BASE + 0x01B8)
#define REG_VBC_VBC_DAC_EQ6_COEF23_L (VBC_BASE + 0x01BC)
#define REG_VBC_VBC_DAC_EQ6_COEF24_H (VBC_BASE + 0x01C0)
#define REG_VBC_VBC_DAC_EQ6_COEF24_L (VBC_BASE + 0x01C4)
#define REG_VBC_VBC_DAC_EQ6_COEF25_H (VBC_BASE + 0x01C8)
#define REG_VBC_VBC_DAC_EQ6_COEF25_L (VBC_BASE + 0x01CC)
#define REG_VBC_VBC_DAC_EQ6_COEF26_H (VBC_BASE + 0x01D0)
#define REG_VBC_VBC_DAC_EQ6_COEF26_L (VBC_BASE + 0x01D4)
#define REG_VBC_VBC_DAC_EQ6_COEF27_H (VBC_BASE + 0x01D8)
#define REG_VBC_VBC_DAC_EQ6_COEF27_L (VBC_BASE + 0x01DC)
#define REG_VBC_VBC_DAC_EQ6_COEF28_H (VBC_BASE + 0x01E0)
#define REG_VBC_VBC_DAC_EQ6_COEF28_L (VBC_BASE + 0x01E4)
#define REG_VBC_VBC_DAC_EQ6_COEF29_H (VBC_BASE + 0x01E8)
#define REG_VBC_VBC_DAC_EQ6_COEF29_L (VBC_BASE + 0x01EC)
#define REG_VBC_VBC_DAC_EQ6_COEF30_H (VBC_BASE + 0x01F0)
#define REG_VBC_VBC_DAC_EQ6_COEF30_L (VBC_BASE + 0x01F4)
#define REG_VBC_VBC_DAC_EQ6_COEF31_H (VBC_BASE + 0x01F8)
#define REG_VBC_VBC_DAC_EQ6_COEF31_L (VBC_BASE + 0x01FC)
#define REG_VBC_VBC_DAC_EQ6_COEF32_H (VBC_BASE + 0x0200)
#define REG_VBC_VBC_DAC_EQ6_COEF32_L (VBC_BASE + 0x0204)
#define REG_VBC_VBC_DAC_EQ6_COEF33_H (VBC_BASE + 0x0208)
#define REG_VBC_VBC_DAC_EQ6_COEF33_L (VBC_BASE + 0x020C)
#define REG_VBC_VBC_DAC_EQ6_COEF34_H (VBC_BASE + 0x0210)
#define REG_VBC_VBC_DAC_EQ6_COEF34_L (VBC_BASE + 0x0214)
#define REG_VBC_VBC_DAC_EQ6_COEF35_H (VBC_BASE + 0x0218)
#define REG_VBC_VBC_DAC_EQ6_COEF35_L (VBC_BASE + 0x021C)
#define REG_VBC_VBC_DAC_EQ6_COEF36_H (VBC_BASE + 0x0220)
#define REG_VBC_VBC_DAC_EQ6_COEF36_L (VBC_BASE + 0x0224)
#define REG_VBC_VBC_DAC_EQ6_COEF37_H (VBC_BASE + 0x0228)
#define REG_VBC_VBC_DAC_EQ6_COEF37_L (VBC_BASE + 0x022C)
#define REG_VBC_VBC_DAC_EQ6_COEF38_H (VBC_BASE + 0x0230)
#define REG_VBC_VBC_DAC_EQ6_COEF38_L (VBC_BASE + 0x0234)
#define REG_VBC_VBC_DAC_EQ6_COEF39_H (VBC_BASE + 0x0238)
#define REG_VBC_VBC_DAC_EQ6_COEF39_L (VBC_BASE + 0x023C)
#define REG_VBC_VBC_DAC_EQ6_COEF40_H (VBC_BASE + 0x0240)
#define REG_VBC_VBC_DAC_EQ6_COEF40_L (VBC_BASE + 0x0244)
#define REG_VBC_VBC_DAC_EQ6_COEF41_H (VBC_BASE + 0x0248)
#define REG_VBC_VBC_DAC_EQ6_COEF41_L (VBC_BASE + 0x024C)
#define REG_VBC_VBC_DAC_EQ6_COEF42_H (VBC_BASE + 0x0250)
#define REG_VBC_VBC_DAC_EQ6_COEF42_L (VBC_BASE + 0x0254)
/* dac eq4 */
#define REG_VBC_VBC_DAC_EQ4_COEF0_H (VBC_BASE + 0x0258)
#define REG_VBC_VBC_DAC_EQ4_COEF0_L (VBC_BASE + 0x025C)
#define REG_VBC_VBC_DAC_EQ4_COEF1_H (VBC_BASE + 0x0260)
#define REG_VBC_VBC_DAC_EQ4_COEF1_L (VBC_BASE + 0x0264)
#define REG_VBC_VBC_DAC_EQ4_COEF2_H (VBC_BASE + 0x0268)
#define REG_VBC_VBC_DAC_EQ4_COEF2_L (VBC_BASE + 0x026C)
#define REG_VBC_VBC_DAC_EQ4_COEF3_H (VBC_BASE + 0x0270)
#define REG_VBC_VBC_DAC_EQ4_COEF3_L (VBC_BASE + 0x0274)
#define REG_VBC_VBC_DAC_EQ4_COEF4_H (VBC_BASE + 0x0278)
#define REG_VBC_VBC_DAC_EQ4_COEF4_L (VBC_BASE + 0x027C)
#define REG_VBC_VBC_DAC_EQ4_COEF5_H (VBC_BASE + 0x0280)
#define REG_VBC_VBC_DAC_EQ4_COEF5_L (VBC_BASE + 0x0284)
#define REG_VBC_VBC_DAC_EQ4_COEF6_H (VBC_BASE + 0x0288)
#define REG_VBC_VBC_DAC_EQ4_COEF6_L (VBC_BASE + 0x028C)
#define REG_VBC_VBC_DAC_EQ4_COEF7_H (VBC_BASE + 0x0290)
#define REG_VBC_VBC_DAC_EQ4_COEF7_L (VBC_BASE + 0x0294)
#define REG_VBC_VBC_DAC_EQ4_COEF8_H (VBC_BASE + 0x0298)
#define REG_VBC_VBC_DAC_EQ4_COEF8_L (VBC_BASE + 0x029C)
#define REG_VBC_VBC_DAC_EQ4_COEF9_H (VBC_BASE + 0x02A0)
#define REG_VBC_VBC_DAC_EQ4_COEF9_L (VBC_BASE + 0x02A4)
#define REG_VBC_VBC_DAC_EQ4_COEF10_H (VBC_BASE + 0x02A8)
#define REG_VBC_VBC_DAC_EQ4_COEF10_L (VBC_BASE + 0x02AC)
#define REG_VBC_VBC_DAC_EQ4_COEF11_H (VBC_BASE + 0x02B0)
#define REG_VBC_VBC_DAC_EQ4_COEF11_L (VBC_BASE + 0x02B4)
#define REG_VBC_VBC_DAC_EQ4_COEF12_H (VBC_BASE + 0x02B8)
#define REG_VBC_VBC_DAC_EQ4_COEF12_L (VBC_BASE + 0x02BC)
#define REG_VBC_VBC_DAC_EQ4_COEF13_H (VBC_BASE + 0x02C0)
#define REG_VBC_VBC_DAC_EQ4_COEF13_L (VBC_BASE + 0x02C4)
#define REG_VBC_VBC_DAC_EQ4_COEF14_H (VBC_BASE + 0x02C8)
#define REG_VBC_VBC_DAC_EQ4_COEF14_L (VBC_BASE + 0x02CC)
#define REG_VBC_VBC_DAC_EQ4_COEF15_H (VBC_BASE + 0x02D0)
#define REG_VBC_VBC_DAC_EQ4_COEF15_L (VBC_BASE + 0x02D4)
#define REG_VBC_VBC_DAC_EQ4_COEF16_H (VBC_BASE + 0x02D8)
#define REG_VBC_VBC_DAC_EQ4_COEF16_L (VBC_BASE + 0x02DC)
#define REG_VBC_VBC_DAC_EQ4_COEF17_H (VBC_BASE + 0x02E0)
#define REG_VBC_VBC_DAC_EQ4_COEF17_L (VBC_BASE + 0x02E4)
#define REG_VBC_VBC_DAC_EQ4_COEF18_H (VBC_BASE + 0x02E8)
#define REG_VBC_VBC_DAC_EQ4_COEF18_L (VBC_BASE + 0x02EC)
#define REG_VBC_VBC_DAC_EQ4_COEF19_H (VBC_BASE + 0x02F0)
#define REG_VBC_VBC_DAC_EQ4_COEF19_L (VBC_BASE + 0x02F4)
#define REG_VBC_VBC_DAC_EQ4_COEF20_H (VBC_BASE + 0x02F8)
#define REG_VBC_VBC_DAC_EQ4_COEF20_L (VBC_BASE + 0x02FC)
#define REG_VBC_VBC_DAC_EQ4_COEF21_H (VBC_BASE + 0x0300)
#define REG_VBC_VBC_DAC_EQ4_COEF21_L (VBC_BASE + 0x0304)
#define REG_VBC_VBC_DAC_EQ4_COEF22_H (VBC_BASE + 0x0308)
#define REG_VBC_VBC_DAC_EQ4_COEF22_L (VBC_BASE + 0x030C)
#define REG_VBC_VBC_DAC_EQ4_COEF23_H (VBC_BASE + 0x0310)
#define REG_VBC_VBC_DAC_EQ4_COEF23_L (VBC_BASE + 0x0314)
#define REG_VBC_VBC_DAC_EQ4_COEF24_H (VBC_BASE + 0x0318)
#define REG_VBC_VBC_DAC_EQ4_COEF24_L (VBC_BASE + 0x031C)
#define REG_VBC_VBC_DAC_EQ4_COEF25_H (VBC_BASE + 0x0320)
#define REG_VBC_VBC_DAC_EQ4_COEF25_L (VBC_BASE + 0x0324)
#define REG_VBC_VBC_DAC_EQ4_COEF26_H (VBC_BASE + 0x0328)
#define REG_VBC_VBC_DAC_EQ4_COEF26_L (VBC_BASE + 0x032C)
#define REG_VBC_VBC_DAC_EQ4_COEF27_H (VBC_BASE + 0x0330)
#define REG_VBC_VBC_DAC_EQ4_COEF27_L (VBC_BASE + 0x0334)
#define REG_VBC_VBC_DAC_EQ4_COEF28_H (VBC_BASE + 0x0338)
#define REG_VBC_VBC_DAC_EQ4_COEF28_L (VBC_BASE + 0x033C)
/* adc01 eq6 */
#define REG_VBC_VBC_ADC01_EQ6_COEF0_H (VBC_BASE + 0x0400)
#define REG_VBC_VBC_ADC01_EQ6_COEF0_L (VBC_BASE + 0x0404)
#define REG_VBC_VBC_ADC01_EQ6_COEF1_H (VBC_BASE + 0x0408)
#define REG_VBC_VBC_ADC01_EQ6_COEF1_L (VBC_BASE + 0x040C)
#define REG_VBC_VBC_ADC01_EQ6_COEF2_H (VBC_BASE + 0x0410)
#define REG_VBC_VBC_ADC01_EQ6_COEF2_L (VBC_BASE + 0x0414)
#define REG_VBC_VBC_ADC01_EQ6_COEF3_H (VBC_BASE + 0x0418)
#define REG_VBC_VBC_ADC01_EQ6_COEF3_L (VBC_BASE + 0x041C)
#define REG_VBC_VBC_ADC01_EQ6_COEF4_H (VBC_BASE + 0x0420)
#define REG_VBC_VBC_ADC01_EQ6_COEF4_L (VBC_BASE + 0x0424)
#define REG_VBC_VBC_ADC01_EQ6_COEF5_H (VBC_BASE + 0x0428)
#define REG_VBC_VBC_ADC01_EQ6_COEF5_L (VBC_BASE + 0x042C)
#define REG_VBC_VBC_ADC01_EQ6_COEF6_H (VBC_BASE + 0x0430)
#define REG_VBC_VBC_ADC01_EQ6_COEF6_L (VBC_BASE + 0x0434)
#define REG_VBC_VBC_ADC01_EQ6_COEF7_H (VBC_BASE + 0x0438)
#define REG_VBC_VBC_ADC01_EQ6_COEF7_L (VBC_BASE + 0x043C)
#define REG_VBC_VBC_ADC01_EQ6_COEF8_H (VBC_BASE + 0x0440)
#define REG_VBC_VBC_ADC01_EQ6_COEF8_L (VBC_BASE + 0x0444)
#define REG_VBC_VBC_ADC01_EQ6_COEF9_H (VBC_BASE + 0x0448)
#define REG_VBC_VBC_ADC01_EQ6_COEF9_L (VBC_BASE + 0x044C)
#define REG_VBC_VBC_ADC01_EQ6_COEF10_H (VBC_BASE + 0x0450)
#define REG_VBC_VBC_ADC01_EQ6_COEF10_L (VBC_BASE + 0x0454)
#define REG_VBC_VBC_ADC01_EQ6_COEF11_H (VBC_BASE + 0x0458)
#define REG_VBC_VBC_ADC01_EQ6_COEF11_L (VBC_BASE + 0x045C)
#define REG_VBC_VBC_ADC01_EQ6_COEF12_H (VBC_BASE + 0x0460)
#define REG_VBC_VBC_ADC01_EQ6_COEF12_L (VBC_BASE + 0x0464)
#define REG_VBC_VBC_ADC01_EQ6_COEF13_H (VBC_BASE + 0x0468)
#define REG_VBC_VBC_ADC01_EQ6_COEF13_L (VBC_BASE + 0x046C)
#define REG_VBC_VBC_ADC01_EQ6_COEF14_H (VBC_BASE + 0x0470)
#define REG_VBC_VBC_ADC01_EQ6_COEF14_L (VBC_BASE + 0x0474)
#define REG_VBC_VBC_ADC01_EQ6_COEF15_H (VBC_BASE + 0x0478)
#define REG_VBC_VBC_ADC01_EQ6_COEF15_L (VBC_BASE + 0x047C)
#define REG_VBC_VBC_ADC01_EQ6_COEF16_H (VBC_BASE + 0x0480)
#define REG_VBC_VBC_ADC01_EQ6_COEF16_L (VBC_BASE + 0x0484)
#define REG_VBC_VBC_ADC01_EQ6_COEF17_H (VBC_BASE + 0x0488)
#define REG_VBC_VBC_ADC01_EQ6_COEF17_L (VBC_BASE + 0x048C)
#define REG_VBC_VBC_ADC01_EQ6_COEF18_H (VBC_BASE + 0x0490)
#define REG_VBC_VBC_ADC01_EQ6_COEF18_L (VBC_BASE + 0x0494)
#define REG_VBC_VBC_ADC01_EQ6_COEF19_H (VBC_BASE + 0x0498)
#define REG_VBC_VBC_ADC01_EQ6_COEF19_L (VBC_BASE + 0x049C)
#define REG_VBC_VBC_ADC01_EQ6_COEF20_H (VBC_BASE + 0x04A0)
#define REG_VBC_VBC_ADC01_EQ6_COEF20_L (VBC_BASE + 0x04A4)
#define REG_VBC_VBC_ADC01_EQ6_COEF21_H (VBC_BASE + 0x04A8)
#define REG_VBC_VBC_ADC01_EQ6_COEF21_L (VBC_BASE + 0x04AC)
#define REG_VBC_VBC_ADC01_EQ6_COEF22_H (VBC_BASE + 0x04B0)
#define REG_VBC_VBC_ADC01_EQ6_COEF22_L (VBC_BASE + 0x04B4)
#define REG_VBC_VBC_ADC01_EQ6_COEF23_H (VBC_BASE + 0x04B8)
#define REG_VBC_VBC_ADC01_EQ6_COEF23_L (VBC_BASE + 0x04BC)
#define REG_VBC_VBC_ADC01_EQ6_COEF24_H (VBC_BASE + 0x04C0)
#define REG_VBC_VBC_ADC01_EQ6_COEF24_L (VBC_BASE + 0x04C4)
#define REG_VBC_VBC_ADC01_EQ6_COEF25_H (VBC_BASE + 0x04C8)
#define REG_VBC_VBC_ADC01_EQ6_COEF25_L (VBC_BASE + 0x04CC)
#define REG_VBC_VBC_ADC01_EQ6_COEF26_H (VBC_BASE + 0x04D0)
#define REG_VBC_VBC_ADC01_EQ6_COEF26_L (VBC_BASE + 0x04D4)
#define REG_VBC_VBC_ADC01_EQ6_COEF27_H (VBC_BASE + 0x04D8)
#define REG_VBC_VBC_ADC01_EQ6_COEF27_L (VBC_BASE + 0x04DC)
#define REG_VBC_VBC_ADC01_EQ6_COEF28_H (VBC_BASE + 0x04E0)
#define REG_VBC_VBC_ADC01_EQ6_COEF28_L (VBC_BASE + 0x04E4)
#define REG_VBC_VBC_ADC01_EQ6_COEF29_H (VBC_BASE + 0x04E8)
#define REG_VBC_VBC_ADC01_EQ6_COEF29_L (VBC_BASE + 0x04EC)
#define REG_VBC_VBC_ADC01_EQ6_COEF30_H (VBC_BASE + 0x04F0)
#define REG_VBC_VBC_ADC01_EQ6_COEF30_L (VBC_BASE + 0x04F4)
#define REG_VBC_VBC_ADC01_EQ6_COEF31_H (VBC_BASE + 0x04F8)
#define REG_VBC_VBC_ADC01_EQ6_COEF31_L (VBC_BASE + 0x04FC)
#define REG_VBC_VBC_ADC01_EQ6_COEF32_H (VBC_BASE + 0x0500)
#define REG_VBC_VBC_ADC01_EQ6_COEF32_L (VBC_BASE + 0x0504)
#define REG_VBC_VBC_ADC01_EQ6_COEF33_H (VBC_BASE + 0x0508)
#define REG_VBC_VBC_ADC01_EQ6_COEF33_L (VBC_BASE + 0x050C)
#define REG_VBC_VBC_ADC01_EQ6_COEF34_H (VBC_BASE + 0x0510)
#define REG_VBC_VBC_ADC01_EQ6_COEF34_L (VBC_BASE + 0x0514)
#define REG_VBC_VBC_ADC01_EQ6_COEF35_H (VBC_BASE + 0x0518)
#define REG_VBC_VBC_ADC01_EQ6_COEF35_L (VBC_BASE + 0x051C)
#define REG_VBC_VBC_ADC01_EQ6_COEF36_H (VBC_BASE + 0x0520)
#define REG_VBC_VBC_ADC01_EQ6_COEF36_L (VBC_BASE + 0x0524)
#define REG_VBC_VBC_ADC01_EQ6_COEF37_H (VBC_BASE + 0x0528)
#define REG_VBC_VBC_ADC01_EQ6_COEF37_L (VBC_BASE + 0x052C)
#define REG_VBC_VBC_ADC01_EQ6_COEF38_H (VBC_BASE + 0x0530)
#define REG_VBC_VBC_ADC01_EQ6_COEF38_L (VBC_BASE + 0x0534)
#define REG_VBC_VBC_ADC01_EQ6_COEF39_H (VBC_BASE + 0x0538)
#define REG_VBC_VBC_ADC01_EQ6_COEF39_L (VBC_BASE + 0x053C)
#define REG_VBC_VBC_ADC01_EQ6_COEF40_H (VBC_BASE + 0x0540)
#define REG_VBC_VBC_ADC01_EQ6_COEF40_L (VBC_BASE + 0x0544)
#define REG_VBC_VBC_ADC01_EQ6_COEF41_H (VBC_BASE + 0x0548)
#define REG_VBC_VBC_ADC01_EQ6_COEF41_L (VBC_BASE + 0x054C)
#define REG_VBC_VBC_ADC01_EQ6_COEF42_H (VBC_BASE + 0x0550)
#define REG_VBC_VBC_ADC01_EQ6_COEF42_L (VBC_BASE + 0x0554)
/* adc23 eq6 */
#define REG_VBC_VBC_ADC23_EQ6_COEF0_H (VBC_BASE + 0x0600)
#define REG_VBC_VBC_ADC23_EQ6_COEF0_L (VBC_BASE + 0x0604)
#define REG_VBC_VBC_ADC23_EQ6_COEF1_H (VBC_BASE + 0x0608)
#define REG_VBC_VBC_ADC23_EQ6_COEF1_L (VBC_BASE + 0x060C)
#define REG_VBC_VBC_ADC23_EQ6_COEF2_H (VBC_BASE + 0x0610)
#define REG_VBC_VBC_ADC23_EQ6_COEF2_L (VBC_BASE + 0x0614)
#define REG_VBC_VBC_ADC23_EQ6_COEF3_H (VBC_BASE + 0x0618)
#define REG_VBC_VBC_ADC23_EQ6_COEF3_L (VBC_BASE + 0x061C)
#define REG_VBC_VBC_ADC23_EQ6_COEF4_H (VBC_BASE + 0x0620)
#define REG_VBC_VBC_ADC23_EQ6_COEF4_L (VBC_BASE + 0x0624)
#define REG_VBC_VBC_ADC23_EQ6_COEF5_H (VBC_BASE + 0x0628)
#define REG_VBC_VBC_ADC23_EQ6_COEF5_L (VBC_BASE + 0x062C)
#define REG_VBC_VBC_ADC23_EQ6_COEF6_H (VBC_BASE + 0x0630)
#define REG_VBC_VBC_ADC23_EQ6_COEF6_L (VBC_BASE + 0x0634)
#define REG_VBC_VBC_ADC23_EQ6_COEF7_H (VBC_BASE + 0x0638)
#define REG_VBC_VBC_ADC23_EQ6_COEF7_L (VBC_BASE + 0x063C)
#define REG_VBC_VBC_ADC23_EQ6_COEF8_H (VBC_BASE + 0x0640)
#define REG_VBC_VBC_ADC23_EQ6_COEF8_L (VBC_BASE + 0x0644)
#define REG_VBC_VBC_ADC23_EQ6_COEF9_H (VBC_BASE + 0x0648)
#define REG_VBC_VBC_ADC23_EQ6_COEF9_L (VBC_BASE + 0x064C)
#define REG_VBC_VBC_ADC23_EQ6_COEF10_H (VBC_BASE + 0x0650)
#define REG_VBC_VBC_ADC23_EQ6_COEF10_L (VBC_BASE + 0x0654)
#define REG_VBC_VBC_ADC23_EQ6_COEF11_H (VBC_BASE + 0x0658)
#define REG_VBC_VBC_ADC23_EQ6_COEF11_L (VBC_BASE + 0x065C)
#define REG_VBC_VBC_ADC23_EQ6_COEF12_H (VBC_BASE + 0x0660)
#define REG_VBC_VBC_ADC23_EQ6_COEF12_L (VBC_BASE + 0x0664)
#define REG_VBC_VBC_ADC23_EQ6_COEF13_H (VBC_BASE + 0x0668)
#define REG_VBC_VBC_ADC23_EQ6_COEF13_L (VBC_BASE + 0x066C)
#define REG_VBC_VBC_ADC23_EQ6_COEF14_H (VBC_BASE + 0x0670)
#define REG_VBC_VBC_ADC23_EQ6_COEF14_L (VBC_BASE + 0x0674)
#define REG_VBC_VBC_ADC23_EQ6_COEF15_H (VBC_BASE + 0x0678)
#define REG_VBC_VBC_ADC23_EQ6_COEF15_L (VBC_BASE + 0x067C)
#define REG_VBC_VBC_ADC23_EQ6_COEF16_H (VBC_BASE + 0x0680)
#define REG_VBC_VBC_ADC23_EQ6_COEF16_L (VBC_BASE + 0x0684)
#define REG_VBC_VBC_ADC23_EQ6_COEF17_H (VBC_BASE + 0x0688)
#define REG_VBC_VBC_ADC23_EQ6_COEF17_L (VBC_BASE + 0x068C)
#define REG_VBC_VBC_ADC23_EQ6_COEF18_H (VBC_BASE + 0x0690)
#define REG_VBC_VBC_ADC23_EQ6_COEF18_L (VBC_BASE + 0x0694)
#define REG_VBC_VBC_ADC23_EQ6_COEF19_H (VBC_BASE + 0x0698)
#define REG_VBC_VBC_ADC23_EQ6_COEF19_L (VBC_BASE + 0x069C)
#define REG_VBC_VBC_ADC23_EQ6_COEF20_H (VBC_BASE + 0x06A0)
#define REG_VBC_VBC_ADC23_EQ6_COEF20_L (VBC_BASE + 0x06A4)
#define REG_VBC_VBC_ADC23_EQ6_COEF21_H (VBC_BASE + 0x06A8)
#define REG_VBC_VBC_ADC23_EQ6_COEF21_L (VBC_BASE + 0x06AC)
#define REG_VBC_VBC_ADC23_EQ6_COEF22_H (VBC_BASE + 0x06B0)
#define REG_VBC_VBC_ADC23_EQ6_COEF22_L (VBC_BASE + 0x06B4)
#define REG_VBC_VBC_ADC23_EQ6_COEF23_H (VBC_BASE + 0x06B8)
#define REG_VBC_VBC_ADC23_EQ6_COEF23_L (VBC_BASE + 0x06BC)
#define REG_VBC_VBC_ADC23_EQ6_COEF24_H (VBC_BASE + 0x06C0)
#define REG_VBC_VBC_ADC23_EQ6_COEF24_L (VBC_BASE + 0x06C4)
#define REG_VBC_VBC_ADC23_EQ6_COEF25_H (VBC_BASE + 0x06C8)
#define REG_VBC_VBC_ADC23_EQ6_COEF25_L (VBC_BASE + 0x06CC)
#define REG_VBC_VBC_ADC23_EQ6_COEF26_H (VBC_BASE + 0x06D0)
#define REG_VBC_VBC_ADC23_EQ6_COEF26_L (VBC_BASE + 0x06D4)
#define REG_VBC_VBC_ADC23_EQ6_COEF27_H (VBC_BASE + 0x06D8)
#define REG_VBC_VBC_ADC23_EQ6_COEF27_L (VBC_BASE + 0x06DC)
#define REG_VBC_VBC_ADC23_EQ6_COEF28_H (VBC_BASE + 0x06E0)
#define REG_VBC_VBC_ADC23_EQ6_COEF28_L (VBC_BASE + 0x06E4)
#define REG_VBC_VBC_ADC23_EQ6_COEF29_H (VBC_BASE + 0x06E8)
#define REG_VBC_VBC_ADC23_EQ6_COEF29_L (VBC_BASE + 0x06EC)
#define REG_VBC_VBC_ADC23_EQ6_COEF30_H (VBC_BASE + 0x06F0)
#define REG_VBC_VBC_ADC23_EQ6_COEF30_L (VBC_BASE + 0x06F4)
#define REG_VBC_VBC_ADC23_EQ6_COEF31_H (VBC_BASE + 0x06F8)
#define REG_VBC_VBC_ADC23_EQ6_COEF31_L (VBC_BASE + 0x06FC)
#define REG_VBC_VBC_ADC23_EQ6_COEF32_H (VBC_BASE + 0x0700)
#define REG_VBC_VBC_ADC23_EQ6_COEF32_L (VBC_BASE + 0x0704)
#define REG_VBC_VBC_ADC23_EQ6_COEF33_H (VBC_BASE + 0x0708)
#define REG_VBC_VBC_ADC23_EQ6_COEF33_L (VBC_BASE + 0x070C)
#define REG_VBC_VBC_ADC23_EQ6_COEF34_H (VBC_BASE + 0x0710)
#define REG_VBC_VBC_ADC23_EQ6_COEF34_L (VBC_BASE + 0x0714)
#define REG_VBC_VBC_ADC23_EQ6_COEF35_H (VBC_BASE + 0x0718)
#define REG_VBC_VBC_ADC23_EQ6_COEF35_L (VBC_BASE + 0x071C)
#define REG_VBC_VBC_ADC23_EQ6_COEF36_H (VBC_BASE + 0x0720)
#define REG_VBC_VBC_ADC23_EQ6_COEF36_L (VBC_BASE + 0x0724)
#define REG_VBC_VBC_ADC23_EQ6_COEF37_H (VBC_BASE + 0x0728)
#define REG_VBC_VBC_ADC23_EQ6_COEF37_L (VBC_BASE + 0x072C)
#define REG_VBC_VBC_ADC23_EQ6_COEF38_H (VBC_BASE + 0x0730)
#define REG_VBC_VBC_ADC23_EQ6_COEF38_L (VBC_BASE + 0x0734)
#define REG_VBC_VBC_ADC23_EQ6_COEF39_H (VBC_BASE + 0x0738)
#define REG_VBC_VBC_ADC23_EQ6_COEF39_L (VBC_BASE + 0x073C)
#define REG_VBC_VBC_ADC23_EQ6_COEF40_H (VBC_BASE + 0x0740)
#define REG_VBC_VBC_ADC23_EQ6_COEF40_L (VBC_BASE + 0x0744)
#define REG_VBC_VBC_ADC23_EQ6_COEF41_H (VBC_BASE + 0x0748)
#define REG_VBC_VBC_ADC23_EQ6_COEF41_L (VBC_BASE + 0x074C)
#define REG_VBC_VBC_ADC23_EQ6_COEF42_H (VBC_BASE + 0x0750)
#define REG_VBC_VBC_ADC23_EQ6_COEF42_L (VBC_BASE + 0x0754)

#define REG_VBC_VBC_DAC_TONE_GEN_CTRL (VBC_BASE + 0x0900)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM0 (VBC_BASE + 0x0904)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM1 (VBC_BASE + 0x0908)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM2 (VBC_BASE + 0x090C)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM3 (VBC_BASE + 0x0910)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM4 (VBC_BASE + 0x0914)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM5 (VBC_BASE + 0x0918)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM6 (VBC_BASE + 0x091C)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM7 (VBC_BASE + 0x0920)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM8 (VBC_BASE + 0x0924)
#define REG_VBC_VBC_DAC_TONE_GEN_PARAM9 (VBC_BASE + 0x0928)
#define REG_VBC_VBC_DAC_TONE_GEN_EN (VBC_BASE + 0x092C)
#define ARM_VB_END                  (VBC_BASE + 0x0930)

/*fifo addr*/
#define REG_VBC_VBC_DAC0_FIFO_ADDR      (VBC_BASE + 0x1000)
#define REG_VBC_VBC_DAC1_FIFO_ADDR      (VBC_BASE + 0x1004)
#define REG_VBC_VBC_DAC2_FIFO_ADDR      (VBC_BASE + 0x1008)
#define REG_VBC_VBC_DAC3_FIFO_ADDR      (VBC_BASE + 0x100C)
#define REG_VBC_VBC_ADC0_FIFO_ADDR      (VBC_BASE + 0x1010)
#define REG_VBC_VBC_ADC1_FIFO_ADDR      (VBC_BASE + 0x1014)
#define REG_VBC_VBC_ADC2_FIFO_ADDR      (VBC_BASE + 0x1018)
#define REG_VBC_VBC_ADC3_FIFO_ADDR      (VBC_BASE + 0x101C)

/*NOTCH TONE PARA*/
#define REG_VBC_VBC_DAC_NCH_COEF0       (VBC_BASE + 0x1100)
#define REG_VBC_VBC_DAC_NCH_COEF35      (VBC_BASE + 0x118C)

/* bits definitions for register REG_VBC_VBC_MODULE_CLR */
#define BIT_RF_DAC_NCHTONE_CLR          (BIT(27))
#define BIT_RF_DAC_NCHFLT_CLR           (BIT(26))
#define BIT_RF_ADC23_DG_CLR             (BIT(25))
#define BIT_RF_ADC01_DG_CLR             (BIT(24))
#define BIT_RF_ADC23_EQ6_CLR            (BIT(23))
#define BIT_RF_ADC01_EQ6_CLR            (BIT(22))
#define BIT_RF_ADC23_IIS_FIFO_CLR       (BIT(21))
#define BIT_RF_ADC01_IIS_FIFO_CLR       (BIT(20))
#define BIT_RF_DAC_IIS_FIFO_CLR         (BIT(19))
#define BIT_RF_ADC23_IIS_CLR            (BIT(18))
#define BIT_RF_ADC01_IIS_CLR            (BIT(17))
#define BIT_RF_DAC_IIS_CLR              (BIT(16))
#define BIT_RF_ST_FIFO_CLR              (BIT(15))
#define BIT_RF_ST_CLR                   (BIT(14))
#define BIT_RF_DAC_NGC_CLR              (BIT(13))
#define BIT_RF_DAC_EQ4_CLR              (BIT(12))
#define BIT_RF_DAC_ALC_CLR              (BIT(11))
#define BIT_RF_DAC_EQ6_CLR              (BIT(10))
#define BIT_RF_DAC_DG_CLR               (BIT(9))
#define BIT_RF_DAC_DGMIXER_CLR          (BIT(8))
#define BIT_RF_ADC3_FIFO_CLR            (BIT(7))
#define BIT_RF_ADC2_FIFO_CLR            (BIT(6))
#define BIT_RF_ADC1_FIFO_CLR            (BIT(5))
#define BIT_RF_ADC0_FIFO_CLR            (BIT(4))
#define BIT_RF_DAC3_FIFO_CLR            (BIT(3))
#define BIT_RF_DAC2_FIFO_CLR            (BIT(2))
#define BIT_RF_DAC1_FIFO_CLR            (BIT(1))
#define BIT_RF_DAC0_FIFO_CLR            (BIT(0))

#define DAC1_DGMIXER_DG_SHIFT 16
/* bits definitions for register REG_VBC_VBC_DAC_DGMIXER_DG0 */
#define BITS_RF_DAC1_DGMIXER_DG(_X_)    ((_X_) << 16 &\
(BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|\
BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)))

#define DAC0_DGMIXER_DG_SHIFT 0
#define BITS_RF_DAC0_DGMIXER_DG(_X_)    ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|\
BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)))

/* bits definitions for register REG_VBC_VBC_DAC_DGMIXER_DG1 */
#define DAC3_DGMIXER_DG_SHIFT 16
#define BITS_RF_DAC3_DGMIXER_DG(_X_)    ((_X_) << 16 &\
(BIT(16)|BIT(17)|BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|\
BIT(23)|BIT(24)|BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)|BIT(31)))
#define DAC2_DGMIXER_DG_SHIFT 0
#define BITS_RF_DAC2_DGMIXER_DG(_X_)    ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|\
BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)))

/* bits definitions for register REG_VBC_VBC_IIS_CTL0 */
#define BIT_RF_IIS_TX_LP_RX             (BIT(13))
#define BIT_RF_IIS_ADC23_CLK_INV        (BIT(11))
#define BIT_RF_IIS_DAC_CLK_INV          (BIT(10))
#define BIT_RF_IIS_ADC01_CLK_INV        (BIT(9))

/* bits definitions for register REG_VBC_VBC_ENABLE_CTRL */
#define BIT_RF_ADC3_DMA_EN              (BIT(15))
#define BIT_RF_ADC2_DMA_EN              (BIT(14))
#define BIT_RF_ADC1_DMA_EN              (BIT(13))
#define BIT_RF_ADC0_DMA_EN              (BIT(12))
#define BIT_RF_DAC3_DMA_EN              (BIT(11))
#define BIT_RF_DAC2_DMA_EN              (BIT(10))
#define BIT_RF_DAC1_DMA_EN              (BIT(9))
#define BIT_RF_DAC0_DMA_EN              (BIT(8))
#define BIT_RF_ADC3_FIFO_EN             (BIT(7))
#define BIT_RF_ADC2_FIFO_EN             (BIT(6))
#define BIT_RF_ADC1_FIFO_EN             (BIT(5))
#define BIT_RF_ADC0_FIFO_EN             (BIT(4))
#define BIT_RF_DAC3_FIFO_EN             (BIT(3))
#define BIT_RF_DAC2_FIFO_EN             (BIT(2))
#define BIT_RF_DAC1_FIFO_EN             (BIT(1))
#define BIT_RF_DAC0_FIFO_EN             (BIT(0))
/* bits definitions for register REG_VBC_VBC_INT_CTRL */
#define BIT_RF_ADC_INT_TYPE             (BIT(5))
#define BIT_RF_DAC_INT_TYPE             (BIT(4))
#define BIT_RF_ADC23_INT_SEL            (BIT(3))
#define BIT_RF_ADC01_INT_SEL            (BIT(2))
#define BIT_RF_DAC23_INT_SEL            (BIT(1))
#define BIT_RF_DAC01_INT_SEL            (BIT(0))

/* bits definitions for register REG_VBC_VBC_DAT_FORMAT_CTRL */
#define BITS_RF_ADC23_DAT_FORMAT_CTL(_X_) ((_X_) << 6 &\
(BIT(6)|BIT(7)))
#define BITS_RF_ADC01_DAT_FORMAT_CTL(_X_) ((_X_) << 4 &\
(BIT(4)|BIT(5)))
#define BITS_RF_DAC23_DAT_FORMAT_CTL(_X_) ((_X_) << 2 &\
(BIT(2)|BIT(3)))
#define BITS_RF_DAC01_DAT_FORMAT_CTL(_X_) ((_X_) << 0 &\
(BIT(0)|BIT(1)))

/* bits definitions for register REG_VBC_VBC_IIS_CTL1 */
#define BIT_RF_IIS_ADC23_SW_EN          (BIT(23))
#define BIT_RF_IIS_ADC01_SW_EN          (BIT(22))
#define BIT_RF_IIS_DAC_SW_EN            (BIT(21))
#define BIT_RF_IIS_DAC_WD               (BIT(20))
#define BIT_RF_IIS_ADC23_WD             (BIT(19))
#define BIT_RF_IIS_ADC01_WD             (BIT(18))
#define BIT_RF_IIS_ADC23_LR_MD          (BIT(17))
#define BIT_RF_IIS_ADC23_PCM_MD         (BIT(16))
#define BIT_RF_IIS_ADC23_LSB            (BIT(15))
#define BIT_RF_IIS_DAC_LR_MD            (BIT(14))
#define BIT_RF_IIS_ADC01_LR_MD          (BIT(13))
#define BIT_RF_IIS_DAC_PCM_MD           (BIT(12))
#define BIT_RF_IIS_ADC01_PCM_MD         (BIT(11))
#define BIT_RF_IIS_DAC_LSB              (BIT(10))
#define BIT_RF_IIS_ADC01_LSB            (BIT(9))
#define BITS_RF_IIS_DAC_SEL(_X_)        ((_X_) << 6 &\
(BIT(6)|BIT(7)|BIT(8)))
#define BITS_RF_IIS_ADC23_SEL(_X_)      ((_X_) << 3 &\
(BIT(3)|BIT(4)|BIT(5)))
#define BITS_RF_IIS_ADC01_SEL(_X_)      ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)))

/* bits definitions for register REG_VBC_VBC_DAC_PATH_CTRL */
#define BIT_RF_ST_FM_SEL                (BIT(8))
#define BITS_RF_DAC1_ADDST_SEL(_X_)     ((_X_) << 6 &\
(BIT(6)|BIT(7)))
#define BITS_RF_DAC0_ADDST_SEL(_X_)     ((_X_) << 4 &\
(BIT(4)|BIT(5)))
#define BITS_RF_DAC1_ADDFM_SEL(_X_)     ((_X_) << 2 &\
(BIT(2)|BIT(3)))
#define BITS_RF_DAC0_ADDFM_SEL(_X_)     ((_X_) << 0 &\
(BIT(0)|BIT(1)))

/* bits definitions for register REG_VBC_VBC_DAC_DG_CTRL */
#define BITS_RF_DAC_DGMIXER_STP(_X_)    ((_X_) << 18 &\
(BIT(18)|BIT(19)|BIT(20)|BIT(21)|BIT(22)|BIT(23)|BIT(24)|\
BIT(25)|BIT(26)|BIT(27)|BIT(28)|BIT(29)|BIT(30)))
#define BIT_RF_DAC1_DGMIXER_EN          (BIT(17))
#define BIT_RF_DAC0_DGMIXER_EN          (BIT(16))
#define BIT_RF_DAC1_DG_EN               (BIT(15))
#define BIT_RF_DAC0_DG_EN               (BIT(14))
#define BITS_RF_DAC1_DG_GAIN(_X_)       ((_X_) << 7 &\
(BIT(7)|BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)))
#define BITS_RF_DAC0_DG_GAIN(_X_)       ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)))

/* bits definitions for register REG_VBC_VBC_DAC_HP_CTRL */
#define BIT_RF_DAC_EQ4_REG_CLR          (BIT(15))
#define BIT_RF_DAC_EQ6_REG_CLR          (BIT(14))
#define BIT_RF_DAC_ALC_DP_T_MODE        (BIT(13))
#define BIT_RF_DAC_EQ4_POS_SEL          (BIT(12))
#define BIT_RF_DAC_ALC_EN               (BIT(11))
#define BIT_RF_DAC_EQ4_EN               (BIT(10))
#define BIT_RF_DAC_EQ6_EN               (BIT(9))
#define BITS_RF_DAC_R_LIMIT(_X_)        ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)))

/* bits definitions for register REG_VBC_VBC_DAC_ST_CTL0 */
#define ST_EN_0                         (12)

#define BIT_RF_ST_EN_0                  (BIT(12))
#define BIT_RF_ST_HPF_EN_0              (BIT(11))
#define BITS_RF_ST_HPF_DG_0(_X_)        ((_X_) << 4 &\
(BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)))
#define BITS_RF_ST_HPF_N_0(_X_)         ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)))

/* bits definitions for register REG_VBC_VBC_DAC_ST_CTL1 */

#define ST_EN_1                          (12)

#define BIT_RF_ST_SEL_CHN_1             (BIT(14))
#define BIT_RF_ST_SEL_CHN_0             (BIT(13))
#define BIT_RF_ST_EN_1                  (BIT(12))
#define BIT_RF_ST_HPF_EN_1              (BIT(11))
#define BITS_RF_ST_HPF_DG_1(_X_)        ((_X_) << 4 &\
(BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)|BIT(9)|BIT(10)))
#define BITS_RF_ST_HPF_N_1(_X_)         ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)))

/* bits definitions for register REG_VBC_VBC_ADC_PATH_CTRL */
#define BITS_RF_ST_INMUX_SEL1(_X_)      ((_X_) << 14 &\
(BIT(14)|BIT(15)))
#define BITS_RF_ST_INMUX_SEL0(_X_)      ((_X_) << 12 &\
(BIT(12)|BIT(13)))
#define BIT_RF_ADC3_DGMUX_SEL           (BIT(11))
#define BIT_RF_ADC2_DGMUX_SEL           (BIT(10))
#define BIT_RF_ADC1_DGMUX_SEL           (BIT(9))
#define BIT_RF_ADC0_DGMUX_SEL           (BIT(8))
#define BITS_RF_ADC3_INMUX_SEL(_X_)     ((_X_) << 6 &\
(BIT(6)|BIT(7)))
#define BITS_RF_ADC2_INMUX_SEL(_X_)     ((_X_) << 4 &\
(BIT(4)|BIT(5)))
#define BITS_RF_ADC1_INMUX_SEL(_X_)     ((_X_) << 2 &\
(BIT(2)|BIT(3)))
#define BITS_RF_ADC0_INMUX_SEL(_X_)     ((_X_) << 0 &\
(BIT(0)|BIT(1)))

/* bits definitions for register REG_VBC_VBC_ADC01_DG_CTRL */
#define BIT_RF_ADC1_DG_EN               (BIT(15))
#define BITS_RF_ADC1_DG_GAIN(_X_)       ((_X_) << 8 &\
(BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)))
#define BIT_RF_ADC0_DG_EN               (BIT(7))
#define BITS_RF_ADC0_DG_GAIN(_X_)       ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)))

/* bits definitions for register REG_VBC_VBC_ADC23_DG_CTRL */
#define BIT_RF_ADC3_DG_EN               (BIT(15))
#define BITS_RF_ADC3_DG_GAIN(_X_)       ((_X_) << 8 &\
(BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)))
#define BIT_RF_ADC2_DG_EN               (BIT(7))
#define BITS_RF_ADC2_DG_GAIN(_X_)       ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)))

/* bits definitions for register REG_VBC_VBC_ADC_EQ_CTRL */
#define BIT_RF_ADC23_EQ6_REG_CLR        (BIT(3))
#define BIT_RF_ADC01_EQ6_REG_CLR        (BIT(2))
#define BIT_RF_ADC23_EQ6_EN             (BIT(1))
#define BIT_RF_ADC01_EQ6_EN             (BIT(0))

/* bits definitions for register REG_VBC_VBC_ADC_SRC_CTRL */
#define BIT_RF_ADC23_SRC_F1_SEL         (BIT(12))
#define BIT_RF_ADC23_SRC_F1F2F3_BP      (BIT(11))
#define BIT_RF_ADC23_SRC_PAUSE          (BIT(10))
#define BIT_RF_ADC23_SRC_CLR            (BIT(9))
#define BIT_RF_ADC23_SRC_EN             (BIT(8))
#define BIT_RF_ADC01_SRC_F1_SEL         (BIT(4))
#define BIT_RF_ADC01_SRC_F1F2F3_BP      (BIT(3))
#define BIT_RF_ADC01_SRC_PAUSE          (BIT(2))
#define BIT_RF_ADC01_SRC_CLR            (BIT(1))
#define BIT_RF_ADC01_SRC_EN             (BIT(0))

/* bits definitions for register REG_VBC_VBC_DAC_SRC_CTRL */
#define BIT_RF_DAC_SRC_F0_SEL           (BIT(6))
#define BIT_RF_DAC_SRC_F0_BP            (BIT(5))
#define BIT_RF_DAC_SRC_F1_SEL           (BIT(4))
#define BIT_RF_DAC_SRC_F1F2F3_BP        (BIT(3))
#define BIT_RF_DAC_SRC_PAUSE            (BIT(2))
#define BIT_RF_DAC_SRC_CLR              (BIT(1))
#define BIT_RF_DAC_SRC_EN               (BIT(0))

/* bits definitions for register REG_VBC_VBC_MIXER_CTRL */
#define BIT_RF_ST_MIXER_OUT_SEL_1       (BIT(15))
#define BIT_RF_ST_MIXER_OUT_SEL_0       (BIT(14))
#define BITS_RF_ST_MIXER_MUX_SEL_1(_X_) ((_X_) << 11 &\
(BIT(11)|BIT(12)|BIT(13)))
#define BITS_RF_ST_MIXER_MUX_SEL_0(_X_) ((_X_) << 8 &\
(BIT(8)|BIT(9)|BIT(10)))
#define BIT_RF_DAC1_MIXER_OUT_SEL       (BIT(7))
#define BIT_RF_DAC0_MIXER_OUT_SEL       (BIT(6))
#define BITS_RF_DAC1_MIXER_MUX_SEL(_X_) ((_X_) << 3 &\
(BIT(3)|BIT(4)|BIT(5)))
#define BITS_RF_DAC0_MIXER_MUX_SEL(_X_) ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)))

/* bits definitions for register REG_VBC_VBC_ST_FIFO_CTRL */
#define BITS_RF_ST_FIFO_AE_LVL(_X_)     ((_X_) << 4 &\
(BIT(4)|BIT(5)|BIT(6)))
#define BITS_RF_ST_FIFO_AF_LVL(_X_)     ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)))

/* bits definitions for register REG_VBC_VBC_DAC_NGC_VTHD */
#define BITS_RF_DAC_NGC_VOICE_THD(_X_)  ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|\
BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)))

/* bits definitions for register REG_VBC_VBC_DAC_NGC_TTHD */
#define BITS_RF_DAC_NGC_TIMER_THD(_X_)  ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|\
BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)))

/* bits definitions for register REG_VBC_VBC_DAC_NGC_CTRL */
#define BITS_DAC1_NOISE_GATE_STS(_X_)   ((_X_) << 13 & (BIT(13)|BIT(14)))
#define BITS_DAC0_NOISE_GATE_STS(_X_)   ((_X_) << 11 & (BIT(11)|BIT(12)))
#define BITS_RF_DAC_NGC_DLY_SEL(_X_)    ((_X_) << 8 & (BIT(8)|BIT(9)|BIT(10)))
#define BITS_RF_DAC_NGC_CFG(_X_)        ((_X_) << 4 &\
(BIT(4)|BIT(5)|BIT(6)|BIT(7)))
#define BIT_RF_DAC_NGC_EN               (BIT(0))

/* bits definitions for register REG_VBC_VBC_CHN_EN */
#define BIT_RF_ADC3_DP_EN               (BIT(7))
#define BIT_RF_ADC2_DP_EN               (BIT(6))
#define BIT_RF_ADC1_DP_EN               (BIT(5))
#define BIT_RF_ADC0_DP_EN               (BIT(4))
#define BIT_RF_DAC3_DP_EN               (BIT(3))
#define BIT_RF_DAC2_DP_EN               (BIT(2))
#define BIT_RF_DAC1_DP_EN               (BIT(1))
#define BIT_RF_DAC0_DP_EN               (BIT(0))
/* bits definitions for register REG_VBC_VBC_DAC01_FIFO_LVL */
#define BITS_RF_DAC01_FIFO_AE_LVL(_X_)  ((_X_) << 9 &\
(BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)))
#define BITS_GET_RF_DAC01_FIFO_AE_LVL(_X_)    (((_X_) >> 9) & 0x1FF)

#define BITS_RF_DAC01_FIFO_AF_LVL(_X_)  ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)))
#define BITS_GET_RF_DAC01_FIFO_AF_LVL(_X_)    (((_X_) >> 0) & 0x1FF)

/* bits definitions for register REG_VBC_VBC_DAC23_FIFO_LVL */
#define BITS_RF_DAC23_FIFO_AE_LVL(_X_)  ((_X_) << 9 &\
(BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|BIT(16)|BIT(17)))
#define BITS_GET_RF_DAC23_FIFO_AE_LVL(_X_)    (((_X_) >> 9) & 0x1FF)

#define BITS_RF_DAC23_FIFO_AF_LVL(_X_)  ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)))
#define BITS_GET_RF_DAC23_FIFO_AF_LVL(_X_)    (((_X_) >> 0) & 0x1FF)

/* bits definitions for register REG_VBC_VBC_ADC01_FIFO_LVL */
#define BITS_RF_ADC01_FIFO_AE_LVL(_X_)  ((_X_) << 9 &\
(BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|\
BIT(16)|BIT(17)))
#define BITS_GET_RF_ADC01_FIFO_AE_LVL(_X_)   (((_X_) >> 9) & 0x1FF)

#define BITS_RF_ADC01_FIFO_AF_LVL(_X_)  ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)))
#define BITS_GET_RF_ADC01_FIFO_AF_LVL(_X_)    (((_X_) >> 0) & 0x1FF)

/* bits definitions for register REG_VBC_VBC_ADC23_FIFO_LVL */
#define BITS_RF_ADC23_FIFO_AE_LVL(_X_)  ((_X_) << 9 &\
(BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)|\
BIT(16)|BIT(17)))
#define BITS_GET_RF_ADC23_FIFO_AE_LVL(_X_)   (((_X_) >> 9) & 0x1FF)

#define BITS_RF_ADC23_FIFO_AF_LVL(_X_)  ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|BIT(8)))
#define BITS_GET_RF_ADC23_FIFO_AF_LVL(_X_)   (((_X_) >> 0) & 0x1FF)

/* bits definitions for register REG_VBC_VBC_FM_MUTE_CTL */
#define BIT_RF_FM_MUTE_DIRECT           (BIT(17))
#define BIT_RF_FM_MUTE_CTL              (BIT(16))
#define BIT_RF_FM_MUTE_CLR              (BIT(15))
#define BIT_RF_FM_MUTE_EN_1             (BIT(14))
#define BIT_RF_FM_MUTE_EN_0             (BIT(13))
#define BITS_RF_FM_MUTE_DG_STP(_X_)     ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|\
BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)))

/* bits definitions for register REG_VBC_VBC_VERSION */
#define BITS_RF_VBC_VERSION(_X_)        ((_X_) << 0 &\
(BIT(0)|BIT(1)|BIT(2)|BIT(3)|BIT(4)|BIT(5)|BIT(6)|BIT(7)|\
BIT(8)|BIT(9)|BIT(10)|BIT(11)|BIT(12)|BIT(13)|BIT(14)|BIT(15)))

/* bits definitions for register REG_VBC_VBC_DAC_TONE_GEN_CTRL */
#define BIT_RF_DAC_VT_TONE_ON           (BIT(1))
#define BIT_RF_DAC_PT_TONE_ON           (BIT(0))

/* bits definitions for register REG_VBC_VBC_DAC_TONE_GEN_EN */
#define BIT_RF_DAC_NCHFLT_BD2_EN_1      (BIT(8))
#define BIT_RF_DAC_NCHFLT_BD1_EN_1      (BIT(7))
#define BIT_RF_DAC_NCHFLT_BD0_EN_1      (BIT(6))
#define BIT_RF_DAC_NCHFLT_BD2_EN_0      (BIT(5))
#define BIT_RF_DAC_NCHFLT_BD1_EN_0      (BIT(4))
#define BIT_RF_DAC_NCHFLT_BD0_EN_0      (BIT(3))
#define BIT_RF_DAC_VT_TONE_EN           (BIT(2))
#define BIT_RF_DAC_PT_TONE_EN           (BIT(1))
#define BIT_RF_DAC_NCHFLT_EN            (BIT(0))

/* bits definitions for REG_VBC_VBC_DAC0_FIFO_STS */
#define BIT_DAC0_FIFO_EMPTY             (BIT(18))

/* bits definitions for REG_VBC_VBC_DAC1_FIFO_STS */
#define BIT_DAC1_FIFO_EMPTY             (BIT(18))

/* bits definitions for REG_VBC_VBC_DAC2_FIFO_STS */
#define BIT_DAC2_FIFO_EMPTY             (BIT(18))

/* bits definitions for REG_VBC_VBC_DAC3_FIFO_STS */
#define BIT_DAC3_FIFO_EMPTY             (BIT(18))

#define IS_SPRD_VBC_RANG(reg)    (((reg) >= ARM_VB_BASE)\
&& ((reg) < ARM_VB_END))
/* SPRD_VBC_BASE_HI = 0x1000 & 0xFFFF0000 = 0 */
#define SPRD_VBC_BASE_HI    (ARM_VB_BASE & 0xFFFF0000)

typedef int (*vbc_dg_set) (int enable, int dg);

/* array[0] is not used, array[1] left channel,
 * array[2] right channel
 */
struct vbc_dg {
	int dg_switch[AUDIO_ARRAY_MAX];
	int dg_val[AUDIO_ARRAY_MAX];
	vbc_dg_set dg_set[AUDIO_ARRAY_MAX];
};

/* array[0] is not used, array[1] left channel,
 * array[2] right channel
 */
struct st_hpf_dg {
	int hpf_switch[AUDIO_ARRAY_MAX];
	int dg_val[AUDIO_ARRAY_MAX];
	int hpf_val[AUDIO_ARRAY_MAX];
};
struct vbc_fw_header {
	char magic[VBC_EQ_FIRMWARE_MAGIC_LEN];
	u32 profile_version;
	/* total count */
	u32 num_profile;
	/* count of each EQ */
	u32 num_da[VBC_EQ_MAX];
};

struct vbc_da_eq_profile {
	char magic[VBC_EQ_FIRMWARE_MAGIC_LEN];
	char name[VBC_EQ_PROFILE_NAME_MAX];
	/* TODO */
	u32 effect_paras[VBC_DA_EFFECT_PARAS_LEN];
};

struct vbc_ad_eq_profile {
	char magic[VBC_EQ_FIRMWARE_MAGIC_LEN];
	char name[VBC_EQ_PROFILE_NAME_MAX];
	/* TODO */
	u32 effect_paras[VBC_AD_EFFECT_PARAS_LEN];
};
struct vbc_equ {
	struct device *dev;
	struct snd_soc_codec *codec;
	int is_active[VBC_EQ_MAX];
	int is_loading;
	int is_loaded;
	int valid;
	int now_profile[VBC_EQ_MAX];
	struct vbc_fw_header hdr;
	void *data[VBC_EQ_MAX];
	void (*vbc_eq_apply)(struct snd_soc_codec *codec, void *data,
			      int vbc_eq_idx);
	int eq_fw_name_idx;
};

typedef int (*sprd_vbc_mux_set) (int sel);
struct sprd_vbc_mux_op {
	int val;
	sprd_vbc_mux_set set;
};

struct vbc_codec_priv {
	struct snd_soc_codec *codec;
	struct vbc_equ vbc_eq_setting;
	int32_t hal_put_eq_profile[VBC_EQ_MAX];
	spinlock_t lock_eq_idx;
	struct mutex load_mutex;
	struct wakeup_source wake_lock;
	int vbc_control;
	int vbc_int_control;
	int vbc_dma_control;
	int vbc_loop_switch[SPRD_VBC_SWITCH_IDX(VBC_LOOP_SWITCH_MAX)];
	struct vbc_dg dg[VBC_DG_MAX];
	int vbc_da_iis_port;
	int adc_dgmux_val[ADC_DGMUX_MAX];
	struct st_hpf_dg st_dg;
	struct sprd_vbc_mux_op sprd_vbc_mux[SPRD_VBC_MUX_MAX];
	int alc_dp_t_mode;
	u32 dynamic_eq_support;
	/* da01, ad01, ad23 */
	u32 vbc_iis_lr_invert[3];
	u32 vbc_use_dma_type[VBC_IDX_MAX];
	int vbc_da_src;
	int fm_mute_direct;
	int fm_mute_smooth;
	int vbc_da_iis_width;
	int vbc_da_iis_lrmod;
	int vbc_ad01_iis_lrmod;
	int vbc_ad23_iis_lrmod;
	struct pinctrl *pctrl;
	unsigned short sys_iis_sel[SYS_IIS_MAX - SYS_IIS_START];
	struct mutex fm_mutex;
	int32_t dgmixer01[AUDIO_ARRAY_MAX];
	int32_t dgmixer23[AUDIO_ARRAY_MAX];
	int32_t dgmixerstep_da23;
	int32_t dgmixerstep_da01;
	int32_t fm_mutedg_step;
	unsigned int vbc_access_en;
	unsigned int mixer_mux_sel[VBC_MIXER_MAX][CHAN_IDX_MAX];
	unsigned int mixer_out_sel[VBC_MIXER_MAX][CHAN_IDX_MAX];
	bool ad01_to_fm;
	u32 vbc_use_ad01_only;
	/* lock for ad01_to_fm */
	spinlock_t ad01_spinlock;
	char firmware_path[AUD_FIRMWARE_PATHNAME_LEN_MAX];
	u32 iis_bt_fm_loop[2];
	unsigned short iis_bt_fm_loop_en;
};

static const char *vbc_get_name(int vbc_idx);
static const char *vbc_get_eq_name(int vbc_eq_idx);
static const char *vbc_get_ad_src_name(int vbc_idx);
static const char *vbc_get_dg_name(int dg_idx);
static int32_t vbc_idx_to_ad_src_idx(int vbc_idx);
static int32_t vbc_idx_to_eq_idx(int vbc_idx);
static int32_t vbc_idx_to_dg_idx(int vbc_idx);

static u32 vbc_reg_read(unsigned int reg);
static void vbc_reg_raw_write(unsigned int reg, uint32_t val);
static int vbc_reg_write(unsigned int reg, uint32_t val);
static int vbc_reg_update(unsigned int reg, uint32_t val, uint32_t mask);
static int vbc_power(int enable);
static int vbc_sleep_xtl_en(bool enable);
static int vbc_chan_enable(int enable, int vbc_idx, int chan);
static int vbc_ad_src_set(int rate, int vbc_ad_src_idx);
static void pre_fill_data(int enable);
static int vbc_component_startup(int vbc_idx, struct snd_soc_dai *dai);
static int vbc_set_phys_addr(int vbc_switch);

static inline void vbc_safe_mem_release(void **free)
{
	if (*free) {
		kfree(*free);
		*free = NULL;
	}
}

#define vbc_safe_kfree(p) vbc_safe_mem_release((void **)p)

#endif /* __VBC_COMM_H */
